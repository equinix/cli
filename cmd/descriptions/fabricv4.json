{
  "services": {
    "client-interfaces": {
      "service_name": "client-interfaces",
      "service_description": "",
      "methods": {
        "CreateTerraformTemplates": {
          "short_description": "Generate Terraform Deployment Templates",
          "long_description": "The Client Interfaces API is used to generate Terraform Templates based on Deployment details.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "deploymentId",
              "description": "Deployment UUID"
            }
          ]
        },
        "CreateTerraformTemplatesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateTerraformTemplatesRequest": {
          "type_name": "ApiCreateTerraformTemplatesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "clientInterfaces": {
              "name": "clientInterfaces",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "deploymentId": {
              "name": "deploymentId",
              "description": ""
            }
          }
        }
      }
    },
    "cloud-events": {
      "service_name": "cloud-events",
      "service_description": "",
      "methods": {
        "GetCloudEvent": {
          "short_description": "Get Cloud Event",
          "long_description": "This API provides capability to retrieve a cloud event by uuid",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "cloudEventId",
              "description": "Cloud Event UUID"
            }
          ]
        },
        "GetCloudEventByAssetId": {
          "short_description": "Get Cloud Events by Asset Id",
          "long_description": "This API provides capability to retrieve cloud events of an asset id",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "asset",
              "description": "asset"
            },
            {
              "name": "assetId",
              "description": "asset UUID"
            }
          ]
        },
        "GetCloudEventByAssetIdExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetCloudEventExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchCloudEvents": {
          "short_description": "Search Cloud Events",
          "long_description": "This API provides capability to search cloud events from a filtered query",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchCloudEventsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiGetCloudEventByAssetIdRequest": {
          "type_name": "ApiGetCloudEventByAssetIdRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "asset": {
              "name": "asset",
              "description": ""
            },
            "assetId": {
              "name": "assetId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "fromDateTime": {
              "name": "fromDateTime",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "toDateTime": {
              "name": "toDateTime",
              "description": ""
            }
          }
        },
        "ApiGetCloudEventRequest": {
          "type_name": "ApiGetCloudEventRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "cloudEventId": {
              "name": "cloudEventId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiSearchCloudEventsRequest": {
          "type_name": "ApiSearchCloudEventsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "cloudEventSearchRequest": {
              "name": "cloudEventSearchRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        }
      }
    },
    "cloud-routers": {
      "service_name": "cloud-routers",
      "service_description": "",
      "methods": {
        "CreateCloudRouter": {
          "short_description": "Create Routers",
          "long_description": "This API provides capability to create user's Cloud Routers",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateCloudRouterAction": {
          "short_description": "Create Route Table Action",
          "long_description": "This API provides capability to refresh route table and bgp session summary information",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            }
          ]
        },
        "CreateCloudRouterActionExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateCloudRouterCommand": {
          "short_description": "Initiate Command",
          "long_description": "This API provides capability to initiate Command",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            }
          ]
        },
        "CreateCloudRouterCommandExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateCloudRouterExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteCloudRouterByUuid": {
          "short_description": "Delete Routers",
          "long_description": "This API provides capability to delete user's Cloud Routers",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Cloud Router UUID"
            }
          ]
        },
        "DeleteCloudRouterByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteCloudRouterCommandByUuid": {
          "short_description": "Delete Command",
          "long_description": "This API provides capability to delete command based on command Id",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            },
            {
              "name": "commandId",
              "description": "Command UUID"
            }
          ]
        },
        "DeleteCloudRouterCommandByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetAllCloudRouterCommands": {
          "short_description": "Get Commands",
          "long_description": "This API provides capability to fetch all commands",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            }
          ]
        },
        "GetAllCloudRouterCommandsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetCloudRouterActions": {
          "short_description": "Get Route Table Actions",
          "long_description": "This API provides capability to fetch action status",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            }
          ]
        },
        "GetCloudRouterActionsByUuid": {
          "short_description": "Get Route Table Action by ID",
          "long_description": "This API provides capability to fetch action status",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            },
            {
              "name": "actionId",
              "description": "Action UUID"
            }
          ]
        },
        "GetCloudRouterActionsByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetCloudRouterActionsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetCloudRouterByUuid": {
          "short_description": "Get Routers",
          "long_description": "This API provides capability to retrieve user's Cloud Routers",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Cloud Router UUID"
            }
          ]
        },
        "GetCloudRouterByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetCloudRouterCommand": {
          "short_description": "Get Command",
          "long_description": "This API provides capability to fetch command using command Id",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            },
            {
              "name": "commandId",
              "description": "Command UUID"
            }
          ]
        },
        "GetCloudRouterCommandExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetCloudRouterPackageByCode": {
          "short_description": "Get Package Details",
          "long_description": "This API provides capability to retrieve user's Cloud Routers Package Details",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerPackageCode",
              "description": "assigned Cloud Router package identifier"
            }
          ]
        },
        "GetCloudRouterPackageByCodeExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetCloudRouterPackages": {
          "short_description": "List Packages",
          "long_description": "This API provides capability to retrieve user's Cloud Routers Packages",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "GetCloudRouterPackagesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchCloudRouterCommands": {
          "short_description": "Search Commands",
          "long_description": "This API provides capability to search commands",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            }
          ]
        },
        "SearchCloudRouterCommandsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchCloudRouterRoutes": {
          "short_description": "Search Route Table",
          "long_description": "The API provides capability to get list of user's Fabric Cloud Router route table entries using search criteria, including optional filtering, pagination and sorting",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            }
          ]
        },
        "SearchCloudRouterRoutesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchCloudRouters": {
          "short_description": "Search Routers",
          "long_description": "The API provides capability to get list of user's Cloud Routers using search criteria, including optional filtering, pagination and sorting",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchCloudRoutersExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchConnectionAdvertisedRoutes": {
          "short_description": "Search Advertised Routes",
          "long_description": "The API provides capability to get list of user's advertised routes using search criteria, including optional filtering, pagination and sorting",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "SearchConnectionAdvertisedRoutesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchConnectionReceivedRoutes": {
          "short_description": "Search Received Routes",
          "long_description": "The API provides capability to get list of received routes using search criteria, including optional filtering, pagination and sorting",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "SearchConnectionReceivedRoutesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchRouterActions": {
          "short_description": "Search Route Table Actions",
          "long_description": "This API provides capability to refresh route table and bgp session summary information",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Router UUID"
            }
          ]
        },
        "SearchRouterActionsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateCloudRouterByUuid": {
          "short_description": "Update Routers",
          "long_description": "This API provides capability to update user's Cloud Routers",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Cloud Router UUID"
            }
          ]
        },
        "UpdateCloudRouterByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateCloudRouterActionRequest": {
          "type_name": "ApiCreateCloudRouterActionRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "cloudRouterActionRequest": {
              "name": "cloudRouterActionRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiCreateCloudRouterCommandRequest": {
          "type_name": "ApiCreateCloudRouterCommandRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "cloudRouterCommandPostRequest": {
              "name": "cloudRouterCommandPostRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiCreateCloudRouterRequest": {
          "type_name": "ApiCreateCloudRouterRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "cloudRouterPostRequest": {
              "name": "cloudRouterPostRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "dryRun": {
              "name": "dryRun",
              "description": ""
            }
          }
        },
        "ApiDeleteCloudRouterByUuidRequest": {
          "type_name": "ApiDeleteCloudRouterByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiDeleteCloudRouterCommandByUuidRequest": {
          "type_name": "ApiDeleteCloudRouterCommandByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "commandId": {
              "name": "commandId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiGetAllCloudRouterCommandsRequest": {
          "type_name": "ApiGetAllCloudRouterCommandsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiGetCloudRouterActionsByUuidRequest": {
          "type_name": "ApiGetCloudRouterActionsByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "actionId": {
              "name": "actionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            },
            "state": {
              "name": "state",
              "description": ""
            }
          }
        },
        "ApiGetCloudRouterActionsRequest": {
          "type_name": "ApiGetCloudRouterActionsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            },
            "state": {
              "name": "state",
              "description": ""
            }
          }
        },
        "ApiGetCloudRouterByUuidRequest": {
          "type_name": "ApiGetCloudRouterByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiGetCloudRouterCommandRequest": {
          "type_name": "ApiGetCloudRouterCommandRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "commandId": {
              "name": "commandId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiGetCloudRouterPackageByCodeRequest": {
          "type_name": "ApiGetCloudRouterPackageByCodeRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerPackageCode": {
              "name": "routerPackageCode",
              "description": ""
            }
          }
        },
        "ApiGetCloudRouterPackagesRequest": {
          "type_name": "ApiGetCloudRouterPackagesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            }
          }
        },
        "ApiSearchCloudRouterCommandsRequest": {
          "type_name": "ApiSearchCloudRouterCommandsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "cloudRouterCommandSearchRequest": {
              "name": "cloudRouterCommandSearchRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiSearchCloudRouterRoutesRequest": {
          "type_name": "ApiSearchCloudRouterRoutesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeTableEntrySearchRequest": {
              "name": "routeTableEntrySearchRequest",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiSearchCloudRoutersRequest": {
          "type_name": "ApiSearchCloudRoutersRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "cloudRouterSearchRequest": {
              "name": "cloudRouterSearchRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiSearchConnectionAdvertisedRoutesRequest": {
          "type_name": "ApiSearchConnectionAdvertisedRoutesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "connectionRouteSearchRequest": {
              "name": "connectionRouteSearchRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiSearchConnectionReceivedRoutesRequest": {
          "type_name": "ApiSearchConnectionReceivedRoutesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "connectionRouteSearchRequest": {
              "name": "connectionRouteSearchRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiSearchRouterActionsRequest": {
          "type_name": "ApiSearchRouterActionsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "cloudRouterActionsSearchRequest": {
              "name": "cloudRouterActionsSearchRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        },
        "ApiUpdateCloudRouterByUuidRequest": {
          "type_name": "ApiUpdateCloudRouterByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "cloudRouterChangeOperation": {
              "name": "cloudRouterChangeOperation",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            }
          }
        }
      }
    },
    "connections": {
      "service_name": "connections",
      "service_description": "",
      "methods": {
        "CreateConnection": {
          "short_description": "Create Connection",
          "long_description": "This API provides capability to create user's virtual connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateConnectionAction": {
          "short_description": "Connection Actions",
          "long_description": "This API provides capability to accept/reject user's virtual connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "CreateConnectionActionExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateConnectionExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteConnectionByUuid": {
          "short_description": "Delete by ID",
          "long_description": "Delete Connection by ID",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection UUID"
            }
          ]
        },
        "DeleteConnectionByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionByUuid": {
          "short_description": "Get Connection by ID",
          "long_description": "The API provides capability to get user's virtual connection details (Service Tokens, Access Points, Link Protocols, etc) by it's connection ID (UUID)",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "GetConnectionByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchConnections": {
          "short_description": "Search connections",
          "long_description": "The API provides capability to get list of user's virtual connections using search criteria, including optional filtering, pagination and sorting",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchConnectionsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateConnectionByUuid": {
          "short_description": "Update by ID",
          "long_description": "Update Connection by ID",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "UpdateConnectionByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "ValidateConnections": {
          "short_description": "Validate Connection",
          "long_description": "This API provides capability to validate by auth key",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "ValidateConnectionsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateConnectionActionRequest": {
          "type_name": "ApiCreateConnectionActionRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionActionRequest": {
              "name": "connectionActionRequest",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiCreateConnectionRequest": {
          "type_name": "ApiCreateConnectionRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionPostRequest": {
              "name": "connectionPostRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "dryRun": {
              "name": "dryRun",
              "description": ""
            }
          }
        },
        "ApiDeleteConnectionByUuidRequest": {
          "type_name": "ApiDeleteConnectionByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiGetConnectionByUuidRequest": {
          "type_name": "ApiGetConnectionByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "direction": {
              "name": "direction",
              "description": ""
            }
          }
        },
        "ApiSearchConnectionsRequest": {
          "type_name": "ApiSearchConnectionsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "searchRequest": {
              "name": "searchRequest",
              "description": ""
            }
          }
        },
        "ApiUpdateConnectionByUuidRequest": {
          "type_name": "ApiUpdateConnectionByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionChangeOperation": {
              "name": "connectionChangeOperation",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "dryRun": {
              "name": "dryRun",
              "description": ""
            }
          }
        },
        "ApiValidateConnectionsRequest": {
          "type_name": "ApiValidateConnectionsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "validateRequest": {
              "name": "validateRequest",
              "description": ""
            }
          }
        }
      }
    },
    "deployments": {
      "service_name": "deployments",
      "service_description": "",
      "methods": {
        "ActionDeployment": {
          "short_description": "Deploy, Dry Run or Destroy Deployment",
          "long_description": "The deployment action is used to deploy, dry run or destroy a deployment. The request body must contain the type of action to be performed and the connection details. The response will contain the status of the action.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "deploymentId",
              "description": "Deployment UUID"
            }
          ]
        },
        "ActionDeploymentExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateTopologyDeployment": {
          "short_description": "Create a new topology deployment",
          "long_description": "The deployment API is used to creates new deployment topologies. It allows users to define the properties of the deployment, including Fabric and CSP providers.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateTopologyDeploymentExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteDeployment": {
          "short_description": "Delete Deployment using UUID",
          "long_description": "This API provides capability to delete user's deployment",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "deploymentId",
              "description": "Deployment UUID"
            }
          ]
        },
        "DeleteDeploymentExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetDeployment": {
          "short_description": "Retrieve Deployment details using UUID",
          "long_description": "This API provides capability to retrieve user's deployment details.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "deploymentId",
              "description": "Deployment UUID"
            }
          ]
        },
        "GetDeploymentExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchDeployments": {
          "short_description": "Search deployments",
          "long_description": "The API provides capability to get list of user's deployment using search criteria.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchDeploymentsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchProviderResources": {
          "short_description": "Search provider resources",
          "long_description": "The API provides capability to get list of user's provider resources using search criteria, including optional filtering",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchProviderResourcesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiActionDeploymentRequest": {
          "type_name": "ApiActionDeploymentRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "deploymentActionRequest": {
              "name": "deploymentActionRequest",
              "description": ""
            },
            "deploymentId": {
              "name": "deploymentId",
              "description": ""
            }
          }
        },
        "ApiCreateTopologyDeploymentRequest": {
          "type_name": "ApiCreateTopologyDeploymentRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "deployment": {
              "name": "deployment",
              "description": ""
            }
          }
        },
        "ApiDeleteDeploymentRequest": {
          "type_name": "ApiDeleteDeploymentRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "deploymentId": {
              "name": "deploymentId",
              "description": ""
            }
          }
        },
        "ApiGetDeploymentRequest": {
          "type_name": "ApiGetDeploymentRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "deploymentId": {
              "name": "deploymentId",
              "description": ""
            }
          }
        },
        "ApiSearchDeploymentsRequest": {
          "type_name": "ApiSearchDeploymentsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "deploymentSearchRequest": {
              "name": "deploymentSearchRequest",
              "description": ""
            }
          }
        },
        "ApiSearchProviderResourcesRequest": {
          "type_name": "ApiSearchProviderResourcesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "providerSearchRequest": {
              "name": "providerSearchRequest",
              "description": ""
            }
          }
        }
      }
    },
    "health": {
      "service_name": "health",
      "service_description": "",
      "methods": {
        "GetStatus": {
          "short_description": "Get service status",
          "long_description": "GET All service health statys with an option query parameter to return all Equinix Fabric customer in which the customer has a presence.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "GetStatusExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiGetStatusRequest": {
          "type_name": "ApiGetStatusRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        }
      }
    },
    "marketplace-subscriptions": {
      "service_name": "marketplace-subscriptions",
      "service_description": "",
      "methods": {
        "GetSubscriptionById": {
          "short_description": "Get Subscription",
          "long_description": "The API provides capability to get subscription",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "subscriptionId",
              "description": "Subscription UUID"
            }
          ]
        },
        "GetSubscriptionByIdExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiGetSubscriptionByIdRequest": {
          "type_name": "ApiGetSubscriptionByIdRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "subscriptionId": {
              "name": "subscriptionId",
              "description": ""
            }
          }
        }
      }
    },
    "metrics": {
      "service_name": "metrics",
      "service_description": "",
      "methods": {
        "GetMetricByAssetId": {
          "short_description": "Get Metrics by Asset Id",
          "long_description": "This API provides capability to retrieve Metrics of an asset id",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "asset",
              "description": "asset"
            },
            {
              "name": "assetId",
              "description": "asset UUID"
            }
          ]
        },
        "GetMetricByAssetIdExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiGetMetricByAssetIdRequest": {
          "type_name": "ApiGetMetricByAssetIdRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "asset": {
              "name": "asset",
              "description": ""
            },
            "assetId": {
              "name": "assetId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "fromDateTime": {
              "name": "fromDateTime",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "name": {
              "name": "name",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "toDateTime": {
              "name": "toDateTime",
              "description": ""
            }
          }
        }
      }
    },
    "metros": {
      "service_name": "metros",
      "service_description": "",
      "methods": {
        "GetMetroByCode": {
          "short_description": "Get Metro by Code",
          "long_description": "GET Metros retrieves all Equinix Fabric metros, as well as latency data between each metro location.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "metroCode",
              "description": "Metro Code"
            }
          ]
        },
        "GetMetroByCodeExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetMetros": {
          "short_description": "Get all Metros",
          "long_description": "GET All Subscriber Metros with an option query parameter to return all Equinix Fabric metros in which the customer has a presence, as well as latency data for each location.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "GetMetrosExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiGetMetroByCodeRequest": {
          "type_name": "ApiGetMetroByCodeRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "metroCode": {
              "name": "metroCode",
              "description": ""
            }
          }
        },
        "ApiGetMetrosRequest": {
          "type_name": "ApiGetMetrosRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "presence": {
              "name": "presence",
              "description": ""
            }
          }
        }
      }
    },
    "networks": {
      "service_name": "networks",
      "service_description": "",
      "methods": {
        "CreateNetwork": {
          "short_description": "Create Network",
          "long_description": "This API provides capability to create user's Fabric Network",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateNetworkExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteNetworkByUuid": {
          "short_description": "Delete Network By ID",
          "long_description": "This API provides capability to delete user's Fabric Network",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "networkId",
              "description": "Network UUID"
            }
          ]
        },
        "DeleteNetworkByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionsByNetworkUuid": {
          "short_description": "Get Connections",
          "long_description": "The API provides capability to get list of user's Fabric Network connections",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "networkId",
              "description": "Network UUID"
            }
          ]
        },
        "GetConnectionsByNetworkUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetNetworkByUuid": {
          "short_description": "Get Network By ID",
          "long_description": "This API provides capability to retrieve user's Fabric Network",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "networkId",
              "description": "Network UUID"
            }
          ]
        },
        "GetNetworkByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetNetworkChangeByUuid": {
          "short_description": "Get Change By ID",
          "long_description": "This API provides capability to retrieve user's Fabric Network Change",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "networkId",
              "description": "Network UUID"
            },
            {
              "name": "changeId",
              "description": "Network Change UUID"
            }
          ]
        },
        "GetNetworkChangeByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetNetworkChanges": {
          "short_description": "Get Network Changes",
          "long_description": "The API provides capability to get list of user's Fabric Network changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "networkId",
              "description": "Network UUID"
            }
          ]
        },
        "GetNetworkChangesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchNetworks": {
          "short_description": "Search Network",
          "long_description": "The API provides capability to get list of user's Fabric Network using search criteria, including optional filtering, pagination and sorting",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchNetworksExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateNetworkByUuid": {
          "short_description": "Update Network By ID",
          "long_description": "This API provides capability to update user's Fabric Network",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "networkId",
              "description": "Network UUID"
            }
          ]
        },
        "UpdateNetworkByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateNetworkRequest": {
          "type_name": "ApiCreateNetworkRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "dryRun": {
              "name": "dryRun",
              "description": ""
            },
            "networkPostRequest": {
              "name": "networkPostRequest",
              "description": ""
            }
          }
        },
        "ApiDeleteNetworkByUuidRequest": {
          "type_name": "ApiDeleteNetworkByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "networkId": {
              "name": "networkId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionsByNetworkUuidRequest": {
          "type_name": "ApiGetConnectionsByNetworkUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "networkId": {
              "name": "networkId",
              "description": ""
            }
          }
        },
        "ApiGetNetworkByUuidRequest": {
          "type_name": "ApiGetNetworkByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "networkId": {
              "name": "networkId",
              "description": ""
            }
          }
        },
        "ApiGetNetworkChangeByUuidRequest": {
          "type_name": "ApiGetNetworkChangeByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "changeId": {
              "name": "changeId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "networkId": {
              "name": "networkId",
              "description": ""
            }
          }
        },
        "ApiGetNetworkChangesRequest": {
          "type_name": "ApiGetNetworkChangesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "networkId": {
              "name": "networkId",
              "description": ""
            }
          }
        },
        "ApiSearchNetworksRequest": {
          "type_name": "ApiSearchNetworksRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "networkSearchRequest": {
              "name": "networkSearchRequest",
              "description": ""
            }
          }
        },
        "ApiUpdateNetworkByUuidRequest": {
          "type_name": "ApiUpdateNetworkByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "networkChangeOperation": {
              "name": "networkChangeOperation",
              "description": ""
            },
            "networkId": {
              "name": "networkId",
              "description": ""
            }
          }
        }
      }
    },
    "ports": {
      "service_name": "ports",
      "service_description": "",
      "methods": {
        "AddToLag": {
          "short_description": "Add to Lag",
          "long_description": "Add Physical Ports to Virtual Port.\u003cfont color=\"red\"\u003e \u003csup color='red'\u003ePreview\u003c/sup\u003e\u003c/font\u003e",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "portId",
              "description": "Port UUID"
            }
          ]
        },
        "AddToLagExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreatePort": {
          "short_description": "Create Port",
          "long_description": "Creates Equinix Fabric™ Port.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreatePortExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeletePort": {
          "short_description": "Delete a single port",
          "long_description": "The API provides capability to delete a single port",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "portId",
              "description": "Port UUID"
            }
          ]
        },
        "DeletePortExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetPortByUuid": {
          "short_description": "Get Port by uuid",
          "long_description": "Get Port By uuid returns details of assigned and available Equinix Fabric port for the specified user credentials. The metro code attribute in the response shows the origin of the proposed connection.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "portId",
              "description": "Port UUID"
            }
          ]
        },
        "GetPortByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetPorts": {
          "short_description": "Get All Ports",
          "long_description": "Get All Ports returns details of all assigned and available ports for the specified user credentials. The metro attribute in the response shows the origin of the proposed connection.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "GetPortsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetVlans": {
          "short_description": "Get Vlans",
          "long_description": "The API provides capability to retrieve Vlans for a Port.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "portUuid",
              "description": "Port UUID"
            }
          ]
        },
        "GetVlansExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchPorts": {
          "short_description": "Search ports",
          "long_description": "The API provides capability to get list of user's virtual ports using search criteria, including optional filtering, pagination and sorting",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchPortsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdatePortByUuid": {
          "short_description": "Update by UUID",
          "long_description": "Update Port by UUID",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "portId",
              "description": "Port UUID"
            }
          ]
        },
        "UpdatePortByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiAddToLagRequest": {
          "type_name": "ApiAddToLagRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "bulkPhysicalPort": {
              "name": "bulkPhysicalPort",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "portId": {
              "name": "portId",
              "description": ""
            }
          }
        },
        "ApiCreatePortRequest": {
          "type_name": "ApiCreatePortRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "dryRun": {
              "name": "dryRun",
              "description": ""
            },
            "portRequest": {
              "name": "portRequest",
              "description": ""
            }
          }
        },
        "ApiDeletePortRequest": {
          "type_name": "ApiDeletePortRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "dryRun": {
              "name": "dryRun",
              "description": ""
            },
            "portId": {
              "name": "portId",
              "description": ""
            }
          }
        },
        "ApiGetPortByUuidRequest": {
          "type_name": "ApiGetPortByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "portId": {
              "name": "portId",
              "description": ""
            }
          }
        },
        "ApiGetPortsRequest": {
          "type_name": "ApiGetPortsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "name": {
              "name": "name",
              "description": ""
            }
          }
        },
        "ApiGetVlansRequest": {
          "type_name": "ApiGetVlansRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "portUuid": {
              "name": "portUuid",
              "description": ""
            }
          }
        },
        "ApiSearchPortsRequest": {
          "type_name": "ApiSearchPortsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "portV4SearchRequest": {
              "name": "portV4SearchRequest",
              "description": ""
            }
          }
        },
        "ApiUpdatePortByUuidRequest": {
          "type_name": "ApiUpdatePortByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "dryRun": {
              "name": "dryRun",
              "description": ""
            },
            "portChangeOperation": {
              "name": "portChangeOperation",
              "description": ""
            },
            "portId": {
              "name": "portId",
              "description": ""
            }
          }
        }
      }
    },
    "precision-time": {
      "service_name": "precision-time",
      "service_description": "",
      "methods": {
        "CreateTimeServices": {
          "short_description": "Create Time Service",
          "long_description": "The API provides capability to create Precision Time service",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateTimeServicesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteTimeServiceById": {
          "short_description": "Delete by ID.",
          "long_description": "The API provides capability to delete Precision Time Service by service id.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceId",
              "description": "Service UUID"
            }
          ]
        },
        "DeleteTimeServiceByIdExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "FulfillTimeServices": {
          "short_description": "Configure Service.",
          "long_description": "The API provides capability to Configure/Fulfill the Precision Time Service.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceId",
              "description": "Service UUID"
            }
          ]
        },
        "FulfillTimeServicesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetTimeServicesById": {
          "short_description": "Get Service By ID.",
          "long_description": "The API provides capability to get Precision Time Service details",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceId",
              "description": "Service UUID"
            }
          ]
        },
        "GetTimeServicesByIdExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetTimeServicesConnectionsByServiceId": {
          "short_description": "Get Connection Links",
          "long_description": "The API provides capability to get prevision timing service's details",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceId",
              "description": "Service UUID"
            }
          ]
        },
        "GetTimeServicesConnectionsByServiceIdExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetTimeServicesPackageByCode": {
          "short_description": "Get Package By Code",
          "long_description": "The API provides capability to get timing service's package by code",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "packageCode",
              "description": "Package Code"
            }
          ]
        },
        "GetTimeServicesPackageByCodeExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetTimeServicesPackages": {
          "short_description": "Get Packages",
          "long_description": "The API provides capability to get timing service's packages",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "GetTimeServicesPackagesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchTimeServices": {
          "short_description": "Search Time Services",
          "long_description": "The API provides capability to get list of user's Time Services using search criteria, including optional filtering, pagination and sorting",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchTimeServicesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateTimeServicesById": {
          "short_description": "Update By ID.",
          "long_description": "The API provides capability to update Precision Time Service by service id.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceId",
              "description": "Service UUID"
            }
          ]
        },
        "UpdateTimeServicesByIdExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateTimeServicesRequest": {
          "type_name": "ApiCreateTimeServicesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "precisionTimeServiceRequest": {
              "name": "precisionTimeServiceRequest",
              "description": ""
            }
          }
        },
        "ApiDeleteTimeServiceByIdRequest": {
          "type_name": "ApiDeleteTimeServiceByIdRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceId": {
              "name": "serviceId",
              "description": ""
            }
          }
        },
        "ApiFulfillTimeServicesRequest": {
          "type_name": "ApiFulfillTimeServicesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "precisionTimeServiceRequest": {
              "name": "precisionTimeServiceRequest",
              "description": ""
            },
            "serviceId": {
              "name": "serviceId",
              "description": ""
            }
          }
        },
        "ApiGetTimeServicesByIdRequest": {
          "type_name": "ApiGetTimeServicesByIdRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceId": {
              "name": "serviceId",
              "description": ""
            }
          }
        },
        "ApiGetTimeServicesConnectionsByServiceIdRequest": {
          "type_name": "ApiGetTimeServicesConnectionsByServiceIdRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceId": {
              "name": "serviceId",
              "description": ""
            }
          }
        },
        "ApiGetTimeServicesPackageByCodeRequest": {
          "type_name": "ApiGetTimeServicesPackageByCodeRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "packageCode": {
              "name": "packageCode",
              "description": ""
            }
          }
        },
        "ApiGetTimeServicesPackagesRequest": {
          "type_name": "ApiGetTimeServicesPackagesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiSearchTimeServicesRequest": {
          "type_name": "ApiSearchTimeServicesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "timeServicesSearchRequest": {
              "name": "timeServicesSearchRequest",
              "description": ""
            }
          }
        },
        "ApiUpdateTimeServicesByIdRequest": {
          "type_name": "ApiUpdateTimeServicesByIdRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "precisionTimeChangeOperation": {
              "name": "precisionTimeChangeOperation",
              "description": ""
            },
            "serviceId": {
              "name": "serviceId",
              "description": ""
            }
          }
        }
      }
    },
    "prices": {
      "service_name": "prices",
      "service_description": "",
      "methods": {
        "SearchPrices": {
          "short_description": "Get Prices",
          "long_description": "Search prices by search criteria",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchPricesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiSearchPricesRequest": {
          "type_name": "ApiSearchPricesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "filterBody": {
              "name": "filterBody",
              "description": ""
            }
          }
        }
      }
    },
    "route-aggregation-rules": {
      "service_name": "route-aggregation-rules",
      "service_description": "",
      "methods": {
        "CreateRouteAggregationRule": {
          "short_description": "Create RARule",
          "long_description": "This API provides capability to create a Route Aggregation Rule",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            }
          ]
        },
        "CreateRouteAggregationRuleExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateRouteAggregationRulesInBulk": {
          "short_description": "Bulk RARules",
          "long_description": "This API provides capability to create bulk route aggregation rules",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            }
          ]
        },
        "CreateRouteAggregationRulesInBulkExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteRouteAggregationRuleByUuid": {
          "short_description": "DeleteRARule",
          "long_description": "This API provides capability to delete a Route aggregation Rule",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "routeAggregationRuleId",
              "description": "Route Aggregation Rules Id"
            }
          ]
        },
        "DeleteRouteAggregationRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteAggregationRuleByUuid": {
          "short_description": "GetRARule By UUID",
          "long_description": "This API provides capability to view a Route Aggregation Rule by UUID",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "routeAggregationRuleId",
              "description": "Route Aggregation Rules Id"
            }
          ]
        },
        "GetRouteAggregationRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteAggregationRuleChangeByUuid": {
          "short_description": "Get Change By ID",
          "long_description": "This API provides capability to retrieve a specific Route Aggregation Rule's Changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "routeAggregationRuleId",
              "description": "Route Aggregation Rules Id"
            },
            {
              "name": "changeId",
              "description": "Route Aggregation Rule Change UUID"
            }
          ]
        },
        "GetRouteAggregationRuleChangeByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteAggregationRuleChanges": {
          "short_description": "Get All Changes",
          "long_description": "This API provides capability to retrieve all of a Route Aggregation Rule's Changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "routeAggregationRuleId",
              "description": "Route Aggregation Rules Id"
            }
          ]
        },
        "GetRouteAggregationRuleChangesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteAggregationRules": {
          "short_description": "GetRARules",
          "long_description": "This API provides capability to get all Route Aggregations Rules for Fabric",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            }
          ]
        },
        "GetRouteAggregationRulesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "PatchRouteAggregationRuleByUuid": {
          "short_description": "PatchRARule",
          "long_description": "This API provides capability to partially update a Route Aggregation Rule",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "routeAggregationRuleId",
              "description": "Route Aggregation Rules Id"
            }
          ]
        },
        "PatchRouteAggregationRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "ReplaceRouteAggregationRuleByUuid": {
          "short_description": "ReplaceRARule",
          "long_description": "This API provides capability to replace a Route Aggregation Rule completely",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "routeAggregationRuleId",
              "description": "Route Aggregation Rules Id"
            }
          ]
        },
        "ReplaceRouteAggregationRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateRouteAggregationRuleRequest": {
          "type_name": "ApiCreateRouteAggregationRuleRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            },
            "routeAggregationRulesBase": {
              "name": "routeAggregationRulesBase",
              "description": ""
            }
          }
        },
        "ApiCreateRouteAggregationRulesInBulkRequest": {
          "type_name": "ApiCreateRouteAggregationRulesInBulkRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            },
            "routeAggregationRulesPostRequest": {
              "name": "routeAggregationRulesPostRequest",
              "description": ""
            }
          }
        },
        "ApiDeleteRouteAggregationRuleByUuidRequest": {
          "type_name": "ApiDeleteRouteAggregationRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            },
            "routeAggregationRuleId": {
              "name": "routeAggregationRuleId",
              "description": ""
            }
          }
        },
        "ApiGetRouteAggregationRuleByUuidRequest": {
          "type_name": "ApiGetRouteAggregationRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            },
            "routeAggregationRuleId": {
              "name": "routeAggregationRuleId",
              "description": ""
            }
          }
        },
        "ApiGetRouteAggregationRuleChangeByUuidRequest": {
          "type_name": "ApiGetRouteAggregationRuleChangeByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "changeId": {
              "name": "changeId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            },
            "routeAggregationRuleId": {
              "name": "routeAggregationRuleId",
              "description": ""
            }
          }
        },
        "ApiGetRouteAggregationRuleChangesRequest": {
          "type_name": "ApiGetRouteAggregationRuleChangesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            },
            "routeAggregationRuleId": {
              "name": "routeAggregationRuleId",
              "description": ""
            }
          }
        },
        "ApiGetRouteAggregationRulesRequest": {
          "type_name": "ApiGetRouteAggregationRulesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            }
          }
        },
        "ApiPatchRouteAggregationRuleByUuidRequest": {
          "type_name": "ApiPatchRouteAggregationRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            },
            "routeAggregationRuleId": {
              "name": "routeAggregationRuleId",
              "description": ""
            },
            "routeAggregationRulesPatchRequestItem": {
              "name": "routeAggregationRulesPatchRequestItem",
              "description": ""
            }
          }
        },
        "ApiReplaceRouteAggregationRuleByUuidRequest": {
          "type_name": "ApiReplaceRouteAggregationRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            },
            "routeAggregationRuleId": {
              "name": "routeAggregationRuleId",
              "description": ""
            },
            "routeAggregationRulesBase": {
              "name": "routeAggregationRulesBase",
              "description": ""
            }
          }
        }
      }
    },
    "route-aggregations": {
      "service_name": "route-aggregations",
      "service_description": "",
      "methods": {
        "AttachConnectionRouteAggregation": {
          "short_description": "Attach Aggregation",
          "long_description": "This API provides capability to attach a Route Aggregation to a Connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "AttachConnectionRouteAggregationExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateRouteAggregation": {
          "short_description": "Create Aggregations",
          "long_description": "This API provides capability to create a Route Aggregation",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateRouteAggregationExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteRouteAggregationByUuid": {
          "short_description": "Delete Aggregation",
          "long_description": "This API provides capability to delete a Route Aggregation",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            }
          ]
        },
        "DeleteRouteAggregationByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DetachConnectionRouteAggregation": {
          "short_description": "Detach Aggregation",
          "long_description": "This API provides capability to detach a Route Aggregation from a Connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "DetachConnectionRouteAggregationExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRouteAggregationByUuid": {
          "short_description": "Get Aggregation",
          "long_description": "This API provides capability to view a specific Route Aggregation attached to a Connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "GetConnectionRouteAggregationByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRouteAggregations": {
          "short_description": "Get All Aggregations",
          "long_description": "This API provides capability to view all Route Aggregations attached to a Connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "GetConnectionRouteAggregationsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteAggregationByUuid": {
          "short_description": "Get Aggregation",
          "long_description": "This API provides capability to view a Route Aggregation by UUID",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            }
          ]
        },
        "GetRouteAggregationByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteAggregationChangeByUuid": {
          "short_description": "Get Change By ID",
          "long_description": "This API provides capability to retrieve a specific Route Aggregation's Changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            },
            {
              "name": "changeId",
              "description": "Routing Protocol Change UUID"
            }
          ]
        },
        "GetRouteAggregationChangeByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteAggregationChanges": {
          "short_description": "Get All Changes",
          "long_description": "This API provides capability to retrieve all of a Route Aggregation's Changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            }
          ]
        },
        "GetRouteAggregationChangesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteAggregationConnections": {
          "short_description": "Get All Connections on Route Aggregation",
          "long_description": "This API provides capability to view all Connections using the Route Aggregation",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            }
          ]
        },
        "GetRouteAggregationConnectionsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "PatchRouteAggregationByUuid": {
          "short_description": "Patch Aggregation",
          "long_description": "This API provides capability to partially update a Route Aggregation",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeAggregationId",
              "description": "Route Aggregations Id"
            }
          ]
        },
        "PatchRouteAggregationByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchRouteAggregations": {
          "short_description": "Search Aggregations",
          "long_description": "This API provides capability to search Route Aggregations",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchRouteAggregationsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiAttachConnectionRouteAggregationRequest": {
          "type_name": "ApiAttachConnectionRouteAggregationRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            }
          }
        },
        "ApiCreateRouteAggregationRequest": {
          "type_name": "ApiCreateRouteAggregationRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationsBase": {
              "name": "routeAggregationsBase",
              "description": ""
            }
          }
        },
        "ApiDeleteRouteAggregationByUuidRequest": {
          "type_name": "ApiDeleteRouteAggregationByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            }
          }
        },
        "ApiDetachConnectionRouteAggregationRequest": {
          "type_name": "ApiDetachConnectionRouteAggregationRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRouteAggregationByUuidRequest": {
          "type_name": "ApiGetConnectionRouteAggregationByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRouteAggregationsRequest": {
          "type_name": "ApiGetConnectionRouteAggregationsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiGetRouteAggregationByUuidRequest": {
          "type_name": "ApiGetRouteAggregationByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            }
          }
        },
        "ApiGetRouteAggregationChangeByUuidRequest": {
          "type_name": "ApiGetRouteAggregationChangeByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "changeId": {
              "name": "changeId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            }
          }
        },
        "ApiGetRouteAggregationChangesRequest": {
          "type_name": "ApiGetRouteAggregationChangesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            }
          }
        },
        "ApiGetRouteAggregationConnectionsRequest": {
          "type_name": "ApiGetRouteAggregationConnectionsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            }
          }
        },
        "ApiPatchRouteAggregationByUuidRequest": {
          "type_name": "ApiPatchRouteAggregationByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationId": {
              "name": "routeAggregationId",
              "description": ""
            },
            "routeAggregationsPatchRequestItem": {
              "name": "routeAggregationsPatchRequestItem",
              "description": ""
            }
          }
        },
        "ApiSearchRouteAggregationsRequest": {
          "type_name": "ApiSearchRouteAggregationsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeAggregationsSearchBase": {
              "name": "routeAggregationsSearchBase",
              "description": ""
            }
          }
        }
      }
    },
    "route-filter-rules": {
      "service_name": "route-filter-rules",
      "service_description": "",
      "methods": {
        "CreateRouteFilterRule": {
          "short_description": "Create Route Filter Rule",
          "long_description": "This API provides capability to create a Route Filter Rule",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            }
          ]
        },
        "CreateRouteFilterRuleExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateRouteFilterRulesInBulk": {
          "short_description": "Bulk Create Route Filter Rules",
          "long_description": "This API provides capability to create bulk route filter rules",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            }
          ]
        },
        "CreateRouteFilterRulesInBulkExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteRouteFilterRuleByUuid": {
          "short_description": "Delete Route Filter Rule",
          "long_description": "This API provides capability to delete a Route Filter Rule",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "routeFilterRuleId",
              "description": "Route  Filter  Rules Id"
            }
          ]
        },
        "DeleteRouteFilterRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteFilterRuleByUuid": {
          "short_description": "Get Route Filter Rule By UUID",
          "long_description": "This API provides capability to view a Route Filter Rule by UUID",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "routeFilterRuleId",
              "description": "Route  Filter  Rules Id"
            }
          ]
        },
        "GetRouteFilterRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteFilterRuleChangeByUuid": {
          "short_description": "Get Change By ID",
          "long_description": "This API provides capability to retrieve a specific Route Filter Rule's Changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "routeFilterRuleId",
              "description": "Route  Filter  Rules Id"
            },
            {
              "name": "changeId",
              "description": "Route Filter Rule Change UUID"
            }
          ]
        },
        "GetRouteFilterRuleChangeByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteFilterRuleChanges": {
          "short_description": "Get All Changes",
          "long_description": "This API provides capability to retrieve all of a Route Filter Rule's Changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "routeFilterRuleId",
              "description": "Route  Filter  Rules Id"
            }
          ]
        },
        "GetRouteFilterRuleChangesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteFilterRules": {
          "short_description": "Get Route Filter Rules",
          "long_description": "This API provides capability to get all Route Filters Rules for Fabric",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            }
          ]
        },
        "GetRouteFilterRulesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "PatchRouteFilterRuleByUuid": {
          "short_description": "Patch Route Filter Rule",
          "long_description": "This API provides capability to partially update a Route Filter Rule",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "routeFilterRuleId",
              "description": "Route  Filter  Rules Id"
            }
          ]
        },
        "PatchRouteFilterRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "ReplaceRouteFilterRuleByUuid": {
          "short_description": "Replace Route Filter Rule",
          "long_description": "This API provides capability to replace a Route Filter Rule completely",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "routeFilterRuleId",
              "description": "Route  Filter  Rules Id"
            }
          ]
        },
        "ReplaceRouteFilterRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateRouteFilterRuleRequest": {
          "type_name": "ApiCreateRouteFilterRuleRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            },
            "routeFilterRulesBase": {
              "name": "routeFilterRulesBase",
              "description": ""
            }
          }
        },
        "ApiCreateRouteFilterRulesInBulkRequest": {
          "type_name": "ApiCreateRouteFilterRulesInBulkRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            },
            "routeFilterRulesPostRequest": {
              "name": "routeFilterRulesPostRequest",
              "description": ""
            }
          }
        },
        "ApiDeleteRouteFilterRuleByUuidRequest": {
          "type_name": "ApiDeleteRouteFilterRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            },
            "routeFilterRuleId": {
              "name": "routeFilterRuleId",
              "description": ""
            }
          }
        },
        "ApiGetRouteFilterRuleByUuidRequest": {
          "type_name": "ApiGetRouteFilterRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            },
            "routeFilterRuleId": {
              "name": "routeFilterRuleId",
              "description": ""
            }
          }
        },
        "ApiGetRouteFilterRuleChangeByUuidRequest": {
          "type_name": "ApiGetRouteFilterRuleChangeByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "changeId": {
              "name": "changeId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            },
            "routeFilterRuleId": {
              "name": "routeFilterRuleId",
              "description": ""
            }
          }
        },
        "ApiGetRouteFilterRuleChangesRequest": {
          "type_name": "ApiGetRouteFilterRuleChangesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            },
            "routeFilterRuleId": {
              "name": "routeFilterRuleId",
              "description": ""
            }
          }
        },
        "ApiGetRouteFilterRulesRequest": {
          "type_name": "ApiGetRouteFilterRulesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            }
          }
        },
        "ApiPatchRouteFilterRuleByUuidRequest": {
          "type_name": "ApiPatchRouteFilterRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            },
            "routeFilterRuleId": {
              "name": "routeFilterRuleId",
              "description": ""
            },
            "routeFilterRulesPatchRequestItem": {
              "name": "routeFilterRulesPatchRequestItem",
              "description": ""
            }
          }
        },
        "ApiReplaceRouteFilterRuleByUuidRequest": {
          "type_name": "ApiReplaceRouteFilterRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            },
            "routeFilterRuleId": {
              "name": "routeFilterRuleId",
              "description": ""
            },
            "routeFilterRulesBase": {
              "name": "routeFilterRulesBase",
              "description": ""
            }
          }
        }
      }
    },
    "route-filters": {
      "service_name": "route-filters",
      "service_description": "",
      "methods": {
        "AttachConnectionRouteFilter": {
          "short_description": "Attach Route Filter",
          "long_description": "This API provides capability to attach a Route Filter to a Connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "AttachConnectionRouteFilterExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateRouteFilter": {
          "short_description": "Create Route Filters",
          "long_description": "This API provides capability to create a Route Filter",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateRouteFilterExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteRouteFilterByUuid": {
          "short_description": "Delete Route Filter",
          "long_description": "This API provides capability to delete a Route Filter",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            }
          ]
        },
        "DeleteRouteFilterByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DetachConnectionRouteFilter": {
          "short_description": "Detach Route Filter",
          "long_description": "This API provides capability to detach a Route Filter from a Connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "DetachConnectionRouteFilterExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRouteFilterByUuid": {
          "short_description": "Get Route Filter",
          "long_description": "This API provides capability to view a specific Route Filter attached to a Connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "GetConnectionRouteFilterByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRouteFilters": {
          "short_description": "Get All Route Filters",
          "long_description": "This API provides capability to view all Route Filters attached to a Connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "GetConnectionRouteFiltersExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteFilterByUuid": {
          "short_description": "Get Route Filter By UUID",
          "long_description": "This API provides capability to view a Route Filter by UUID",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            }
          ]
        },
        "GetRouteFilterByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteFilterChangeByUuid": {
          "short_description": "Get Change By ID",
          "long_description": "This API provides capability to retrieve a specific Route Filter's Changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            },
            {
              "name": "changeId",
              "description": "Routing Protocol Change UUID"
            }
          ]
        },
        "GetRouteFilterChangeByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteFilterChanges": {
          "short_description": "Get All Changes",
          "long_description": "This API provides capability to retrieve all of a Route Filter's Changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            }
          ]
        },
        "GetRouteFilterChangesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetRouteFilterConnections": {
          "short_description": "Get All Connections on Route Filter",
          "long_description": "This API provides capability to view all Connections using the Route Filter",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            }
          ]
        },
        "GetRouteFilterConnectionsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "PatchRouteFilterByUuid": {
          "short_description": "Patch Route Filter",
          "long_description": "This API provides capability to partially update a Route Filter",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routeFilterId",
              "description": "Route Filters Id"
            }
          ]
        },
        "PatchRouteFilterByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchRouteFilters": {
          "short_description": "Search Route Filters",
          "long_description": "This API provides capability to search Route Filters",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchRouteFiltersExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiAttachConnectionRouteFilterRequest": {
          "type_name": "ApiAttachConnectionRouteFilterRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "connectionRouteFiltersBase": {
              "name": "connectionRouteFiltersBase",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            }
          }
        },
        "ApiCreateRouteFilterRequest": {
          "type_name": "ApiCreateRouteFilterRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFiltersBase": {
              "name": "routeFiltersBase",
              "description": ""
            }
          }
        },
        "ApiDeleteRouteFilterByUuidRequest": {
          "type_name": "ApiDeleteRouteFilterByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            }
          }
        },
        "ApiDetachConnectionRouteFilterRequest": {
          "type_name": "ApiDetachConnectionRouteFilterRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRouteFilterByUuidRequest": {
          "type_name": "ApiGetConnectionRouteFilterByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRouteFiltersRequest": {
          "type_name": "ApiGetConnectionRouteFiltersRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiGetRouteFilterByUuidRequest": {
          "type_name": "ApiGetRouteFilterByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            }
          }
        },
        "ApiGetRouteFilterChangeByUuidRequest": {
          "type_name": "ApiGetRouteFilterChangeByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "changeId": {
              "name": "changeId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            }
          }
        },
        "ApiGetRouteFilterChangesRequest": {
          "type_name": "ApiGetRouteFilterChangesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            }
          }
        },
        "ApiGetRouteFilterConnectionsRequest": {
          "type_name": "ApiGetRouteFilterConnectionsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            }
          }
        },
        "ApiPatchRouteFilterByUuidRequest": {
          "type_name": "ApiPatchRouteFilterByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFilterId": {
              "name": "routeFilterId",
              "description": ""
            },
            "routeFiltersPatchRequestItem": {
              "name": "routeFiltersPatchRequestItem",
              "description": ""
            }
          }
        },
        "ApiSearchRouteFiltersRequest": {
          "type_name": "ApiSearchRouteFiltersRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routeFiltersSearchBase": {
              "name": "routeFiltersSearchBase",
              "description": ""
            }
          }
        }
      }
    },
    "routing-protocols": {
      "service_name": "routing-protocols",
      "service_description": "",
      "methods": {
        "CreateConnectionRoutingProtocol": {
          "short_description": "Create Protocol",
          "long_description": "This API provides capability to create Routing Protocol for connections",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "CreateConnectionRoutingProtocolExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateConnectionRoutingProtocolsInBulk": {
          "short_description": "Bulk Create Protocol",
          "long_description": "This API provides capability to create Routing Protocol for connections",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "CreateConnectionRoutingProtocolsInBulkExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteConnectionRoutingProtocolByUuid": {
          "short_description": "Delete Protocol",
          "long_description": "This API provides capability to delete Routing Protocols on virtual connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routingProtocolId",
              "description": "Routing Protocol Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "DeleteConnectionRoutingProtocolByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRoutingProtocolAllBgpActions": {
          "short_description": "Get BGP Actions",
          "long_description": "This API provides capability to get all BGP actions status",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routingProtocolId",
              "description": "Routing Protocol Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "GetConnectionRoutingProtocolAllBgpActionsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRoutingProtocolByUuid": {
          "short_description": "Get Protocol",
          "long_description": "This API provides capability to accept/reject user's virtual connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routingProtocolId",
              "description": "Routing Protocol Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "GetConnectionRoutingProtocolByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRoutingProtocols": {
          "short_description": "GetRoutingProtocols",
          "long_description": "This API provides capability to get Routing Protocols for connections",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "GetConnectionRoutingProtocolsBgpActionByUuid": {
          "short_description": "Get BGP Action",
          "long_description": "This API provides capability to retrieve specific BGP action",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            },
            {
              "name": "routingProtocolId",
              "description": "Routing Protocol Id"
            },
            {
              "name": "actionId",
              "description": "BGP Action UUID"
            }
          ]
        },
        "GetConnectionRoutingProtocolsBgpActionByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRoutingProtocolsChangeByUuid": {
          "short_description": "Get Change By ID",
          "long_description": "This API provides capability to retrieve specific Routing Protocol Change",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            },
            {
              "name": "routingProtocolId",
              "description": "Routing Protocol Id"
            },
            {
              "name": "changeId",
              "description": "Routing Protocol Change UUID"
            }
          ]
        },
        "GetConnectionRoutingProtocolsChangeByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRoutingProtocolsChanges": {
          "short_description": "Get Changes",
          "long_description": "This API provides capability to retrieve user's Routing Protocol Changes",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            },
            {
              "name": "routingProtocolId",
              "description": "Routing Protocol Id"
            }
          ]
        },
        "GetConnectionRoutingProtocolsChangesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetConnectionRoutingProtocolsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "PatchConnectionRoutingProtocolByUuid": {
          "short_description": "Patch Protocol",
          "long_description": "This API provides capability to partially update Routing Protocols on a virtual connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routingProtocolId",
              "description": "Routing Protocol Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "PatchConnectionRoutingProtocolByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "PostConnectionRoutingProtocolBgpActionByUuid": {
          "short_description": "Clear/Reset BGP",
          "long_description": "This API provides capability to clear/reset Routing Protocols BGP session",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routingProtocolId",
              "description": "Routing Protocol Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "PostConnectionRoutingProtocolBgpActionByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "ReplaceConnectionRoutingProtocolByUuid": {
          "short_description": "Replace Protocol",
          "long_description": "This API provides capability to replace complete Routing Protocols on a virtual connection",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routingProtocolId",
              "description": "Routing Protocol Id"
            },
            {
              "name": "connectionId",
              "description": "Connection Id"
            }
          ]
        },
        "ReplaceConnectionRoutingProtocolByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "ValidateRoutingProtocol": {
          "short_description": "Validate Subnet",
          "long_description": "This API provides capability to validate all subnets associated with any connection in the given FCR",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "routerId",
              "description": "Cloud Router UUID"
            }
          ]
        },
        "ValidateRoutingProtocolExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateConnectionRoutingProtocolRequest": {
          "type_name": "ApiCreateConnectionRoutingProtocolRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routingProtocolBase": {
              "name": "routingProtocolBase",
              "description": ""
            }
          }
        },
        "ApiCreateConnectionRoutingProtocolsInBulkRequest": {
          "type_name": "ApiCreateConnectionRoutingProtocolsInBulkRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "connectionRoutingProtocolPostRequest": {
              "name": "connectionRoutingProtocolPostRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            }
          }
        },
        "ApiDeleteConnectionRoutingProtocolByUuidRequest": {
          "type_name": "ApiDeleteConnectionRoutingProtocolByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routingProtocolId": {
              "name": "routingProtocolId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRoutingProtocolAllBgpActionsRequest": {
          "type_name": "ApiGetConnectionRoutingProtocolAllBgpActionsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "routingProtocolId": {
              "name": "routingProtocolId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRoutingProtocolByUuidRequest": {
          "type_name": "ApiGetConnectionRoutingProtocolByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routingProtocolId": {
              "name": "routingProtocolId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRoutingProtocolsBgpActionByUuidRequest": {
          "type_name": "ApiGetConnectionRoutingProtocolsBgpActionByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "actionId": {
              "name": "actionId",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routingProtocolId": {
              "name": "routingProtocolId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRoutingProtocolsChangeByUuidRequest": {
          "type_name": "ApiGetConnectionRoutingProtocolsChangeByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "changeId": {
              "name": "changeId",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routingProtocolId": {
              "name": "routingProtocolId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRoutingProtocolsChangesRequest": {
          "type_name": "ApiGetConnectionRoutingProtocolsChangesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "routingProtocolId": {
              "name": "routingProtocolId",
              "description": ""
            }
          }
        },
        "ApiGetConnectionRoutingProtocolsRequest": {
          "type_name": "ApiGetConnectionRoutingProtocolsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            }
          }
        },
        "ApiPatchConnectionRoutingProtocolByUuidRequest": {
          "type_name": "ApiPatchConnectionRoutingProtocolByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionChangeOperation": {
              "name": "connectionChangeOperation",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routingProtocolId": {
              "name": "routingProtocolId",
              "description": ""
            }
          }
        },
        "ApiPostConnectionRoutingProtocolBgpActionByUuidRequest": {
          "type_name": "ApiPostConnectionRoutingProtocolBgpActionByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "bGPActionRequest": {
              "name": "bGPActionRequest",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routingProtocolId": {
              "name": "routingProtocolId",
              "description": ""
            }
          }
        },
        "ApiReplaceConnectionRoutingProtocolByUuidRequest": {
          "type_name": "ApiReplaceConnectionRoutingProtocolByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routingProtocolBase": {
              "name": "routingProtocolBase",
              "description": ""
            },
            "routingProtocolId": {
              "name": "routingProtocolId",
              "description": ""
            }
          }
        },
        "ApiValidateRoutingProtocolRequest": {
          "type_name": "ApiValidateRoutingProtocolRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "routerId": {
              "name": "routerId",
              "description": ""
            },
            "validateRequest": {
              "name": "validateRequest",
              "description": ""
            }
          }
        }
      }
    },
    "service-profiles": {
      "service_name": "service-profiles",
      "service_description": "",
      "methods": {
        "CreateServiceProfile": {
          "short_description": "Create Profile",
          "long_description": "Create Service Profile creates Equinix Fabric™ Service Profile.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateServiceProfileExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteServiceProfileByUuid": {
          "short_description": "Delete Profile",
          "long_description": "delete Service Profile by UUID",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceProfileId",
              "description": "Service Profile UUID"
            }
          ]
        },
        "DeleteServiceProfileByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetServiceProfileByUuid": {
          "short_description": "Get Profile",
          "long_description": "Get service profile by UUID. View Point parameter if set to zSide will give seller's view of the profile otherwise buyer's view.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceProfileId",
              "description": "Service Profile UUID"
            }
          ]
        },
        "GetServiceProfileByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetServiceProfileMetrosByUuid": {
          "short_description": "Get Profile Metros",
          "long_description": "Get service profile metros by UUID.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceProfileId",
              "description": "Service Profile UUID"
            }
          ]
        },
        "GetServiceProfileMetrosByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetServiceProfiles": {
          "short_description": "Get all Profiles",
          "long_description": "The API request returns all Equinix Fabric Service Profiles in accordance with the view point requested.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "GetServiceProfilesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "PutServiceProfileByUuid": {
          "short_description": "Replace Profile",
          "long_description": "This API request replaces a service profile definition",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceProfileId",
              "description": "Service Profile UUID"
            }
          ]
        },
        "PutServiceProfileByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchServiceProfiles": {
          "short_description": "Profile Search",
          "long_description": "Search service profiles by search criteria",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchServiceProfilesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateServiceProfileByUuid": {
          "short_description": "Update Profile",
          "long_description": "Update Service Profile by UUID",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceProfileId",
              "description": "Service Profile UUID"
            }
          ]
        },
        "UpdateServiceProfileByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateServiceProfileRequest": {
          "type_name": "ApiCreateServiceProfileRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceProfileRequest": {
              "name": "serviceProfileRequest",
              "description": ""
            }
          }
        },
        "ApiDeleteServiceProfileByUuidRequest": {
          "type_name": "ApiDeleteServiceProfileByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceProfileId": {
              "name": "serviceProfileId",
              "description": ""
            }
          }
        },
        "ApiGetServiceProfileByUuidRequest": {
          "type_name": "ApiGetServiceProfileByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceProfileId": {
              "name": "serviceProfileId",
              "description": ""
            },
            "viewPoint": {
              "name": "viewPoint",
              "description": ""
            }
          }
        },
        "ApiGetServiceProfileMetrosByUuidRequest": {
          "type_name": "ApiGetServiceProfileMetrosByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "serviceProfileId": {
              "name": "serviceProfileId",
              "description": ""
            }
          }
        },
        "ApiGetServiceProfilesRequest": {
          "type_name": "ApiGetServiceProfilesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "viewPoint": {
              "name": "viewPoint",
              "description": ""
            }
          }
        },
        "ApiPutServiceProfileByUuidRequest": {
          "type_name": "ApiPutServiceProfileByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "ifMatch": {
              "name": "ifMatch",
              "description": ""
            },
            "serviceProfileId": {
              "name": "serviceProfileId",
              "description": ""
            },
            "serviceProfileRequest": {
              "name": "serviceProfileRequest",
              "description": ""
            }
          }
        },
        "ApiSearchServiceProfilesRequest": {
          "type_name": "ApiSearchServiceProfilesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceProfileSearchRequest": {
              "name": "serviceProfileSearchRequest",
              "description": ""
            },
            "viewPoint": {
              "name": "viewPoint",
              "description": ""
            }
          }
        },
        "ApiUpdateServiceProfileByUuidRequest": {
          "type_name": "ApiUpdateServiceProfileByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "ifMatch": {
              "name": "ifMatch",
              "description": ""
            },
            "jsonPatchOperation": {
              "name": "jsonPatchOperation",
              "description": ""
            },
            "serviceProfileId": {
              "name": "serviceProfileId",
              "description": ""
            }
          }
        }
      }
    },
    "service-tokens": {
      "service_name": "service-tokens",
      "service_description": "",
      "methods": {
        "CreateServiceToken": {
          "short_description": "Create Service Token",
          "long_description": "Create Service Tokens generates Equinix Fabric™ service tokens. These tokens authorize users to access protected resources and services.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateServiceTokenAction": {
          "short_description": "ServiceToken Actions",
          "long_description": "This API provides capability to accept/reject user's servicetokens",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceTokenId",
              "description": "Service Token UUID"
            }
          ]
        },
        "CreateServiceTokenActionExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "CreateServiceTokenExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteServiceTokenByUuid": {
          "short_description": "Delete Token by uuid",
          "long_description": "Delete Service Tokens removes an Equinix Fabric service token corresponding to the specified uuid which are in INACTIVE state.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceTokenId",
              "description": "Service Token UUID"
            }
          ]
        },
        "DeleteServiceTokenByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetServiceTokenByUuid": {
          "short_description": "Get Token by uuid",
          "long_description": "Get Specified Service Tokens uses the uuid of an Equinix Fabric service token to return details about the token's type, state, location, bandwidth, and other key properties.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceTokenId",
              "description": "Service Token UUID"
            }
          ]
        },
        "GetServiceTokenByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetServiceTokens": {
          "short_description": "Get All Tokens",
          "long_description": "Get All ServiceTokens creates a list of all Equinix Fabric service tokens associated with the subscriber's account.",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "GetServiceTokensExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "SearchServiceTokens": {
          "short_description": "Search servicetokens",
          "long_description": "The API provides capability to get list of user's servicetokens using search criteria, including optional filtering, pagination and sorting",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "SearchServiceTokensExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateServiceTokenByUuid": {
          "short_description": "Update Token By ID",
          "long_description": "This API provides capability to update user's Service Token",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "serviceTokenId",
              "description": "Service Token UUID"
            }
          ]
        },
        "UpdateServiceTokenByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateServiceTokenActionRequest": {
          "type_name": "ApiCreateServiceTokenActionRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceTokenActionRequest": {
              "name": "serviceTokenActionRequest",
              "description": ""
            },
            "serviceTokenId": {
              "name": "serviceTokenId",
              "description": ""
            }
          }
        },
        "ApiCreateServiceTokenRequest": {
          "type_name": "ApiCreateServiceTokenRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "dryRun": {
              "name": "dryRun",
              "description": ""
            },
            "serviceToken": {
              "name": "serviceToken",
              "description": ""
            }
          }
        },
        "ApiDeleteServiceTokenByUuidRequest": {
          "type_name": "ApiDeleteServiceTokenByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceTokenId": {
              "name": "serviceTokenId",
              "description": ""
            }
          }
        },
        "ApiGetServiceTokenByUuidRequest": {
          "type_name": "ApiGetServiceTokenByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "serviceTokenId": {
              "name": "serviceTokenId",
              "description": ""
            }
          }
        },
        "ApiGetServiceTokensRequest": {
          "type_name": "ApiGetServiceTokensRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            }
          }
        },
        "ApiSearchServiceTokensRequest": {
          "type_name": "ApiSearchServiceTokensRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "serviceTokenSearchRequest": {
              "name": "serviceTokenSearchRequest",
              "description": ""
            }
          }
        },
        "ApiUpdateServiceTokenByUuidRequest": {
          "type_name": "ApiUpdateServiceTokenByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "dryRun": {
              "name": "dryRun",
              "description": ""
            },
            "serviceTokenChangeOperation": {
              "name": "serviceTokenChangeOperation",
              "description": ""
            },
            "serviceTokenId": {
              "name": "serviceTokenId",
              "description": ""
            }
          }
        }
      }
    },
    "statistics": {
      "service_name": "statistics",
      "service_description": "",
      "methods": {
        "GetConnectionStatsByPortUuid": {
          "short_description": "Get Stats by uuid **(DEPRECATED)**",
          "long_description": "This API provides service-level metrics so that you can view access and gather key information required to manage service subscription sizing and capacity **(DEPRECATED)** Deprecated",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "connectionId",
              "description": "Connection UUID"
            }
          ]
        },
        "GetConnectionStatsByPortUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": "Deprecated"
        },
        "GetPortStatsByPortUuid": {
          "short_description": "Get Stats by uuid **(DEPRECATED)**",
          "long_description": "This API provides service-level traffic metrics so that you can view access and gather key information required to manage service subscription sizing and capacity.**(DEPRECATED)** Deprecated",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "portId",
              "description": "Port UUID"
            }
          ]
        },
        "GetPortStatsByPortUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": "Deprecated"
        }
      },
      "types": {
        "ApiGetConnectionStatsByPortUuidRequest": {
          "type_name": "ApiGetConnectionStatsByPortUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "connectionId": {
              "name": "connectionId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "endDateTime": {
              "name": "endDateTime",
              "description": ""
            },
            "startDateTime": {
              "name": "startDateTime",
              "description": ""
            },
            "viewPoint": {
              "name": "viewPoint",
              "description": ""
            }
          }
        },
        "ApiGetPortStatsByPortUuidRequest": {
          "type_name": "ApiGetPortStatsByPortUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "endDateTime": {
              "name": "endDateTime",
              "description": ""
            },
            "portId": {
              "name": "portId",
              "description": ""
            },
            "startDateTime": {
              "name": "startDateTime",
              "description": ""
            }
          }
        }
      }
    },
    "stream-alert-rules": {
      "service_name": "stream-alert-rules",
      "service_description": "",
      "methods": {
        "CreateStreamAlertRules": {
          "short_description": "Create Stream Alert Rules",
          "long_description": "This API provides capability to create user's Stream Alert Rules",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "CreateStreamAlertRulesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteStreamAlertRuleByUuid": {
          "short_description": "Update Stream Alert Rules",
          "long_description": "This API provides capability to delete a user's stream alert rule",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            },
            {
              "name": "alertRuleId",
              "description": "alert rule UUID"
            }
          ]
        },
        "DeleteStreamAlertRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetStreamAlertRuleByUuid": {
          "short_description": "Get Stream Alert Rules",
          "long_description": "This API provides capability to get user's stream alert rules",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            },
            {
              "name": "alertRuleId",
              "description": "alert rule UUID"
            }
          ]
        },
        "GetStreamAlertRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetStreamAlertRules": {
          "short_description": "Get Stream Alert Rules",
          "long_description": "This API provides capability to retrieve stream alert rules",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "GetStreamAlertRulesExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateStreamAlertRuleByUuid": {
          "short_description": "Update Stream Alert Rules",
          "long_description": "This API provides capability to update a user's stream alert rule",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            },
            {
              "name": "alertRuleId",
              "description": "alert rule UUID"
            }
          ]
        },
        "UpdateStreamAlertRuleByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateStreamAlertRulesRequest": {
          "type_name": "ApiCreateStreamAlertRulesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "alertRulePostRequest": {
              "name": "alertRulePostRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiDeleteStreamAlertRuleByUuidRequest": {
          "type_name": "ApiDeleteStreamAlertRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "alertRuleId": {
              "name": "alertRuleId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiGetStreamAlertRuleByUuidRequest": {
          "type_name": "ApiGetStreamAlertRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "alertRuleId": {
              "name": "alertRuleId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiGetStreamAlertRulesRequest": {
          "type_name": "ApiGetStreamAlertRulesRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiUpdateStreamAlertRuleByUuidRequest": {
          "type_name": "ApiUpdateStreamAlertRuleByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "alertRuleId": {
              "name": "alertRuleId",
              "description": ""
            },
            "alertRulePutRequest": {
              "name": "alertRulePutRequest",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        }
      }
    },
    "stream-subscriptions": {
      "service_name": "stream-subscriptions",
      "service_description": "",
      "methods": {
        "CreateStreamSubscriptions": {
          "short_description": "Create Subscription",
          "long_description": "This API provides capability to create user's Stream Subscriptions",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "CreateStreamSubscriptionsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteStreamSubscriptionByUuid": {
          "short_description": "Delete Subscription",
          "long_description": "This API provides capability to delete user's Stream Subscriptions",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            },
            {
              "name": "subscriptionId",
              "description": "Stream Subscription UUID"
            }
          ]
        },
        "DeleteStreamSubscriptionByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetStreamSubscriptionByUuid": {
          "short_description": "Get Subscription",
          "long_description": "This API provides capability to delete user's get Stream Subscriptions",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            },
            {
              "name": "subscriptionId",
              "description": "Stream Subscription UUID"
            }
          ]
        },
        "GetStreamSubscriptionByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetStreamSubscriptions": {
          "short_description": "Get Subscriptions",
          "long_description": "This API provides capability to retrieve stream subscriptions",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "GetStreamSubscriptionsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateStreamSubscriptionByUuid": {
          "short_description": "Update Subscription",
          "long_description": "This API provides capability to update user's Stream Subscriptions",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            },
            {
              "name": "subscriptionId",
              "description": "Stream Subscription UUID"
            }
          ]
        },
        "UpdateStreamSubscriptionByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateStreamSubscriptionsRequest": {
          "type_name": "ApiCreateStreamSubscriptionsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            },
            "streamSubscriptionPostRequest": {
              "name": "streamSubscriptionPostRequest",
              "description": ""
            }
          }
        },
        "ApiDeleteStreamSubscriptionByUuidRequest": {
          "type_name": "ApiDeleteStreamSubscriptionByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            },
            "subscriptionId": {
              "name": "subscriptionId",
              "description": ""
            }
          }
        },
        "ApiGetStreamSubscriptionByUuidRequest": {
          "type_name": "ApiGetStreamSubscriptionByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            },
            "subscriptionId": {
              "name": "subscriptionId",
              "description": ""
            }
          }
        },
        "ApiGetStreamSubscriptionsRequest": {
          "type_name": "ApiGetStreamSubscriptionsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiUpdateStreamSubscriptionByUuidRequest": {
          "type_name": "ApiUpdateStreamSubscriptionByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            },
            "streamSubscriptionPutRequest": {
              "name": "streamSubscriptionPutRequest",
              "description": ""
            },
            "subscriptionId": {
              "name": "subscriptionId",
              "description": ""
            }
          }
        }
      }
    },
    "streams": {
      "service_name": "streams",
      "service_description": "",
      "methods": {
        "CreateStreams": {
          "short_description": "Create Stream",
          "long_description": "This API provides capability to create user's stream",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "CreateStreamsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteStreamAssetByUuid": {
          "short_description": "Detach Asset",
          "long_description": "This API provides capability to detach an asset from a stream",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "assetId",
              "description": "asset UUID"
            },
            {
              "name": "asset",
              "description": "asset"
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "DeleteStreamAssetByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "DeleteStreamByUuid": {
          "short_description": "Delete Stream",
          "long_description": "This API provides capability to delete user's stream",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "DeleteStreamByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetStreamAssetByUuid": {
          "short_description": "Get Asset",
          "long_description": "This API provides capability to get user's assets attached to a stream",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "assetId",
              "description": "asset UUID"
            },
            {
              "name": "asset",
              "description": "asset"
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "GetStreamAssetByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetStreamByUuid": {
          "short_description": "Get Stream",
          "long_description": "This API provides capability to get user's stream",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "GetStreamByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetStreams": {
          "short_description": "Get Streams",
          "long_description": "This API provides capability to retrieve streams",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "GetStreamsAssets": {
          "short_description": "Get Assets",
          "long_description": "This API provides capability to retrieve stream assets",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            }
          ]
        },
        "GetStreamsAssetsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "GetStreamsExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateStreamAssetByUuid": {
          "short_description": "Attach Asset",
          "long_description": "This API provides capability to attach an asset to a stream",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "assetId",
              "description": "asset UUID"
            },
            {
              "name": "asset",
              "description": "asset"
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "UpdateStreamAssetByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        },
        "UpdateStreamByUuid": {
          "short_description": "Update Stream",
          "long_description": "This API provides capability to update user's stream",
          "parameters": [
            {
              "name": "ctx",
              "description": "for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background()."
            },
            {
              "name": "streamId",
              "description": "Stream UUID"
            }
          ]
        },
        "UpdateStreamByUuidExecute": {
          "short_description": "Execute executes the request",
          "long_description": ""
        }
      },
      "types": {
        "ApiCreateStreamsRequest": {
          "type_name": "ApiCreateStreamsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamPostRequest": {
              "name": "streamPostRequest",
              "description": ""
            }
          }
        },
        "ApiDeleteStreamAssetByUuidRequest": {
          "type_name": "ApiDeleteStreamAssetByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "asset": {
              "name": "asset",
              "description": ""
            },
            "assetId": {
              "name": "assetId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiDeleteStreamByUuidRequest": {
          "type_name": "ApiDeleteStreamByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiGetStreamAssetByUuidRequest": {
          "type_name": "ApiGetStreamAssetByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "asset": {
              "name": "asset",
              "description": ""
            },
            "assetId": {
              "name": "assetId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiGetStreamByUuidRequest": {
          "type_name": "ApiGetStreamByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiGetStreamsAssetsRequest": {
          "type_name": "ApiGetStreamsAssetsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            },
            "streamAssetSearchRequest": {
              "name": "streamAssetSearchRequest",
              "description": ""
            }
          }
        },
        "ApiGetStreamsRequest": {
          "type_name": "ApiGetStreamsRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "limit": {
              "name": "limit",
              "description": ""
            },
            "offset": {
              "name": "offset",
              "description": ""
            }
          }
        },
        "ApiUpdateStreamAssetByUuidRequest": {
          "type_name": "ApiUpdateStreamAssetByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "asset": {
              "name": "asset",
              "description": ""
            },
            "assetId": {
              "name": "assetId",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamAssetPutRequest": {
              "name": "streamAssetPutRequest",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            }
          }
        },
        "ApiUpdateStreamByUuidRequest": {
          "type_name": "ApiUpdateStreamByUuidRequest",
          "fields": {
            "ApiService": {
              "name": "ApiService",
              "description": ""
            },
            "ctx": {
              "name": "ctx",
              "description": ""
            },
            "streamId": {
              "name": "streamId",
              "description": ""
            },
            "streamPutRequest": {
              "name": "streamPutRequest",
              "description": ""
            }
          }
        }
      }
    }
  },
  "types": {
    "APIClient": {
      "type_name": "APIClient",
      "description": "APIClient manages communication with the Equinix Fabric API v4 API v4.23\nIn most cases there should be only one, shared, APIClient.",
      "fields": {
        "ClientInterfacesApi": {
          "name": "ClientInterfacesApi",
          "description": ""
        },
        "CloudEventsApi": {
          "name": "CloudEventsApi",
          "description": ""
        },
        "CloudRoutersApi": {
          "name": "CloudRoutersApi",
          "description": ""
        },
        "ConnectionsApi": {
          "name": "ConnectionsApi",
          "description": ""
        },
        "DeploymentsApi": {
          "name": "DeploymentsApi",
          "description": ""
        },
        "HealthApi": {
          "name": "HealthApi",
          "description": ""
        },
        "MarketplaceSubscriptionsApi": {
          "name": "MarketplaceSubscriptionsApi",
          "description": ""
        },
        "MetricsApi": {
          "name": "MetricsApi",
          "description": ""
        },
        "MetrosApi": {
          "name": "MetrosApi",
          "description": ""
        },
        "NetworksApi": {
          "name": "NetworksApi",
          "description": ""
        },
        "PortsApi": {
          "name": "PortsApi",
          "description": ""
        },
        "PrecisionTimeApi": {
          "name": "PrecisionTimeApi",
          "description": ""
        },
        "PricesApi": {
          "name": "PricesApi",
          "description": ""
        },
        "RouteAggregationRulesApi": {
          "name": "RouteAggregationRulesApi",
          "description": ""
        },
        "RouteAggregationsApi": {
          "name": "RouteAggregationsApi",
          "description": ""
        },
        "RouteFilterRulesApi": {
          "name": "RouteFilterRulesApi",
          "description": ""
        },
        "RouteFiltersApi": {
          "name": "RouteFiltersApi",
          "description": ""
        },
        "RoutingProtocolsApi": {
          "name": "RoutingProtocolsApi",
          "description": ""
        },
        "ServiceProfilesApi": {
          "name": "ServiceProfilesApi",
          "description": ""
        },
        "ServiceTokensApi": {
          "name": "ServiceTokensApi",
          "description": ""
        },
        "StatisticsApi": {
          "name": "StatisticsApi",
          "description": ""
        },
        "StreamAlertRulesApi": {
          "name": "StreamAlertRulesApi",
          "description": ""
        },
        "StreamSubscriptionsApi": {
          "name": "StreamSubscriptionsApi",
          "description": ""
        },
        "StreamsApi": {
          "name": "StreamsApi",
          "description": ""
        },
        "cfg": {
          "name": "cfg",
          "description": ""
        },
        "common": {
          "name": "common",
          "description": "Reuse a single struct instead of allocating one for each service on the heap."
        }
      }
    },
    "APIKey": {
      "type_name": "APIKey",
      "description": "APIKey provides API key based authentication to a request passed via context using ContextAPIKey",
      "fields": {
        "Key": {
          "name": "Key",
          "description": ""
        },
        "Prefix": {
          "name": "Prefix",
          "description": ""
        }
      }
    },
    "APIResponse": {
      "type_name": "APIResponse",
      "description": "APIResponse stores the API response returned by the server.",
      "fields": {
        "Message": {
          "name": "Message",
          "description": "",
          "json_tag": "message"
        },
        "Method": {
          "name": "Method",
          "description": "Method is the HTTP method used for the request.  This value is always\navailable, even if the embedded *http.Response is nil.",
          "json_tag": "method"
        },
        "Operation": {
          "name": "Operation",
          "description": "Operation is the name of the OpenAPI operation.",
          "json_tag": "operation"
        },
        "Payload": {
          "name": "Payload",
          "description": "Payload holds the contents of the response body (which may be nil or empty).\nThis is provided here as the raw response.Body() reader will have already\nbeen drained.",
          "json_tag": "-"
        },
        "RequestURL": {
          "name": "RequestURL",
          "description": "RequestURL is the request URL. This value is always available, even if the\nembedded *http.Response is nil.",
          "json_tag": "url"
        }
      }
    },
    "AWSDirectConnect": {
      "type_name": "AWSDirectConnect",
      "description": "AWSDirectConnect Direct Connect helps to identify the direct connect to use or creates new one.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Id": {
          "name": "Id",
          "description": "",
          "json_tag": "id"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "AWSDirectConnectResponse": {
      "type_name": "AWSDirectConnectResponse",
      "description": "AWSDirectConnectResponse struct for AWSDirectConnectResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Id": {
          "name": "Id",
          "description": "",
          "json_tag": "id"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "AWSPermission": {
      "type_name": "AWSPermission",
      "description": "AWSPermission Provides the AWS permission configuration for the orchestrator. This permission is used to manage the AWS resources and their access control.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Region": {
          "name": "Region",
          "description": "",
          "json_tag": "region"
        },
        "RoleArn": {
          "name": "RoleArn",
          "description": "",
          "json_tag": "roleArn"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "AWSProvider": {
      "type_name": "AWSProvider",
      "description": "AWSProvider The Orchestrator AWS Providers schema defines the structure for the orchestrator aws provider configuration.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Resources": {
          "name": "Resources",
          "description": "",
          "json_tag": "resources"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "AWSProviderResource": {
      "type_name": "AWSProviderResource",
      "description": "AWSProviderResource - struct for AWSProviderResource",
      "fields": {
        "AWSDirectConnect": {
          "name": "AWSDirectConnect",
          "description": ""
        },
        "AWSPermission": {
          "name": "AWSPermission",
          "description": ""
        },
        "AWSVirtualPrivateGateway": {
          "name": "AWSVirtualPrivateGateway",
          "description": ""
        }
      }
    },
    "AWSProviderResourceResponse": {
      "type_name": "AWSProviderResourceResponse",
      "description": "AWSProviderResourceResponse - struct for AWSProviderResourceResponse",
      "fields": {
        "AWSDirectConnectResponse": {
          "name": "AWSDirectConnectResponse",
          "description": ""
        },
        "AWSPermission": {
          "name": "AWSPermission",
          "description": ""
        },
        "AWSVirtualPrivateGatewayResponse": {
          "name": "AWSVirtualPrivateGatewayResponse",
          "description": ""
        }
      }
    },
    "AWSProviderResponse": {
      "type_name": "AWSProviderResponse",
      "description": "AWSProviderResponse struct for AWSProviderResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Resources": {
          "name": "Resources",
          "description": "",
          "json_tag": "resources"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "AWSVirtualPrivateGateway": {
      "type_name": "AWSVirtualPrivateGateway",
      "description": "AWSVirtualPrivateGateway The VirtualPrivateGateway schema defines the structure for the virtual private gateway configuration. It includes details about the gateway type, required flag, VPC and subnet IDs, and deployment properties.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Required": {
          "name": "Required",
          "description": "",
          "json_tag": "required"
        },
        "SubnetId": {
          "name": "SubnetId",
          "description": "",
          "json_tag": "subnetId"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "VpcId": {
          "name": "VpcId",
          "description": "",
          "json_tag": "vpcId"
        }
      }
    },
    "AWSVirtualPrivateGatewayResponse": {
      "type_name": "AWSVirtualPrivateGatewayResponse",
      "description": "AWSVirtualPrivateGatewayResponse struct for AWSVirtualPrivateGatewayResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Id": {
          "name": "Id",
          "description": "Virtual private gateway id.",
          "json_tag": "id"
        },
        "Required": {
          "name": "Required",
          "description": "",
          "json_tag": "required"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "SubnetId": {
          "name": "SubnetId",
          "description": "",
          "json_tag": "subnetId"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "VpcId": {
          "name": "VpcId",
          "description": "",
          "json_tag": "vpcId"
        }
      }
    },
    "AccessPoint": {
      "type_name": "AccessPoint",
      "description": "AccessPoint Access point object",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AuthenticationKey": {
          "name": "AuthenticationKey",
          "description": "Access point authentication key",
          "json_tag": "authenticationKey"
        },
        "Interconnection": {
          "name": "Interconnection",
          "description": "",
          "json_tag": "interconnection"
        },
        "Interface": {
          "name": "Interface",
          "description": "",
          "json_tag": "interface"
        },
        "LinkProtocol": {
          "name": "LinkProtocol",
          "description": "",
          "json_tag": "linkProtocol"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Network": {
          "name": "Network",
          "description": "",
          "json_tag": "network"
        },
        "PeeringType": {
          "name": "PeeringType",
          "description": "",
          "json_tag": "peeringType"
        },
        "Port": {
          "name": "Port",
          "description": "",
          "json_tag": "port"
        },
        "Profile": {
          "name": "Profile",
          "description": "",
          "json_tag": "profile"
        },
        "ProviderConnectionId": {
          "name": "ProviderConnectionId",
          "description": "Provider assigned Connection Id",
          "json_tag": "providerConnectionId"
        },
        "Role": {
          "name": "Role",
          "description": "",
          "json_tag": "role"
        },
        "Router": {
          "name": "Router",
          "description": "",
          "json_tag": "router"
        },
        "SellerRegion": {
          "name": "SellerRegion",
          "description": "Access point seller region",
          "json_tag": "sellerRegion"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "VirtualDevice": {
          "name": "VirtualDevice",
          "description": "",
          "json_tag": "virtualDevice"
        },
        "VirtualNetwork": {
          "name": "VirtualNetwork",
          "description": "",
          "json_tag": "virtualNetwork"
        },
        "VpicInterface": {
          "name": "VpicInterface",
          "description": "",
          "json_tag": "vpic_interface"
        }
      }
    },
    "AccessPointSelector": {
      "type_name": "AccessPointSelector",
      "description": "AccessPointSelector List of criteria for selecting network access points with optimal efficiency, security, compatibility, and availability.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "HideAssetInfo": {
          "name": "HideAssetInfo",
          "description": "Deprecated",
          "json_tag": "hideAssetInfo"
        },
        "Interface": {
          "name": "Interface",
          "description": "",
          "json_tag": "interface"
        },
        "LinkProtocol": {
          "name": "LinkProtocol",
          "description": "",
          "json_tag": "linkProtocol"
        },
        "Network": {
          "name": "Network",
          "description": "",
          "json_tag": "network"
        },
        "Port": {
          "name": "Port",
          "description": "",
          "json_tag": "port"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "VirtualDevice": {
          "name": "VirtualDevice",
          "description": "",
          "json_tag": "virtualDevice"
        }
      }
    },
    "ActionRequest": {
      "type_name": "ActionRequest",
      "description": "ActionRequest - struct for ActionRequest",
      "fields": {
        "AWSPermission": {
          "name": "AWSPermission",
          "description": ""
        },
        "GCPPermission": {
          "name": "GCPPermission",
          "description": ""
        }
      }
    },
    "AddOperation": {
      "type_name": "AddOperation",
      "description": "AddOperation Add Sub-Resource to the existing model",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "A JSON Pointer path.",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "value to add",
          "json_tag": "value"
        }
      }
    },
    "AlertRulePostRequest": {
      "type_name": "AlertRulePostRequest",
      "description": "AlertRulePostRequest Create Stream Alert Rules",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CriticalThreshold": {
          "name": "CriticalThreshold",
          "description": "Stream alert rule metric critical threshold",
          "json_tag": "criticalThreshold"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided stream description",
          "json_tag": "description"
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Stream alert rule enabled status",
          "json_tag": "enabled"
        },
        "MetricName": {
          "name": "MetricName",
          "description": "Stream alert rule metric name",
          "json_tag": "metricName"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided stream name",
          "json_tag": "name"
        },
        "Operand": {
          "name": "Operand",
          "description": "",
          "json_tag": "operand"
        },
        "ResourceSelector": {
          "name": "ResourceSelector",
          "description": "",
          "json_tag": "resourceSelector"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "WarningThreshold": {
          "name": "WarningThreshold",
          "description": "Stream alert rule metric warning threshold",
          "json_tag": "warningThreshold"
        },
        "WindowSize": {
          "name": "WindowSize",
          "description": "Stream alert rule metric window size",
          "json_tag": "windowSize"
        }
      }
    },
    "AlertRulePutRequest": {
      "type_name": "AlertRulePutRequest",
      "description": "AlertRulePutRequest Create Stream Alert Rules",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CriticalThreshold": {
          "name": "CriticalThreshold",
          "description": "Stream alert rule metric critical threshold",
          "json_tag": "criticalThreshold"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided stream description",
          "json_tag": "description"
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Stream alert rule enabled status",
          "json_tag": "enabled"
        },
        "MetricName": {
          "name": "MetricName",
          "description": "Stream alert rule metric name",
          "json_tag": "metricName"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided stream name",
          "json_tag": "name"
        },
        "Operand": {
          "name": "Operand",
          "description": "",
          "json_tag": "operand"
        },
        "ResourceSelector": {
          "name": "ResourceSelector",
          "description": "",
          "json_tag": "resourceSelector"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "WarningThreshold": {
          "name": "WarningThreshold",
          "description": "Stream alert rule metric warning threshold",
          "json_tag": "warningThreshold"
        },
        "WindowSize": {
          "name": "WindowSize",
          "description": "Stream alert rule metric window size",
          "json_tag": "windowSize"
        }
      }
    },
    "AllPhysicalPortsResponse": {
      "type_name": "AllPhysicalPortsResponse",
      "description": "AllPhysicalPortsResponse GET All Physical Ports",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "GET All Physical Ports",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "AllPortsResponse": {
      "type_name": "AllPortsResponse",
      "description": "AllPortsResponse GET All User Port Across Fabric Metros",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "GET All User Port Across Fabric Metros",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "ApiActionDeploymentRequest": {
      "type_name": "ApiActionDeploymentRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "deploymentActionRequest": {
          "name": "deploymentActionRequest",
          "description": ""
        },
        "deploymentId": {
          "name": "deploymentId",
          "description": ""
        }
      }
    },
    "ApiAddToLagRequest": {
      "type_name": "ApiAddToLagRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "bulkPhysicalPort": {
          "name": "bulkPhysicalPort",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "portId": {
          "name": "portId",
          "description": ""
        }
      }
    },
    "ApiAttachConnectionRouteAggregationRequest": {
      "type_name": "ApiAttachConnectionRouteAggregationRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        }
      }
    },
    "ApiAttachConnectionRouteFilterRequest": {
      "type_name": "ApiAttachConnectionRouteFilterRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "connectionRouteFiltersBase": {
          "name": "connectionRouteFiltersBase",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        }
      }
    },
    "ApiConfig": {
      "type_name": "ApiConfig",
      "description": "ApiConfig Configuration for API based Integration for Service Profile",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AllowOverSubscription": {
          "name": "AllowOverSubscription",
          "description": "Setting showing that oversubscription support is available (true) or not (false). The default is false. Oversubscription is the sale of more than the available network bandwidth. This practice is common and legitimate. After all, many customers use less bandwidth than they've purchased. And network users don't consume bandwidth all at the same time. The leftover bandwidth can be sold to other customers. When demand surges, operational and engineering resources can be shifted to accommodate the load.",
          "json_tag": "allowOverSubscription"
        },
        "ApiAvailable": {
          "name": "ApiAvailable",
          "description": "Setting indicating whether the API is available (true) or not (false).",
          "json_tag": "apiAvailable"
        },
        "BandwidthFromApi": {
          "name": "BandwidthFromApi",
          "description": "",
          "json_tag": "bandwidthFromApi"
        },
        "EquinixManagedPort": {
          "name": "EquinixManagedPort",
          "description": "Setting indicating that the port is managed by Equinix (true) or not (false).",
          "json_tag": "equinixManagedPort"
        },
        "EquinixManagedVlan": {
          "name": "EquinixManagedVlan",
          "description": "Setting indicating that the VLAN is managed by Equinix (true) or not (false).",
          "json_tag": "equinixManagedVlan"
        },
        "IntegrationId": {
          "name": "IntegrationId",
          "description": "",
          "json_tag": "integrationId"
        },
        "OverSubscriptionLimit": {
          "name": "OverSubscriptionLimit",
          "description": "A cap on oversubscription.",
          "json_tag": "overSubscriptionLimit"
        }
      }
    },
    "ApiCreateCloudRouterActionRequest": {
      "type_name": "ApiCreateCloudRouterActionRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "cloudRouterActionRequest": {
          "name": "cloudRouterActionRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiCreateCloudRouterCommandRequest": {
      "type_name": "ApiCreateCloudRouterCommandRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "cloudRouterCommandPostRequest": {
          "name": "cloudRouterCommandPostRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiCreateCloudRouterRequest": {
      "type_name": "ApiCreateCloudRouterRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "cloudRouterPostRequest": {
          "name": "cloudRouterPostRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "dryRun": {
          "name": "dryRun",
          "description": ""
        }
      }
    },
    "ApiCreateConnectionActionRequest": {
      "type_name": "ApiCreateConnectionActionRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionActionRequest": {
          "name": "connectionActionRequest",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiCreateConnectionRequest": {
      "type_name": "ApiCreateConnectionRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionPostRequest": {
          "name": "connectionPostRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "dryRun": {
          "name": "dryRun",
          "description": ""
        }
      }
    },
    "ApiCreateConnectionRoutingProtocolRequest": {
      "type_name": "ApiCreateConnectionRoutingProtocolRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routingProtocolBase": {
          "name": "routingProtocolBase",
          "description": ""
        }
      }
    },
    "ApiCreateConnectionRoutingProtocolsInBulkRequest": {
      "type_name": "ApiCreateConnectionRoutingProtocolsInBulkRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "connectionRoutingProtocolPostRequest": {
          "name": "connectionRoutingProtocolPostRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiCreateNetworkRequest": {
      "type_name": "ApiCreateNetworkRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "dryRun": {
          "name": "dryRun",
          "description": ""
        },
        "networkPostRequest": {
          "name": "networkPostRequest",
          "description": ""
        }
      }
    },
    "ApiCreatePortRequest": {
      "type_name": "ApiCreatePortRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "dryRun": {
          "name": "dryRun",
          "description": ""
        },
        "portRequest": {
          "name": "portRequest",
          "description": ""
        }
      }
    },
    "ApiCreateRouteAggregationRequest": {
      "type_name": "ApiCreateRouteAggregationRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationsBase": {
          "name": "routeAggregationsBase",
          "description": ""
        }
      }
    },
    "ApiCreateRouteAggregationRuleRequest": {
      "type_name": "ApiCreateRouteAggregationRuleRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        },
        "routeAggregationRulesBase": {
          "name": "routeAggregationRulesBase",
          "description": ""
        }
      }
    },
    "ApiCreateRouteAggregationRulesInBulkRequest": {
      "type_name": "ApiCreateRouteAggregationRulesInBulkRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        },
        "routeAggregationRulesPostRequest": {
          "name": "routeAggregationRulesPostRequest",
          "description": ""
        }
      }
    },
    "ApiCreateRouteFilterRequest": {
      "type_name": "ApiCreateRouteFilterRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFiltersBase": {
          "name": "routeFiltersBase",
          "description": ""
        }
      }
    },
    "ApiCreateRouteFilterRuleRequest": {
      "type_name": "ApiCreateRouteFilterRuleRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        },
        "routeFilterRulesBase": {
          "name": "routeFilterRulesBase",
          "description": ""
        }
      }
    },
    "ApiCreateRouteFilterRulesInBulkRequest": {
      "type_name": "ApiCreateRouteFilterRulesInBulkRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        },
        "routeFilterRulesPostRequest": {
          "name": "routeFilterRulesPostRequest",
          "description": ""
        }
      }
    },
    "ApiCreateServiceProfileRequest": {
      "type_name": "ApiCreateServiceProfileRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceProfileRequest": {
          "name": "serviceProfileRequest",
          "description": ""
        }
      }
    },
    "ApiCreateServiceTokenActionRequest": {
      "type_name": "ApiCreateServiceTokenActionRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceTokenActionRequest": {
          "name": "serviceTokenActionRequest",
          "description": ""
        },
        "serviceTokenId": {
          "name": "serviceTokenId",
          "description": ""
        }
      }
    },
    "ApiCreateServiceTokenRequest": {
      "type_name": "ApiCreateServiceTokenRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "dryRun": {
          "name": "dryRun",
          "description": ""
        },
        "serviceToken": {
          "name": "serviceToken",
          "description": ""
        }
      }
    },
    "ApiCreateStreamAlertRulesRequest": {
      "type_name": "ApiCreateStreamAlertRulesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "alertRulePostRequest": {
          "name": "alertRulePostRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiCreateStreamSubscriptionsRequest": {
      "type_name": "ApiCreateStreamSubscriptionsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        },
        "streamSubscriptionPostRequest": {
          "name": "streamSubscriptionPostRequest",
          "description": ""
        }
      }
    },
    "ApiCreateStreamsRequest": {
      "type_name": "ApiCreateStreamsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamPostRequest": {
          "name": "streamPostRequest",
          "description": ""
        }
      }
    },
    "ApiCreateTerraformTemplatesRequest": {
      "type_name": "ApiCreateTerraformTemplatesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "clientInterfaces": {
          "name": "clientInterfaces",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "deploymentId": {
          "name": "deploymentId",
          "description": ""
        }
      }
    },
    "ApiCreateTimeServicesRequest": {
      "type_name": "ApiCreateTimeServicesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "precisionTimeServiceRequest": {
          "name": "precisionTimeServiceRequest",
          "description": ""
        }
      }
    },
    "ApiCreateTopologyDeploymentRequest": {
      "type_name": "ApiCreateTopologyDeploymentRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "deployment": {
          "name": "deployment",
          "description": ""
        }
      }
    },
    "ApiDeleteCloudRouterByUuidRequest": {
      "type_name": "ApiDeleteCloudRouterByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiDeleteCloudRouterCommandByUuidRequest": {
      "type_name": "ApiDeleteCloudRouterCommandByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "commandId": {
          "name": "commandId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiDeleteConnectionByUuidRequest": {
      "type_name": "ApiDeleteConnectionByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiDeleteConnectionRoutingProtocolByUuidRequest": {
      "type_name": "ApiDeleteConnectionRoutingProtocolByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routingProtocolId": {
          "name": "routingProtocolId",
          "description": ""
        }
      }
    },
    "ApiDeleteDeploymentRequest": {
      "type_name": "ApiDeleteDeploymentRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "deploymentId": {
          "name": "deploymentId",
          "description": ""
        }
      }
    },
    "ApiDeleteNetworkByUuidRequest": {
      "type_name": "ApiDeleteNetworkByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "networkId": {
          "name": "networkId",
          "description": ""
        }
      }
    },
    "ApiDeletePortRequest": {
      "type_name": "ApiDeletePortRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "dryRun": {
          "name": "dryRun",
          "description": ""
        },
        "portId": {
          "name": "portId",
          "description": ""
        }
      }
    },
    "ApiDeleteRouteAggregationByUuidRequest": {
      "type_name": "ApiDeleteRouteAggregationByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        }
      }
    },
    "ApiDeleteRouteAggregationRuleByUuidRequest": {
      "type_name": "ApiDeleteRouteAggregationRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        },
        "routeAggregationRuleId": {
          "name": "routeAggregationRuleId",
          "description": ""
        }
      }
    },
    "ApiDeleteRouteFilterByUuidRequest": {
      "type_name": "ApiDeleteRouteFilterByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        }
      }
    },
    "ApiDeleteRouteFilterRuleByUuidRequest": {
      "type_name": "ApiDeleteRouteFilterRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        },
        "routeFilterRuleId": {
          "name": "routeFilterRuleId",
          "description": ""
        }
      }
    },
    "ApiDeleteServiceProfileByUuidRequest": {
      "type_name": "ApiDeleteServiceProfileByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceProfileId": {
          "name": "serviceProfileId",
          "description": ""
        }
      }
    },
    "ApiDeleteServiceTokenByUuidRequest": {
      "type_name": "ApiDeleteServiceTokenByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceTokenId": {
          "name": "serviceTokenId",
          "description": ""
        }
      }
    },
    "ApiDeleteStreamAlertRuleByUuidRequest": {
      "type_name": "ApiDeleteStreamAlertRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "alertRuleId": {
          "name": "alertRuleId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiDeleteStreamAssetByUuidRequest": {
      "type_name": "ApiDeleteStreamAssetByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "asset": {
          "name": "asset",
          "description": ""
        },
        "assetId": {
          "name": "assetId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiDeleteStreamByUuidRequest": {
      "type_name": "ApiDeleteStreamByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiDeleteStreamSubscriptionByUuidRequest": {
      "type_name": "ApiDeleteStreamSubscriptionByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        },
        "subscriptionId": {
          "name": "subscriptionId",
          "description": ""
        }
      }
    },
    "ApiDeleteTimeServiceByIdRequest": {
      "type_name": "ApiDeleteTimeServiceByIdRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceId": {
          "name": "serviceId",
          "description": ""
        }
      }
    },
    "ApiDetachConnectionRouteAggregationRequest": {
      "type_name": "ApiDetachConnectionRouteAggregationRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        }
      }
    },
    "ApiDetachConnectionRouteFilterRequest": {
      "type_name": "ApiDetachConnectionRouteFilterRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        }
      }
    },
    "ApiFulfillTimeServicesRequest": {
      "type_name": "ApiFulfillTimeServicesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "precisionTimeServiceRequest": {
          "name": "precisionTimeServiceRequest",
          "description": ""
        },
        "serviceId": {
          "name": "serviceId",
          "description": ""
        }
      }
    },
    "ApiGetAllCloudRouterCommandsRequest": {
      "type_name": "ApiGetAllCloudRouterCommandsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiGetCloudEventByAssetIdRequest": {
      "type_name": "ApiGetCloudEventByAssetIdRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "asset": {
          "name": "asset",
          "description": ""
        },
        "assetId": {
          "name": "assetId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "fromDateTime": {
          "name": "fromDateTime",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "toDateTime": {
          "name": "toDateTime",
          "description": ""
        }
      }
    },
    "ApiGetCloudEventRequest": {
      "type_name": "ApiGetCloudEventRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "cloudEventId": {
          "name": "cloudEventId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiGetCloudRouterActionsByUuidRequest": {
      "type_name": "ApiGetCloudRouterActionsByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "actionId": {
          "name": "actionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        },
        "state": {
          "name": "state",
          "description": ""
        }
      }
    },
    "ApiGetCloudRouterActionsRequest": {
      "type_name": "ApiGetCloudRouterActionsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        },
        "state": {
          "name": "state",
          "description": ""
        }
      }
    },
    "ApiGetCloudRouterByUuidRequest": {
      "type_name": "ApiGetCloudRouterByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiGetCloudRouterCommandRequest": {
      "type_name": "ApiGetCloudRouterCommandRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "commandId": {
          "name": "commandId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiGetCloudRouterPackageByCodeRequest": {
      "type_name": "ApiGetCloudRouterPackageByCodeRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerPackageCode": {
          "name": "routerPackageCode",
          "description": ""
        }
      }
    },
    "ApiGetCloudRouterPackagesRequest": {
      "type_name": "ApiGetCloudRouterPackagesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        }
      }
    },
    "ApiGetConnectionByUuidRequest": {
      "type_name": "ApiGetConnectionByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "direction": {
          "name": "direction",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRouteAggregationByUuidRequest": {
      "type_name": "ApiGetConnectionRouteAggregationByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRouteAggregationsRequest": {
      "type_name": "ApiGetConnectionRouteAggregationsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRouteFilterByUuidRequest": {
      "type_name": "ApiGetConnectionRouteFilterByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRouteFiltersRequest": {
      "type_name": "ApiGetConnectionRouteFiltersRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRoutingProtocolAllBgpActionsRequest": {
      "type_name": "ApiGetConnectionRoutingProtocolAllBgpActionsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "routingProtocolId": {
          "name": "routingProtocolId",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRoutingProtocolByUuidRequest": {
      "type_name": "ApiGetConnectionRoutingProtocolByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routingProtocolId": {
          "name": "routingProtocolId",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRoutingProtocolsBgpActionByUuidRequest": {
      "type_name": "ApiGetConnectionRoutingProtocolsBgpActionByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "actionId": {
          "name": "actionId",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routingProtocolId": {
          "name": "routingProtocolId",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRoutingProtocolsChangeByUuidRequest": {
      "type_name": "ApiGetConnectionRoutingProtocolsChangeByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "changeId": {
          "name": "changeId",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routingProtocolId": {
          "name": "routingProtocolId",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRoutingProtocolsChangesRequest": {
      "type_name": "ApiGetConnectionRoutingProtocolsChangesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "routingProtocolId": {
          "name": "routingProtocolId",
          "description": ""
        }
      }
    },
    "ApiGetConnectionRoutingProtocolsRequest": {
      "type_name": "ApiGetConnectionRoutingProtocolsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        }
      }
    },
    "ApiGetConnectionStatsByPortUuidRequest": {
      "type_name": "ApiGetConnectionStatsByPortUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "endDateTime": {
          "name": "endDateTime",
          "description": ""
        },
        "startDateTime": {
          "name": "startDateTime",
          "description": ""
        },
        "viewPoint": {
          "name": "viewPoint",
          "description": ""
        }
      }
    },
    "ApiGetConnectionsByNetworkUuidRequest": {
      "type_name": "ApiGetConnectionsByNetworkUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "networkId": {
          "name": "networkId",
          "description": ""
        }
      }
    },
    "ApiGetDeploymentRequest": {
      "type_name": "ApiGetDeploymentRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "deploymentId": {
          "name": "deploymentId",
          "description": ""
        }
      }
    },
    "ApiGetMetricByAssetIdRequest": {
      "type_name": "ApiGetMetricByAssetIdRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "asset": {
          "name": "asset",
          "description": ""
        },
        "assetId": {
          "name": "assetId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "fromDateTime": {
          "name": "fromDateTime",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "name": {
          "name": "name",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "toDateTime": {
          "name": "toDateTime",
          "description": ""
        }
      }
    },
    "ApiGetMetroByCodeRequest": {
      "type_name": "ApiGetMetroByCodeRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "metroCode": {
          "name": "metroCode",
          "description": ""
        }
      }
    },
    "ApiGetMetrosRequest": {
      "type_name": "ApiGetMetrosRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "presence": {
          "name": "presence",
          "description": ""
        }
      }
    },
    "ApiGetNetworkByUuidRequest": {
      "type_name": "ApiGetNetworkByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "networkId": {
          "name": "networkId",
          "description": ""
        }
      }
    },
    "ApiGetNetworkChangeByUuidRequest": {
      "type_name": "ApiGetNetworkChangeByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "changeId": {
          "name": "changeId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "networkId": {
          "name": "networkId",
          "description": ""
        }
      }
    },
    "ApiGetNetworkChangesRequest": {
      "type_name": "ApiGetNetworkChangesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "networkId": {
          "name": "networkId",
          "description": ""
        }
      }
    },
    "ApiGetPortByUuidRequest": {
      "type_name": "ApiGetPortByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "portId": {
          "name": "portId",
          "description": ""
        }
      }
    },
    "ApiGetPortStatsByPortUuidRequest": {
      "type_name": "ApiGetPortStatsByPortUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "endDateTime": {
          "name": "endDateTime",
          "description": ""
        },
        "portId": {
          "name": "portId",
          "description": ""
        },
        "startDateTime": {
          "name": "startDateTime",
          "description": ""
        }
      }
    },
    "ApiGetPortsRequest": {
      "type_name": "ApiGetPortsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "name": {
          "name": "name",
          "description": ""
        }
      }
    },
    "ApiGetRouteAggregationByUuidRequest": {
      "type_name": "ApiGetRouteAggregationByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        }
      }
    },
    "ApiGetRouteAggregationChangeByUuidRequest": {
      "type_name": "ApiGetRouteAggregationChangeByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "changeId": {
          "name": "changeId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        }
      }
    },
    "ApiGetRouteAggregationChangesRequest": {
      "type_name": "ApiGetRouteAggregationChangesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        }
      }
    },
    "ApiGetRouteAggregationConnectionsRequest": {
      "type_name": "ApiGetRouteAggregationConnectionsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        }
      }
    },
    "ApiGetRouteAggregationRuleByUuidRequest": {
      "type_name": "ApiGetRouteAggregationRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        },
        "routeAggregationRuleId": {
          "name": "routeAggregationRuleId",
          "description": ""
        }
      }
    },
    "ApiGetRouteAggregationRuleChangeByUuidRequest": {
      "type_name": "ApiGetRouteAggregationRuleChangeByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "changeId": {
          "name": "changeId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        },
        "routeAggregationRuleId": {
          "name": "routeAggregationRuleId",
          "description": ""
        }
      }
    },
    "ApiGetRouteAggregationRuleChangesRequest": {
      "type_name": "ApiGetRouteAggregationRuleChangesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        },
        "routeAggregationRuleId": {
          "name": "routeAggregationRuleId",
          "description": ""
        }
      }
    },
    "ApiGetRouteAggregationRulesRequest": {
      "type_name": "ApiGetRouteAggregationRulesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        }
      }
    },
    "ApiGetRouteFilterByUuidRequest": {
      "type_name": "ApiGetRouteFilterByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        }
      }
    },
    "ApiGetRouteFilterChangeByUuidRequest": {
      "type_name": "ApiGetRouteFilterChangeByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "changeId": {
          "name": "changeId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        }
      }
    },
    "ApiGetRouteFilterChangesRequest": {
      "type_name": "ApiGetRouteFilterChangesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        }
      }
    },
    "ApiGetRouteFilterConnectionsRequest": {
      "type_name": "ApiGetRouteFilterConnectionsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        }
      }
    },
    "ApiGetRouteFilterRuleByUuidRequest": {
      "type_name": "ApiGetRouteFilterRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        },
        "routeFilterRuleId": {
          "name": "routeFilterRuleId",
          "description": ""
        }
      }
    },
    "ApiGetRouteFilterRuleChangeByUuidRequest": {
      "type_name": "ApiGetRouteFilterRuleChangeByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "changeId": {
          "name": "changeId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        },
        "routeFilterRuleId": {
          "name": "routeFilterRuleId",
          "description": ""
        }
      }
    },
    "ApiGetRouteFilterRuleChangesRequest": {
      "type_name": "ApiGetRouteFilterRuleChangesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        },
        "routeFilterRuleId": {
          "name": "routeFilterRuleId",
          "description": ""
        }
      }
    },
    "ApiGetRouteFilterRulesRequest": {
      "type_name": "ApiGetRouteFilterRulesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        }
      }
    },
    "ApiGetServiceProfileByUuidRequest": {
      "type_name": "ApiGetServiceProfileByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceProfileId": {
          "name": "serviceProfileId",
          "description": ""
        },
        "viewPoint": {
          "name": "viewPoint",
          "description": ""
        }
      }
    },
    "ApiGetServiceProfileMetrosByUuidRequest": {
      "type_name": "ApiGetServiceProfileMetrosByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "serviceProfileId": {
          "name": "serviceProfileId",
          "description": ""
        }
      }
    },
    "ApiGetServiceProfilesRequest": {
      "type_name": "ApiGetServiceProfilesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "viewPoint": {
          "name": "viewPoint",
          "description": ""
        }
      }
    },
    "ApiGetServiceTokenByUuidRequest": {
      "type_name": "ApiGetServiceTokenByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceTokenId": {
          "name": "serviceTokenId",
          "description": ""
        }
      }
    },
    "ApiGetServiceTokensRequest": {
      "type_name": "ApiGetServiceTokensRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        }
      }
    },
    "ApiGetStatusRequest": {
      "type_name": "ApiGetStatusRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiGetStreamAlertRuleByUuidRequest": {
      "type_name": "ApiGetStreamAlertRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "alertRuleId": {
          "name": "alertRuleId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiGetStreamAlertRulesRequest": {
      "type_name": "ApiGetStreamAlertRulesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiGetStreamAssetByUuidRequest": {
      "type_name": "ApiGetStreamAssetByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "asset": {
          "name": "asset",
          "description": ""
        },
        "assetId": {
          "name": "assetId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiGetStreamByUuidRequest": {
      "type_name": "ApiGetStreamByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiGetStreamSubscriptionByUuidRequest": {
      "type_name": "ApiGetStreamSubscriptionByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        },
        "subscriptionId": {
          "name": "subscriptionId",
          "description": ""
        }
      }
    },
    "ApiGetStreamSubscriptionsRequest": {
      "type_name": "ApiGetStreamSubscriptionsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiGetStreamsAssetsRequest": {
      "type_name": "ApiGetStreamsAssetsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "streamAssetSearchRequest": {
          "name": "streamAssetSearchRequest",
          "description": ""
        }
      }
    },
    "ApiGetStreamsRequest": {
      "type_name": "ApiGetStreamsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        }
      }
    },
    "ApiGetSubscriptionByIdRequest": {
      "type_name": "ApiGetSubscriptionByIdRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "subscriptionId": {
          "name": "subscriptionId",
          "description": ""
        }
      }
    },
    "ApiGetTimeServicesByIdRequest": {
      "type_name": "ApiGetTimeServicesByIdRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceId": {
          "name": "serviceId",
          "description": ""
        }
      }
    },
    "ApiGetTimeServicesConnectionsByServiceIdRequest": {
      "type_name": "ApiGetTimeServicesConnectionsByServiceIdRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceId": {
          "name": "serviceId",
          "description": ""
        }
      }
    },
    "ApiGetTimeServicesPackageByCodeRequest": {
      "type_name": "ApiGetTimeServicesPackageByCodeRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "packageCode": {
          "name": "packageCode",
          "description": ""
        }
      }
    },
    "ApiGetTimeServicesPackagesRequest": {
      "type_name": "ApiGetTimeServicesPackagesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiGetVlansRequest": {
      "type_name": "ApiGetVlansRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "portUuid": {
          "name": "portUuid",
          "description": ""
        }
      }
    },
    "ApiPatchConnectionRoutingProtocolByUuidRequest": {
      "type_name": "ApiPatchConnectionRoutingProtocolByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionChangeOperation": {
          "name": "connectionChangeOperation",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routingProtocolId": {
          "name": "routingProtocolId",
          "description": ""
        }
      }
    },
    "ApiPatchRouteAggregationByUuidRequest": {
      "type_name": "ApiPatchRouteAggregationByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        },
        "routeAggregationsPatchRequestItem": {
          "name": "routeAggregationsPatchRequestItem",
          "description": ""
        }
      }
    },
    "ApiPatchRouteAggregationRuleByUuidRequest": {
      "type_name": "ApiPatchRouteAggregationRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        },
        "routeAggregationRuleId": {
          "name": "routeAggregationRuleId",
          "description": ""
        },
        "routeAggregationRulesPatchRequestItem": {
          "name": "routeAggregationRulesPatchRequestItem",
          "description": ""
        }
      }
    },
    "ApiPatchRouteFilterByUuidRequest": {
      "type_name": "ApiPatchRouteFilterByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        },
        "routeFiltersPatchRequestItem": {
          "name": "routeFiltersPatchRequestItem",
          "description": ""
        }
      }
    },
    "ApiPatchRouteFilterRuleByUuidRequest": {
      "type_name": "ApiPatchRouteFilterRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        },
        "routeFilterRuleId": {
          "name": "routeFilterRuleId",
          "description": ""
        },
        "routeFilterRulesPatchRequestItem": {
          "name": "routeFilterRulesPatchRequestItem",
          "description": ""
        }
      }
    },
    "ApiPostConnectionRoutingProtocolBgpActionByUuidRequest": {
      "type_name": "ApiPostConnectionRoutingProtocolBgpActionByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "bGPActionRequest": {
          "name": "bGPActionRequest",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routingProtocolId": {
          "name": "routingProtocolId",
          "description": ""
        }
      }
    },
    "ApiPutServiceProfileByUuidRequest": {
      "type_name": "ApiPutServiceProfileByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "ifMatch": {
          "name": "ifMatch",
          "description": ""
        },
        "serviceProfileId": {
          "name": "serviceProfileId",
          "description": ""
        },
        "serviceProfileRequest": {
          "name": "serviceProfileRequest",
          "description": ""
        }
      }
    },
    "ApiReplaceConnectionRoutingProtocolByUuidRequest": {
      "type_name": "ApiReplaceConnectionRoutingProtocolByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routingProtocolBase": {
          "name": "routingProtocolBase",
          "description": ""
        },
        "routingProtocolId": {
          "name": "routingProtocolId",
          "description": ""
        }
      }
    },
    "ApiReplaceRouteAggregationRuleByUuidRequest": {
      "type_name": "ApiReplaceRouteAggregationRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationId": {
          "name": "routeAggregationId",
          "description": ""
        },
        "routeAggregationRuleId": {
          "name": "routeAggregationRuleId",
          "description": ""
        },
        "routeAggregationRulesBase": {
          "name": "routeAggregationRulesBase",
          "description": ""
        }
      }
    },
    "ApiReplaceRouteFilterRuleByUuidRequest": {
      "type_name": "ApiReplaceRouteFilterRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFilterId": {
          "name": "routeFilterId",
          "description": ""
        },
        "routeFilterRuleId": {
          "name": "routeFilterRuleId",
          "description": ""
        },
        "routeFilterRulesBase": {
          "name": "routeFilterRulesBase",
          "description": ""
        }
      }
    },
    "ApiSearchCloudEventsRequest": {
      "type_name": "ApiSearchCloudEventsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "cloudEventSearchRequest": {
          "name": "cloudEventSearchRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiSearchCloudRouterCommandsRequest": {
      "type_name": "ApiSearchCloudRouterCommandsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "cloudRouterCommandSearchRequest": {
          "name": "cloudRouterCommandSearchRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiSearchCloudRouterRoutesRequest": {
      "type_name": "ApiSearchCloudRouterRoutesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeTableEntrySearchRequest": {
          "name": "routeTableEntrySearchRequest",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiSearchCloudRoutersRequest": {
      "type_name": "ApiSearchCloudRoutersRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "cloudRouterSearchRequest": {
          "name": "cloudRouterSearchRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiSearchConnectionAdvertisedRoutesRequest": {
      "type_name": "ApiSearchConnectionAdvertisedRoutesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "connectionRouteSearchRequest": {
          "name": "connectionRouteSearchRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiSearchConnectionReceivedRoutesRequest": {
      "type_name": "ApiSearchConnectionReceivedRoutesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "connectionRouteSearchRequest": {
          "name": "connectionRouteSearchRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        }
      }
    },
    "ApiSearchConnectionsRequest": {
      "type_name": "ApiSearchConnectionsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "searchRequest": {
          "name": "searchRequest",
          "description": ""
        }
      }
    },
    "ApiSearchDeploymentsRequest": {
      "type_name": "ApiSearchDeploymentsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "deploymentSearchRequest": {
          "name": "deploymentSearchRequest",
          "description": ""
        }
      }
    },
    "ApiSearchNetworksRequest": {
      "type_name": "ApiSearchNetworksRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "networkSearchRequest": {
          "name": "networkSearchRequest",
          "description": ""
        }
      }
    },
    "ApiSearchPortsRequest": {
      "type_name": "ApiSearchPortsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "portV4SearchRequest": {
          "name": "portV4SearchRequest",
          "description": ""
        }
      }
    },
    "ApiSearchPricesRequest": {
      "type_name": "ApiSearchPricesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "filterBody": {
          "name": "filterBody",
          "description": ""
        }
      }
    },
    "ApiSearchProviderResourcesRequest": {
      "type_name": "ApiSearchProviderResourcesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "providerSearchRequest": {
          "name": "providerSearchRequest",
          "description": ""
        }
      }
    },
    "ApiSearchRouteAggregationsRequest": {
      "type_name": "ApiSearchRouteAggregationsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeAggregationsSearchBase": {
          "name": "routeAggregationsSearchBase",
          "description": ""
        }
      }
    },
    "ApiSearchRouteFiltersRequest": {
      "type_name": "ApiSearchRouteFiltersRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routeFiltersSearchBase": {
          "name": "routeFiltersSearchBase",
          "description": ""
        }
      }
    },
    "ApiSearchRouterActionsRequest": {
      "type_name": "ApiSearchRouterActionsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "cloudRouterActionsSearchRequest": {
          "name": "cloudRouterActionsSearchRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiSearchServiceProfilesRequest": {
      "type_name": "ApiSearchServiceProfilesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "serviceProfileSearchRequest": {
          "name": "serviceProfileSearchRequest",
          "description": ""
        },
        "viewPoint": {
          "name": "viewPoint",
          "description": ""
        }
      }
    },
    "ApiSearchServiceTokensRequest": {
      "type_name": "ApiSearchServiceTokensRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "limit": {
          "name": "limit",
          "description": ""
        },
        "offset": {
          "name": "offset",
          "description": ""
        },
        "serviceTokenSearchRequest": {
          "name": "serviceTokenSearchRequest",
          "description": ""
        }
      }
    },
    "ApiSearchTimeServicesRequest": {
      "type_name": "ApiSearchTimeServicesRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "timeServicesSearchRequest": {
          "name": "timeServicesSearchRequest",
          "description": ""
        }
      }
    },
    "ApiServices": {
      "type_name": "ApiServices",
      "description": "ApiServices Available services details",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ChangedDateTime": {
          "name": "ChangedDateTime",
          "description": "service status change date",
          "json_tag": "changedDateTime"
        },
        "Route": {
          "name": "Route",
          "description": "service routes",
          "json_tag": "route"
        },
        "Status": {
          "name": "Status",
          "description": "service status",
          "json_tag": "status"
        }
      }
    },
    "ApiUpdateCloudRouterByUuidRequest": {
      "type_name": "ApiUpdateCloudRouterByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "cloudRouterChangeOperation": {
          "name": "cloudRouterChangeOperation",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        }
      }
    },
    "ApiUpdateConnectionByUuidRequest": {
      "type_name": "ApiUpdateConnectionByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "connectionChangeOperation": {
          "name": "connectionChangeOperation",
          "description": ""
        },
        "connectionId": {
          "name": "connectionId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "dryRun": {
          "name": "dryRun",
          "description": ""
        }
      }
    },
    "ApiUpdateNetworkByUuidRequest": {
      "type_name": "ApiUpdateNetworkByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "networkChangeOperation": {
          "name": "networkChangeOperation",
          "description": ""
        },
        "networkId": {
          "name": "networkId",
          "description": ""
        }
      }
    },
    "ApiUpdatePortByUuidRequest": {
      "type_name": "ApiUpdatePortByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "dryRun": {
          "name": "dryRun",
          "description": ""
        },
        "portChangeOperation": {
          "name": "portChangeOperation",
          "description": ""
        },
        "portId": {
          "name": "portId",
          "description": ""
        }
      }
    },
    "ApiUpdateServiceProfileByUuidRequest": {
      "type_name": "ApiUpdateServiceProfileByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "ifMatch": {
          "name": "ifMatch",
          "description": ""
        },
        "jsonPatchOperation": {
          "name": "jsonPatchOperation",
          "description": ""
        },
        "serviceProfileId": {
          "name": "serviceProfileId",
          "description": ""
        }
      }
    },
    "ApiUpdateServiceTokenByUuidRequest": {
      "type_name": "ApiUpdateServiceTokenByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "dryRun": {
          "name": "dryRun",
          "description": ""
        },
        "serviceTokenChangeOperation": {
          "name": "serviceTokenChangeOperation",
          "description": ""
        },
        "serviceTokenId": {
          "name": "serviceTokenId",
          "description": ""
        }
      }
    },
    "ApiUpdateStreamAlertRuleByUuidRequest": {
      "type_name": "ApiUpdateStreamAlertRuleByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "alertRuleId": {
          "name": "alertRuleId",
          "description": ""
        },
        "alertRulePutRequest": {
          "name": "alertRulePutRequest",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiUpdateStreamAssetByUuidRequest": {
      "type_name": "ApiUpdateStreamAssetByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "asset": {
          "name": "asset",
          "description": ""
        },
        "assetId": {
          "name": "assetId",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamAssetPutRequest": {
          "name": "streamAssetPutRequest",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        }
      }
    },
    "ApiUpdateStreamByUuidRequest": {
      "type_name": "ApiUpdateStreamByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        },
        "streamPutRequest": {
          "name": "streamPutRequest",
          "description": ""
        }
      }
    },
    "ApiUpdateStreamSubscriptionByUuidRequest": {
      "type_name": "ApiUpdateStreamSubscriptionByUuidRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "streamId": {
          "name": "streamId",
          "description": ""
        },
        "streamSubscriptionPutRequest": {
          "name": "streamSubscriptionPutRequest",
          "description": ""
        },
        "subscriptionId": {
          "name": "subscriptionId",
          "description": ""
        }
      }
    },
    "ApiUpdateTimeServicesByIdRequest": {
      "type_name": "ApiUpdateTimeServicesByIdRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "precisionTimeChangeOperation": {
          "name": "precisionTimeChangeOperation",
          "description": ""
        },
        "serviceId": {
          "name": "serviceId",
          "description": ""
        }
      }
    },
    "ApiValidateConnectionsRequest": {
      "type_name": "ApiValidateConnectionsRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "validateRequest": {
          "name": "validateRequest",
          "description": ""
        }
      }
    },
    "ApiValidateRoutingProtocolRequest": {
      "type_name": "ApiValidateRoutingProtocolRequest",
      "fields": {
        "ApiService": {
          "name": "ApiService",
          "description": ""
        },
        "ctx": {
          "name": "ctx",
          "description": ""
        },
        "routerId": {
          "name": "routerId",
          "description": ""
        },
        "validateRequest": {
          "name": "validateRequest",
          "description": ""
        }
      }
    },
    "AuthContext": {
      "type_name": "AuthContext",
      "description": "AuthContext struct for AuthContext",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Authid": {
          "name": "Authid",
          "description": "",
          "json_tag": "authid"
        },
        "Authtype": {
          "name": "Authtype",
          "description": "",
          "json_tag": "authtype"
        },
        "Email": {
          "name": "Email",
          "description": "Cloud Event email",
          "json_tag": "email"
        },
        "Name": {
          "name": "Name",
          "description": "Cloud Event username",
          "json_tag": "name"
        }
      }
    },
    "AuthenticationKey": {
      "type_name": "AuthenticationKey",
      "description": "AuthenticationKey Authentication Key Support and Customization",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "",
          "json_tag": "description"
        },
        "Label": {
          "name": "Label",
          "description": "",
          "json_tag": "label"
        },
        "Required": {
          "name": "Required",
          "description": "",
          "json_tag": "required"
        }
      }
    },
    "BGPActionData": {
      "type_name": "BGPActionData",
      "description": "BGPActionData struct for BGPActionData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Changelog": {
          "name": "Changelog",
          "description": "",
          "json_tag": "changelog"
        },
        "Description": {
          "name": "Description",
          "description": "BGP action description",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Routing Protocol URI",
          "json_tag": "href"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Routing protocol identifier",
          "json_tag": "uuid"
        }
      }
    },
    "BGPActionRequest": {
      "type_name": "BGPActionRequest",
      "description": "BGPActionRequest BGP action request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "BGPActionsBulkData": {
      "type_name": "BGPActionsBulkData",
      "description": "BGPActionsBulkData List of BGP Actions",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "BGPConnectionIpv4": {
      "type_name": "BGPConnectionIpv4",
      "description": "BGPConnectionIpv4 struct for BGPConnectionIpv4",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CustomerPeerIp": {
          "name": "CustomerPeerIp",
          "description": "Customer side peering ip",
          "json_tag": "customerPeerIp"
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Admin status for the BGP session",
          "json_tag": "enabled"
        },
        "EquinixPeerIp": {
          "name": "EquinixPeerIp",
          "description": "Equinix side peering ip",
          "json_tag": "equinixPeerIp"
        },
        "InboundMED": {
          "name": "InboundMED",
          "description": "Inbound Multi Exit Discriminator attribute",
          "json_tag": "inboundMED"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "OutboundASPrependCount": {
          "name": "OutboundASPrependCount",
          "description": "AS path prepend count",
          "json_tag": "outboundASPrependCount"
        },
        "OutboundMED": {
          "name": "OutboundMED",
          "description": "Outbound Multi Exit Discriminator attribute",
          "json_tag": "outboundMED"
        },
        "RoutesMax": {
          "name": "RoutesMax",
          "description": "Maximum learnt prefixes limit",
          "json_tag": "routesMax"
        }
      }
    },
    "BGPConnectionIpv6": {
      "type_name": "BGPConnectionIpv6",
      "description": "BGPConnectionIpv6 struct for BGPConnectionIpv6",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CustomerPeerIp": {
          "name": "CustomerPeerIp",
          "description": "Customer side peering ip",
          "json_tag": "customerPeerIp"
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Admin status for the BGP session",
          "json_tag": "enabled"
        },
        "EquinixPeerIp": {
          "name": "EquinixPeerIp",
          "description": "Equinix side peering ip",
          "json_tag": "equinixPeerIp"
        },
        "InboundMED": {
          "name": "InboundMED",
          "description": "Inbound Multi Exit Discriminator attribute",
          "json_tag": "inboundMED"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "OutboundASPrependCount": {
          "name": "OutboundASPrependCount",
          "description": "AS path prepend count",
          "json_tag": "outboundASPrependCount"
        },
        "OutboundMED": {
          "name": "OutboundMED",
          "description": "Outbound Multi Exit Discriminator attribute",
          "json_tag": "outboundMED"
        },
        "RoutesMax": {
          "name": "RoutesMax",
          "description": "Maximum learnt prefixes limit",
          "json_tag": "routesMax"
        }
      }
    },
    "BGPConnectionOperation": {
      "type_name": "BGPConnectionOperation",
      "description": "BGPConnectionOperation BGP IPv4 or IPv6 Connection State operational data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "OpStatusChangedAt": {
          "name": "OpStatusChangedAt",
          "description": "Last BGP State Update by Date and Time",
          "json_tag": "opStatusChangedAt"
        },
        "OperationalStatus": {
          "name": "OperationalStatus",
          "description": "",
          "json_tag": "operationalStatus"
        }
      }
    },
    "BandwidthUtilization": {
      "type_name": "BandwidthUtilization",
      "description": "BandwidthUtilization Bandwidth utilization statistics (octet counters-based)",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Inbound": {
          "name": "Inbound",
          "description": "",
          "json_tag": "inbound"
        },
        "MetricInterval": {
          "name": "MetricInterval",
          "description": "An interval formatted value, indicating the time-interval the metric objects within the response represent",
          "json_tag": "metricInterval"
        },
        "Outbound": {
          "name": "Outbound",
          "description": "",
          "json_tag": "outbound"
        },
        "Unit": {
          "name": "Unit",
          "description": "",
          "json_tag": "unit"
        }
      }
    },
    "BasicAuth": {
      "type_name": "BasicAuth",
      "description": "BasicAuth provides basic http authentication to a request passed via context using ContextBasicAuth",
      "fields": {
        "Password": {
          "name": "Password",
          "description": "",
          "json_tag": "password"
        },
        "UserName": {
          "name": "UserName",
          "description": "",
          "json_tag": "userName"
        }
      }
    },
    "BulkPhysicalPort": {
      "type_name": "BulkPhysicalPort",
      "description": "BulkPhysicalPort Add to Lag request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "add physical ports to virtual port",
          "json_tag": "data"
        }
      }
    },
    "BulkPort": {
      "type_name": "BulkPort",
      "description": "BulkPort Bulk Port specification",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Ports that are part of BulkPort",
          "json_tag": "data"
        }
      }
    },
    "BulkPortRequest": {
      "type_name": "BulkPortRequest",
      "description": "BulkPortRequest Create bulk port request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        }
      }
    },
    "Change": {
      "type_name": "Change",
      "description": "Change Current state of latest connection change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Set when change flow starts",
          "json_tag": "createdDateTime"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Information": {
          "name": "Information",
          "description": "Additional information",
          "json_tag": "information"
        },
        "Status": {
          "name": "Status",
          "description": "",
          "json_tag": "status"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Set when change object is updated",
          "json_tag": "updatedDateTime"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "Changelog": {
      "type_name": "Changelog",
      "description": "Changelog Change log",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedBy": {
          "name": "CreatedBy",
          "description": "Created by User Key",
          "json_tag": "createdBy"
        },
        "CreatedByEmail": {
          "name": "CreatedByEmail",
          "description": "Created by User Email Address",
          "json_tag": "createdByEmail"
        },
        "CreatedByFullName": {
          "name": "CreatedByFullName",
          "description": "Created by User Full Name",
          "json_tag": "createdByFullName"
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Created by Date and Time",
          "json_tag": "createdDateTime"
        },
        "DeletedBy": {
          "name": "DeletedBy",
          "description": "Deleted by User Key",
          "json_tag": "deletedBy"
        },
        "DeletedByEmail": {
          "name": "DeletedByEmail",
          "description": "Deleted by User Email Address",
          "json_tag": "deletedByEmail"
        },
        "DeletedByFullName": {
          "name": "DeletedByFullName",
          "description": "Deleted by User Full Name",
          "json_tag": "deletedByFullName"
        },
        "DeletedDateTime": {
          "name": "DeletedDateTime",
          "description": "Deleted by Date and Time",
          "json_tag": "deletedDateTime"
        },
        "UpdatedBy": {
          "name": "UpdatedBy",
          "description": "Updated by User Key",
          "json_tag": "updatedBy"
        },
        "UpdatedByEmail": {
          "name": "UpdatedByEmail",
          "description": "Updated by User Email Address",
          "json_tag": "updatedByEmail"
        },
        "UpdatedByFullName": {
          "name": "UpdatedByFullName",
          "description": "Updated by User Full Name",
          "json_tag": "updatedByFullName"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Updated by Date and Time",
          "json_tag": "updatedDateTime"
        }
      }
    },
    "ClientInterfaces": {
      "type_name": "ClientInterfaces",
      "description": "ClientInterfaces struct for ClientInterfaces",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "",
          "json_tag": "description"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "CloudEvent": {
      "type_name": "CloudEvent",
      "description": "CloudEvent Cloud Event object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Authid": {
          "name": "Authid",
          "description": "Cloud Event user identifier",
          "json_tag": "authid"
        },
        "Authtype": {
          "name": "Authtype",
          "description": "Cloud Event auth type",
          "json_tag": "authtype"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Datacontenttype": {
          "name": "Datacontenttype",
          "description": "Cloud Event data content type",
          "json_tag": "datacontenttype"
        },
        "Dataschema": {
          "name": "Dataschema",
          "description": "Cloud Event dataschema reference",
          "json_tag": "dataschema"
        },
        "Equinixorganization": {
          "name": "Equinixorganization",
          "description": "Equinix organization identifier",
          "json_tag": "equinixorganization"
        },
        "Equinixproject": {
          "name": "Equinixproject",
          "description": "Equinix project identifier",
          "json_tag": "equinixproject"
        },
        "Id": {
          "name": "Id",
          "description": "Cloud Event identifier",
          "json_tag": "id"
        },
        "Severitynumber": {
          "name": "Severitynumber",
          "description": "Cloud Event severity number",
          "json_tag": "severitynumber"
        },
        "Severitytext": {
          "name": "Severitytext",
          "description": "Cloud Event severity text",
          "json_tag": "severitytext"
        },
        "Source": {
          "name": "Source",
          "description": "Cloud Event source",
          "json_tag": "source"
        },
        "Spec": {
          "name": "Spec",
          "description": "Cloud Event Open Telemetry specification",
          "json_tag": "spec"
        },
        "Subject": {
          "name": "Subject",
          "description": "Cloud Event subject",
          "json_tag": "subject"
        },
        "Traceparent": {
          "name": "Traceparent",
          "description": "Cloud Event traceparent",
          "json_tag": "traceparent"
        },
        "Tracestate": {
          "name": "Tracestate",
          "description": "Cloud Event tracestate",
          "json_tag": "tracestate"
        },
        "Type": {
          "name": "Type",
          "description": "Equinix supported event type",
          "json_tag": "type"
        }
      }
    },
    "CloudEventData": {
      "type_name": "CloudEventData",
      "description": "CloudEventData struct for CloudEventData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Auth": {
          "name": "Auth",
          "description": "",
          "json_tag": "auth"
        },
        "Message": {
          "name": "Message",
          "description": "Cloud Event message",
          "json_tag": "message"
        },
        "Resource": {
          "name": "Resource",
          "description": "",
          "json_tag": "resource"
        }
      }
    },
    "CloudEventFilters": {
      "type_name": "CloudEventFilters",
      "description": "CloudEventFilters struct for CloudEventFilters",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "CloudEventSearchRequest": {
      "type_name": "CloudEventSearchRequest",
      "description": "CloudEventSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "CloudEventSimpleExpression": {
      "type_name": "CloudEventSimpleExpression",
      "description": "CloudEventSimpleExpression struct for CloudEventSimpleExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal  * `\u003e` - greater than  * `\u003e=` - greater than or equal to  * `\u003c` - less than  * `\u003c=` - less than or equal to  * `BETWEEN` - between  * `IN` - in",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/subject` - Cloud Event subject description  * `/type` - Cloud Event type  * `/time` - Time of Cloud Events  * `/equinixproject` - Equinix Project of Cloud Events  * `/equinixorganization` - Equinix Organization of Cloud Events",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "CloudRouter": {
      "type_name": "CloudRouter",
      "description": "CloudRouter Fabric Cloud Router object",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "ConnectionsCount": {
          "name": "ConnectionsCount",
          "description": "Number of connections associated with this Access point",
          "json_tag": "connectionsCount"
        },
        "EquinixAsn": {
          "name": "EquinixAsn",
          "description": "Equinix ASN",
          "json_tag": "equinixAsn"
        },
        "Href": {
          "name": "Href",
          "description": "Cloud Routers URI",
          "json_tag": "href"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "MarketplaceSubscription": {
          "name": "MarketplaceSubscription",
          "description": "",
          "json_tag": "marketplaceSubscription"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided Cloud Router name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on connection configuration or status changes",
          "json_tag": "notifications"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned access point identifier",
          "json_tag": "uuid"
        }
      }
    },
    "CloudRouterActionRequest": {
      "type_name": "CloudRouterActionRequest",
      "description": "CloudRouterActionRequest Cloud router action request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Connection": {
          "name": "Connection",
          "description": "",
          "json_tag": "connection"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "CloudRouterActionResponse": {
      "type_name": "CloudRouterActionResponse",
      "description": "CloudRouterActionResponse Cloud router actions response object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Connection": {
          "name": "Connection",
          "description": "",
          "json_tag": "connection"
        },
        "Description": {
          "name": "Description",
          "description": "",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "",
          "json_tag": "href"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "CloudRouterActionsSearchExpression": {
      "type_name": "CloudRouterActionsSearchExpression",
      "description": "CloudRouterActionsSearchExpression struct for CloudRouterActionsSearchExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal  * `!=` - not equal  * `\u003e` - greater than  * `\u003e=` - greater than or equal to  * `\u003c` - less than  * `\u003c=` - less than or equal to  * `[NOT] BETWEEN` - (not) between  * `[NOT] LIKE` - (not) like  * `[NOT] IN` - (not) in  * `~*` - case-insensitive like",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/type` - type of update  * `/state` - action state  * `/connection/uuid` - connection uuid associated  * `/_*` - all-category search",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "CloudRouterActionsSearchFilter": {
      "type_name": "CloudRouterActionsSearchFilter",
      "description": "CloudRouterActionsSearchFilter struct for CloudRouterActionsSearchFilter",
      "fields": {
        "CloudRouterActionsSearchExpression": {
          "name": "CloudRouterActionsSearchExpression",
          "description": ""
        },
        "CloudRouterActionsSearchOrFilter": {
          "name": "CloudRouterActionsSearchOrFilter",
          "description": ""
        }
      }
    },
    "CloudRouterActionsSearchFilters": {
      "type_name": "CloudRouterActionsSearchFilters",
      "description": "CloudRouterActionsSearchFilters struct for CloudRouterActionsSearchFilters",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "CloudRouterActionsSearchOrFilter": {
      "type_name": "CloudRouterActionsSearchOrFilter",
      "description": "CloudRouterActionsSearchOrFilter struct for CloudRouterActionsSearchOrFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "CloudRouterActionsSearchRequest": {
      "type_name": "CloudRouterActionsSearchRequest",
      "description": "CloudRouterActionsSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "CloudRouterActionsSearchResponse": {
      "type_name": "CloudRouterActionsSearchResponse",
      "description": "CloudRouterActionsSearchResponse struct for CloudRouterActionsSearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "CloudRouterActionsSearchSortCriteria": {
      "type_name": "CloudRouterActionsSearchSortCriteria",
      "description": "CloudRouterActionsSearchSortCriteria struct for CloudRouterActionsSearchSortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "CloudRouterChange": {
      "type_name": "CloudRouterChange",
      "description": "CloudRouterChange Current state of latest CloudRouter change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Set when change flow starts",
          "json_tag": "createdDateTime"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Information": {
          "name": "Information",
          "description": "Additional information",
          "json_tag": "information"
        },
        "Status": {
          "name": "Status",
          "description": "",
          "json_tag": "status"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Set when change object is updated",
          "json_tag": "updatedDateTime"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "CloudRouterChangeOperation": {
      "type_name": "CloudRouterChangeOperation",
      "description": "CloudRouterChangeOperation Fabric Cloud Router change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "CloudRouterCommand": {
      "type_name": "CloudRouterCommand",
      "description": "CloudRouterCommand Get Fabric Cloud Router Command response object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Description": {
          "name": "Description",
          "description": "",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided Cloud Router name",
          "json_tag": "name"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Request": {
          "name": "Request",
          "description": "",
          "json_tag": "request"
        },
        "Response": {
          "name": "Response",
          "description": "",
          "json_tag": "response"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "CloudRouterCommandPingResponse": {
      "type_name": "CloudRouterCommandPingResponse",
      "description": "CloudRouterCommandPingResponse struct for CloudRouterCommandPingResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Errors": {
          "name": "Errors",
          "description": "",
          "json_tag": "errors"
        },
        "Output": {
          "name": "Output",
          "description": "",
          "json_tag": "output"
        },
        "OutputStructuredPing": {
          "name": "OutputStructuredPing",
          "description": "",
          "json_tag": "outputStructuredPing"
        }
      }
    },
    "CloudRouterCommandPostRequest": {
      "type_name": "CloudRouterCommandPostRequest",
      "description": "CloudRouterCommandPostRequest Execute Cloud Router Command Request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided Cloud Router Command description",
          "json_tag": "description"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided Cloud Router Command name",
          "json_tag": "name"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Request": {
          "name": "Request",
          "description": "",
          "json_tag": "request"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "CloudRouterCommandRequestConnection": {
      "type_name": "CloudRouterCommandRequestConnection",
      "description": "CloudRouterCommandRequestConnection Connection object for Cloud Router Command",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Connection UUID",
          "json_tag": "uuid"
        }
      }
    },
    "CloudRouterCommandRequestPayload": {
      "type_name": "CloudRouterCommandRequestPayload",
      "description": "CloudRouterCommandRequestPayload Fabric Cloud Router Command Request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DataBytes": {
          "name": "DataBytes",
          "description": "Ping Command DataBytes.  This field is only applicable for commands of type `PING_COMMAND`.",
          "json_tag": "dataBytes"
        },
        "Destination": {
          "name": "Destination",
          "description": "Fabric Cloud Router Ping or Traceroute Command Destination",
          "json_tag": "destination"
        },
        "HopsMax": {
          "name": "HopsMax",
          "description": "Maximum number of hops for the traceroute command. This field is only applicable for commands of type `TRACEROUTE_COMMAND`.",
          "json_tag": "hopsMax"
        },
        "Probes": {
          "name": "Probes",
          "description": "Number of probes for Fabric Cloud Router Traceroute Command. This field is only applicable for commands of type `TRACEROUTE_COMMAND` and is not configurable.",
          "json_tag": "probes"
        },
        "SourceConnection": {
          "name": "SourceConnection",
          "description": "",
          "json_tag": "sourceConnection"
        },
        "Timeout": {
          "name": "Timeout",
          "description": "Timeout in seconds for Fabric Cloud Router Command:   - For `PING_COMMAND`: Packet timeout duration. The default value is 5.   - For `TRACEROUTE_COMMAND`: Probe timeout duration.     The default value is 2 and it is not configurable.",
          "json_tag": "timeout"
        }
      }
    },
    "CloudRouterCommandRequestResponse": {
      "type_name": "CloudRouterCommandRequestResponse",
      "description": "CloudRouterCommandRequestResponse Fabric Cloud Router Command Request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Count": {
          "name": "Count",
          "description": "Total number of ping requests. This field is only applicable for commands of type `PING_COMMAND`.",
          "json_tag": "count"
        },
        "DataBytes": {
          "name": "DataBytes",
          "description": "Ping Command DataBytes.  This field is only applicable for commands of type `PING_COMMAND`.",
          "json_tag": "dataBytes"
        },
        "Destination": {
          "name": "Destination",
          "description": "Fabric Cloud Router Ping or Traceroute Command Destination",
          "json_tag": "destination"
        },
        "HopsMax": {
          "name": "HopsMax",
          "description": "Maximum number of hops for the traceroute command. This field is only applicable for commands of type `TRACEROUTE_COMMAND`.",
          "json_tag": "hopsMax"
        },
        "Interval": {
          "name": "Interval",
          "description": "Time in milliseconds between sending each packet. This field is only applicable for commands of type `PING_COMMAND`.",
          "json_tag": "interval"
        },
        "Probes": {
          "name": "Probes",
          "description": "Number of probes for Fabric Cloud Router Traceroute Command. This field is only applicable for commands of type `TRACEROUTE_COMMAND` and is not configurable.",
          "json_tag": "probes"
        },
        "SourceConnection": {
          "name": "SourceConnection",
          "description": "",
          "json_tag": "sourceConnection"
        },
        "Timeout": {
          "name": "Timeout",
          "description": "Timeout in seconds for Fabric Cloud Router Command:   - For `PING_COMMAND`: Packet timeout duration. The default value is 5.   - For `TRACEROUTE_COMMAND`: Probe timeout duration.     The default value is 2 and it is not configurable.",
          "json_tag": "timeout"
        }
      }
    },
    "CloudRouterCommandResponse": {
      "type_name": "CloudRouterCommandResponse",
      "description": "CloudRouterCommandResponse - struct for CloudRouterCommandResponse",
      "fields": {
        "CloudRouterCommandPingResponse": {
          "name": "CloudRouterCommandPingResponse",
          "description": ""
        },
        "CloudRouterCommandTracerouteResponse": {
          "name": "CloudRouterCommandTracerouteResponse",
          "description": ""
        }
      }
    },
    "CloudRouterCommandSearchExpression": {
      "type_name": "CloudRouterCommandSearchExpression",
      "description": "CloudRouterCommandSearchExpression struct for CloudRouterCommandSearchExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal  * `!=` - not equal  * `\u003e` - greater than  * `\u003e=` - greater than or equal to  * `\u003c` - less than  * `\u003c=` - less than or equal to  * `[NOT] BETWEEN` - (not) between  * `[NOT] LIKE` - (not) like  * `[NOT] IN` - (not) in  * `~*` - case-insensitive like",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/type` - type of command  * `/name` - name of command  * `/state` - state of command  * `/request/destination` - destination of command request  * `/request/sourceConnection/uuid` - source connection uuid  * `/_*` - all-category search",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "CloudRouterCommandSearchFilter": {
      "type_name": "CloudRouterCommandSearchFilter",
      "description": "CloudRouterCommandSearchFilter struct for CloudRouterCommandSearchFilter",
      "fields": {
        "CloudRouterCommandSearchExpression": {
          "name": "CloudRouterCommandSearchExpression",
          "description": ""
        },
        "CloudRouterCommandSearchOrFilter": {
          "name": "CloudRouterCommandSearchOrFilter",
          "description": ""
        }
      }
    },
    "CloudRouterCommandSearchFilters": {
      "type_name": "CloudRouterCommandSearchFilters",
      "description": "CloudRouterCommandSearchFilters struct for CloudRouterCommandSearchFilters",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "CloudRouterCommandSearchOrFilter": {
      "type_name": "CloudRouterCommandSearchOrFilter",
      "description": "CloudRouterCommandSearchOrFilter struct for CloudRouterCommandSearchOrFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "CloudRouterCommandSearchRequest": {
      "type_name": "CloudRouterCommandSearchRequest",
      "description": "CloudRouterCommandSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "CloudRouterCommandSearchResponse": {
      "type_name": "CloudRouterCommandSearchResponse",
      "description": "CloudRouterCommandSearchResponse struct for CloudRouterCommandSearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "CloudRouterCommandSearchSortCriteria": {
      "type_name": "CloudRouterCommandSearchSortCriteria",
      "description": "CloudRouterCommandSearchSortCriteria struct for CloudRouterCommandSearchSortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "CloudRouterCommandTracerouteResponse": {
      "type_name": "CloudRouterCommandTracerouteResponse",
      "description": "CloudRouterCommandTracerouteResponse struct for CloudRouterCommandTracerouteResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Errors": {
          "name": "Errors",
          "description": "",
          "json_tag": "errors"
        },
        "Output": {
          "name": "Output",
          "description": "",
          "json_tag": "output"
        },
        "OutputStructuredTraceroute": {
          "name": "OutputStructuredTraceroute",
          "description": "",
          "json_tag": "outputStructuredTraceroute"
        }
      }
    },
    "CloudRouterFilter": {
      "type_name": "CloudRouterFilter",
      "description": "CloudRouterFilter struct for CloudRouterFilter",
      "fields": {
        "CloudRouterOrFilter": {
          "name": "CloudRouterOrFilter",
          "description": ""
        },
        "CloudRouterSimpleExpression": {
          "name": "CloudRouterSimpleExpression",
          "description": ""
        }
      }
    },
    "CloudRouterFilters": {
      "type_name": "CloudRouterFilters",
      "description": "CloudRouterFilters struct for CloudRouterFilters",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "CloudRouterOrFilter": {
      "type_name": "CloudRouterOrFilter",
      "description": "CloudRouterOrFilter struct for CloudRouterOrFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "CloudRouterPackage": {
      "type_name": "CloudRouterPackage",
      "description": "CloudRouterPackage Fabric Cloud Router Package",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Code": {
          "name": "Code",
          "description": "",
          "json_tag": "code"
        },
        "CrCountMax": {
          "name": "CrCountMax",
          "description": "CloudRouter package Max CloudRouter limit",
          "json_tag": "crCountMax"
        },
        "Description": {
          "name": "Description",
          "description": "Fabric Cloud Router Package description",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Cloud Router package URI",
          "json_tag": "href"
        },
        "RouteFilterSupported": {
          "name": "RouteFilterSupported",
          "description": "CloudRouter package route filter support",
          "json_tag": "routeFilterSupported"
        },
        "TotalIPv4RoutesMax": {
          "name": "TotalIPv4RoutesMax",
          "description": "Cloud Router package BGP IPv4 routes limit",
          "json_tag": "totalIPv4RoutesMax"
        },
        "TotalIPv6RoutesMax": {
          "name": "TotalIPv6RoutesMax",
          "description": "Cloud Router package BGP IPv6 routes limit",
          "json_tag": "totalIPv6RoutesMax"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "VcBandwidthMax": {
          "name": "VcBandwidthMax",
          "description": "CloudRouter package Max Bandwidth limit",
          "json_tag": "vcBandwidthMax"
        },
        "VcCountMax": {
          "name": "VcCountMax",
          "description": "CloudRouter package Max Connection limit",
          "json_tag": "vcCountMax"
        }
      }
    },
    "CloudRouterPostRequest": {
      "type_name": "CloudRouterPostRequest",
      "description": "CloudRouterPostRequest struct for CloudRouterPostRequest",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "MarketplaceSubscription": {
          "name": "MarketplaceSubscription",
          "description": "",
          "json_tag": "marketplaceSubscription"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided Cloud Router name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on connection configuration or status changes",
          "json_tag": "notifications"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "CloudRouterPostRequestBase": {
      "type_name": "CloudRouterPostRequestBase",
      "description": "CloudRouterPostRequestBase Create Cloud Router",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "MarketplaceSubscription": {
          "name": "MarketplaceSubscription",
          "description": "",
          "json_tag": "marketplaceSubscription"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided Cloud Router name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on connection configuration or status changes",
          "json_tag": "notifications"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "CloudRouterPostRequestPackage": {
      "type_name": "CloudRouterPostRequestPackage",
      "description": "CloudRouterPostRequestPackage Fabric Cloud Router Package Type",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Code": {
          "name": "Code",
          "description": "",
          "json_tag": "code"
        },
        "Href": {
          "name": "Href",
          "description": "Fabric Cloud Router URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "CloudRouterSearchRequest": {
      "type_name": "CloudRouterSearchRequest",
      "description": "CloudRouterSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "CloudRouterSimpleExpression": {
      "type_name": "CloudRouterSimpleExpression",
      "description": "CloudRouterSimpleExpression struct for CloudRouterSimpleExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal  * `!=` - not equal  * `\u003e` - greater than  * `\u003e=` - greater than or equal to  * `\u003c` - less than  * `\u003c=` - less than or equal to  * `[NOT] BETWEEN` - (not) between  * `[NOT] LIKE` - (not) like  * `[NOT] IN` - (not) in  * `ILIKE` - case-insensitive like",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/project/projectId` - project id (mandatory)  * `/name` - Fabric Cloud Router name  * `/uuid` - Fabric Cloud Router uuid  * `/state` - Fabric Cloud Router status  * `/location/metroCode` - Fabric Cloud Router metro code  * `/location/metroName` - Fabric Cloud Router metro name  * `/package/code` - Fabric Cloud Router package  * `/_*` - all-category search",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "CloudRouterSortCriteria": {
      "type_name": "CloudRouterSortCriteria",
      "description": "CloudRouterSortCriteria struct for CloudRouterSortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "Configuration": {
      "type_name": "Configuration",
      "description": "Configuration stores the configuration of the API client",
      "fields": {
        "Debug": {
          "name": "Debug",
          "description": "",
          "json_tag": "debug"
        },
        "DefaultHeader": {
          "name": "DefaultHeader",
          "description": "",
          "json_tag": "defaultHeader"
        },
        "HTTPClient": {
          "name": "HTTPClient",
          "description": ""
        },
        "Host": {
          "name": "Host",
          "description": "",
          "json_tag": "host"
        },
        "OperationServers": {
          "name": "OperationServers",
          "description": ""
        },
        "Scheme": {
          "name": "Scheme",
          "description": "",
          "json_tag": "scheme"
        },
        "Servers": {
          "name": "Servers",
          "description": ""
        },
        "UserAgent": {
          "name": "UserAgent",
          "description": "",
          "json_tag": "userAgent"
        }
      }
    },
    "ConnectedMetro": {
      "type_name": "ConnectedMetro",
      "description": "ConnectedMetro Arrays of objects containing latency data for the specified metros",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AvgLatency": {
          "name": "AvgLatency",
          "description": "Average latency (in milliseconds[ms]) between two specified metros.",
          "json_tag": "avgLatency"
        },
        "Code": {
          "name": "Code",
          "description": "Code assigned to an Equinix International Business Exchange (IBX) data center in a specified metropolitan area.",
          "json_tag": "code"
        },
        "Href": {
          "name": "Href",
          "description": "The Canonical URL at which the resource resides.",
          "json_tag": "href"
        },
        "RemoteVCBandwidthMax": {
          "name": "RemoteVCBandwidthMax",
          "description": "This field holds the Max Connection speed with connected metros",
          "json_tag": "remoteVCBandwidthMax"
        }
      }
    },
    "Connection": {
      "type_name": "Connection",
      "description": "Connection Connection specification",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "Connection additional information",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Connection bandwidth in Mbps",
          "json_tag": "bandwidth"
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided connection description",
          "json_tag": "description"
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "GeoScope": {
          "name": "GeoScope",
          "description": "",
          "json_tag": "geoScope"
        },
        "Href": {
          "name": "Href",
          "description": "Connection URI",
          "json_tag": "href"
        },
        "IsRemote": {
          "name": "IsRemote",
          "description": "Connection property derived from access point locations",
          "json_tag": "isRemote"
        },
        "MarketplaceSubscription": {
          "name": "MarketplaceSubscription",
          "description": "",
          "json_tag": "marketplaceSubscription"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided connection name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on connection configuration or status changes",
          "json_tag": "notifications"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned connection identifier",
          "json_tag": "uuid"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "ConnectionAcceptanceData": {
      "type_name": "ConnectionAcceptanceData",
      "description": "ConnectionAcceptanceData Connection acceptance data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ProviderBandwidth": {
          "name": "ProviderBandwidth",
          "description": "Authorization key bandwidth in Mbps",
          "json_tag": "providerBandwidth"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "ConnectionAction": {
      "type_name": "ConnectionAction",
      "description": "ConnectionAction Connection action",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Description": {
          "name": "Description",
          "description": "Connection rejection reason detail",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Connection action URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned connection identifier",
          "json_tag": "uuid"
        }
      }
    },
    "ConnectionActionRequest": {
      "type_name": "ConnectionActionRequest",
      "description": "ConnectionActionRequest Connection action request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Description": {
          "name": "Description",
          "description": "Connection rejection reason detail",
          "json_tag": "description"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "ConnectionChangeOperation": {
      "type_name": "ConnectionChangeOperation",
      "description": "ConnectionChangeOperation Connection change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "Handy shortcut for operation name",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "ConnectionCompanyProfile": {
      "type_name": "ConnectionCompanyProfile",
      "description": "ConnectionCompanyProfile Connection Company Profile Details",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "GlobalOrgId": {
          "name": "GlobalOrgId",
          "description": "global customer organization value",
          "json_tag": "globalOrgId"
        },
        "Id": {
          "name": "Id",
          "description": "company profile identifier",
          "json_tag": "id"
        },
        "Name": {
          "name": "Name",
          "description": "company profile name",
          "json_tag": "name"
        }
      }
    },
    "ConnectionInvitation": {
      "type_name": "ConnectionInvitation",
      "description": "ConnectionInvitation Connection Invitation Details",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CtrDraftOrderId": {
          "name": "CtrDraftOrderId",
          "description": "draft order id for invitation",
          "json_tag": "ctrDraftOrderId"
        },
        "Email": {
          "name": "Email",
          "description": "invitee email",
          "json_tag": "email"
        },
        "Message": {
          "name": "Message",
          "description": "invitation message",
          "json_tag": "message"
        }
      }
    },
    "ConnectionLink": {
      "type_name": "ConnectionLink",
      "description": "ConnectionLink struct for ConnectionLink",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "ConnectionOperation": {
      "type_name": "ConnectionOperation",
      "description": "ConnectionOperation Connection type-specific operational data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "EquinixStatus": {
          "name": "EquinixStatus",
          "description": "",
          "json_tag": "equinixStatus"
        },
        "Errors": {
          "name": "Errors",
          "description": "",
          "json_tag": "errors"
        },
        "OpStatusChangedAt": {
          "name": "OpStatusChangedAt",
          "description": "When connection transitioned into current operational status",
          "json_tag": "opStatusChangedAt"
        },
        "OperationalStatus": {
          "name": "OperationalStatus",
          "description": "",
          "json_tag": "operationalStatus"
        },
        "ProviderStatus": {
          "name": "ProviderStatus",
          "description": "",
          "json_tag": "providerStatus"
        }
      }
    },
    "ConnectionPostRequest": {
      "type_name": "ConnectionPostRequest",
      "description": "ConnectionPostRequest Create connection post request",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "Connection additional information",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Connection bandwidth in Mbps",
          "json_tag": "bandwidth"
        },
        "EndCustomer": {
          "name": "EndCustomer",
          "description": "",
          "json_tag": "endCustomer"
        },
        "GeoScope": {
          "name": "GeoScope",
          "description": "",
          "json_tag": "geoScope"
        },
        "MarketplaceSubscription": {
          "name": "MarketplaceSubscription",
          "description": "",
          "json_tag": "marketplaceSubscription"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided connection name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on connection configuration or status changes",
          "json_tag": "notifications"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "ConnectionRedundancy": {
      "type_name": "ConnectionRedundancy",
      "description": "ConnectionRedundancy Connection redundancy configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Group": {
          "name": "Group",
          "description": "Redundancy group identifier (UUID of primary connection)",
          "json_tag": "group"
        },
        "Priority": {
          "name": "Priority",
          "description": "",
          "json_tag": "priority"
        }
      }
    },
    "ConnectionResponse": {
      "type_name": "ConnectionResponse",
      "description": "ConnectionResponse ValidateResponse",
      "fields": {
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "Additional information",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Connection response data",
          "json_tag": "data"
        }
      }
    },
    "ConnectionRouteAggregationData": {
      "type_name": "ConnectionRouteAggregationData",
      "description": "ConnectionRouteAggregationData struct for ConnectionRouteAggregationData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AttachmentStatus": {
          "name": "AttachmentStatus",
          "description": "",
          "json_tag": "attachmentStatus"
        },
        "Href": {
          "name": "Href",
          "description": "Route Aggregation URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Route Aggregation identifier",
          "json_tag": "uuid"
        }
      }
    },
    "ConnectionRouteEntryFilter": {
      "type_name": "ConnectionRouteEntryFilter",
      "description": "ConnectionRouteEntryFilter struct for ConnectionRouteEntryFilter",
      "fields": {
        "ConnectionRouteEntryOrFilter": {
          "name": "ConnectionRouteEntryOrFilter",
          "description": ""
        },
        "ConnectionRouteEntrySimpleExpression": {
          "name": "ConnectionRouteEntrySimpleExpression",
          "description": ""
        }
      }
    },
    "ConnectionRouteEntryFilters": {
      "type_name": "ConnectionRouteEntryFilters",
      "description": "ConnectionRouteEntryFilters struct for ConnectionRouteEntryFilters",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "ConnectionRouteEntryOrFilter": {
      "type_name": "ConnectionRouteEntryOrFilter",
      "description": "ConnectionRouteEntryOrFilter struct for ConnectionRouteEntryOrFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "ConnectionRouteEntrySimpleExpression": {
      "type_name": "ConnectionRouteEntrySimpleExpression",
      "description": "ConnectionRouteEntrySimpleExpression struct for ConnectionRouteEntrySimpleExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal  * `!=` - not equal  * `\u003e` - greater than  * `\u003e=` - greater than or equal to  * `\u003c` - less than  * `\u003c=` - less than or equal to  * `[NOT] BETWEEN` - (not) between  * `[NOT] LIKE` - (not) like  * `[NOT] IN` - (not) in  * `~*` - case-insensitive like",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/type` - Route table entry type  * `/state` - Route table entry state  * `/prefix` - Route table entry prefix  * `/nextHop` - Route table entry nextHop  * `/_*` - all-category search",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "ConnectionRouteFilterData": {
      "type_name": "ConnectionRouteFilterData",
      "description": "ConnectionRouteFilterData struct for ConnectionRouteFilterData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AttachmentStatus": {
          "name": "AttachmentStatus",
          "description": "",
          "json_tag": "attachmentStatus"
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Href": {
          "name": "Href",
          "description": "Route filter URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Route Filter identifier",
          "json_tag": "uuid"
        }
      }
    },
    "ConnectionRouteFiltersBase": {
      "type_name": "ConnectionRouteFiltersBase",
      "description": "ConnectionRouteFiltersBase struct for ConnectionRouteFiltersBase",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        }
      }
    },
    "ConnectionRouteSearchRequest": {
      "type_name": "ConnectionRouteSearchRequest",
      "description": "ConnectionRouteSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "ConnectionRouteSortCriteria": {
      "type_name": "ConnectionRouteSortCriteria",
      "description": "ConnectionRouteSortCriteria struct for ConnectionRouteSortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "ConnectionRouteTableEntry": {
      "type_name": "ConnectionRouteTableEntry",
      "description": "ConnectionRouteTableEntry Advertised and received route table entry object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Age": {
          "name": "Age",
          "description": "",
          "json_tag": "age"
        },
        "AsPath": {
          "name": "AsPath",
          "description": "",
          "json_tag": "asPath"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Connection": {
          "name": "Connection",
          "description": "",
          "json_tag": "connection"
        },
        "LocalPreference": {
          "name": "LocalPreference",
          "description": "",
          "json_tag": "localPreference"
        },
        "MED": {
          "name": "MED",
          "description": "",
          "json_tag": "MED"
        },
        "NextHop": {
          "name": "NextHop",
          "description": "",
          "json_tag": "nextHop"
        },
        "Prefix": {
          "name": "Prefix",
          "description": "",
          "json_tag": "prefix"
        },
        "ProtocolType": {
          "name": "ProtocolType",
          "description": "",
          "json_tag": "protocolType"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "ConnectionRouteTableEntryConnection": {
      "type_name": "ConnectionRouteTableEntryConnection",
      "description": "ConnectionRouteTableEntryConnection struct for ConnectionRouteTableEntryConnection",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "ConnectionRouteTableEntrySearchResponse": {
      "type_name": "ConnectionRouteTableEntrySearchResponse",
      "description": "ConnectionRouteTableEntrySearchResponse struct for ConnectionRouteTableEntrySearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "ConnectionRoutingProtocolPostRequest": {
      "type_name": "ConnectionRoutingProtocolPostRequest",
      "description": "ConnectionRoutingProtocolPostRequest Create connection routing protocolpost request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Connection routing protocol configuration",
          "json_tag": "data"
        }
      }
    },
    "ConnectionSearchResponse": {
      "type_name": "ConnectionSearchResponse",
      "description": "ConnectionSearchResponse List of connections",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "ConnectionSide": {
      "type_name": "ConnectionSide",
      "description": "ConnectionSide Connection configuration object for each side of multi-segment connection",
      "fields": {
        "AccessPoint": {
          "name": "AccessPoint",
          "description": "",
          "json_tag": "accessPoint"
        },
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "Any additional information, which is not part of connection metadata or configuration",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CompanyProfile": {
          "name": "CompanyProfile",
          "description": "",
          "json_tag": "companyProfile"
        },
        "InternetAccess": {
          "name": "InternetAccess",
          "description": "",
          "json_tag": "internetAccess"
        },
        "Invitation": {
          "name": "Invitation",
          "description": "",
          "json_tag": "invitation"
        },
        "ServiceToken": {
          "name": "ServiceToken",
          "description": "",
          "json_tag": "serviceToken"
        }
      }
    },
    "ConnectionSideAdditionalInfo": {
      "type_name": "ConnectionSideAdditionalInfo",
      "description": "ConnectionSideAdditionalInfo Additional information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Key": {
          "name": "Key",
          "description": "Key",
          "json_tag": "key"
        },
        "Value": {
          "name": "Value",
          "description": "Value",
          "json_tag": "value"
        }
      }
    },
    "ConnectivitySource": {
      "type_name": "ConnectivitySource",
      "description": "ConnectivitySource Physical or virtual port that houses the connection.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "CustomField": {
      "type_name": "CustomField",
      "description": "CustomField Define Custom Attributes",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CaptureInEmail": {
          "name": "CaptureInEmail",
          "description": "capture this field as a part of email notification",
          "json_tag": "captureInEmail"
        },
        "DataType": {
          "name": "DataType",
          "description": "",
          "json_tag": "dataType"
        },
        "Description": {
          "name": "Description",
          "description": "",
          "json_tag": "description"
        },
        "Label": {
          "name": "Label",
          "description": "",
          "json_tag": "label"
        },
        "Options": {
          "name": "Options",
          "description": "",
          "json_tag": "options"
        },
        "Required": {
          "name": "Required",
          "description": "",
          "json_tag": "required"
        }
      }
    },
    "Deployment": {
      "type_name": "Deployment",
      "description": "Deployment struct for Deployment",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "",
          "json_tag": "description"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on deployement status changes",
          "json_tag": "notifications"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Providers": {
          "name": "Providers",
          "description": "",
          "json_tag": "providers"
        },
        "Topology": {
          "name": "Topology",
          "description": "",
          "json_tag": "topology"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "DeploymentActionRequest": {
      "type_name": "DeploymentActionRequest",
      "description": "DeploymentActionRequest struct for DeploymentActionRequest",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "DeploymentExpression": {
      "type_name": "DeploymentExpression",
      "description": "DeploymentExpression struct for DeploymentExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "DeploymentResponse": {
      "type_name": "DeploymentResponse",
      "description": "DeploymentResponse This API provides capability to retrieve user's deployments The response contains the details of the deployment including its state, topology, and providers. The deployment is identified by its UUID. The response also includes a list of notifications preferences for deployment status changes.     The response is in JSON format and follows the OpenAPI specification.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on deployement status changes",
          "json_tag": "notifications"
        },
        "Providers": {
          "name": "Providers",
          "description": "",
          "json_tag": "providers"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Topology": {
          "name": "Topology",
          "description": "",
          "json_tag": "topology"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "DeploymentSearchExpressions": {
      "type_name": "DeploymentSearchExpressions",
      "description": "DeploymentSearchExpressions struct for DeploymentSearchExpressions",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "DeploymentSearchRequest": {
      "type_name": "DeploymentSearchRequest",
      "description": "DeploymentSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        }
      }
    },
    "DeploymentSearchResponse": {
      "type_name": "DeploymentSearchResponse",
      "description": "DeploymentSearchResponse A list of deployments matching the search criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        }
      }
    },
    "DeploymentTopology": {
      "type_name": "DeploymentTopology",
      "description": "DeploymentTopology struct for DeploymentTopology",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "DirectConnectionIpv4": {
      "type_name": "DirectConnectionIpv4",
      "description": "DirectConnectionIpv4 struct for DirectConnectionIpv4",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "EquinixIfaceIp": {
          "name": "EquinixIfaceIp",
          "description": "Equinix side Interface IP address",
          "json_tag": "equinixIfaceIp"
        }
      }
    },
    "DirectConnectionIpv6": {
      "type_name": "DirectConnectionIpv6",
      "description": "DirectConnectionIpv6 struct for DirectConnectionIpv6",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "EquinixIfaceIp": {
          "name": "EquinixIfaceIp",
          "description": "Equinix side Interface IP address",
          "json_tag": "equinixIfaceIp"
        }
      }
    },
    "Direction": {
      "type_name": "Direction",
      "description": "Direction Directional statistics",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Max": {
          "name": "Max",
          "description": "Max bandwidth within request time range, represented in units specified by response \\\"units\\\" field",
          "json_tag": "max"
        },
        "Mean": {
          "name": "Mean",
          "description": "Mean bandwidth within request time range, represented in units specified by response \\\"units\\\" field",
          "json_tag": "mean"
        },
        "Metrics": {
          "name": "Metrics",
          "description": "Bandwidth utilization statistics for a specified interval.",
          "json_tag": "metrics"
        }
      }
    },
    "EndCustomer": {
      "type_name": "EndCustomer",
      "description": "EndCustomer struct for EndCustomer",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "IsDisclosed": {
          "name": "IsDisclosed",
          "description": "Indicate if endCustomer info should be disclosed or not",
          "json_tag": "isDisclosed"
        },
        "MdmId": {
          "name": "MdmId",
          "description": "",
          "json_tag": "mdmId"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        }
      }
    },
    "Error": {
      "type_name": "Error",
      "description": "Error Error Response with details",
      "fields": {
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CorrelationId": {
          "name": "CorrelationId",
          "description": "",
          "json_tag": "correlationId"
        },
        "Details": {
          "name": "Details",
          "description": "",
          "json_tag": "details"
        },
        "ErrorCode": {
          "name": "ErrorCode",
          "description": "",
          "json_tag": "errorCode\" validate:\"regexp=^EQ-\\\\\\\\d{7}$"
        },
        "ErrorMessage": {
          "name": "ErrorMessage",
          "description": "",
          "json_tag": "errorMessage"
        },
        "Help": {
          "name": "Help",
          "description": "",
          "json_tag": "help"
        }
      }
    },
    "Expression": {
      "type_name": "Expression",
      "description": "Expression struct for Expression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        },
        "Operator": {
          "name": "Operator",
          "description": "",
          "json_tag": "operator"
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "FabricBGPConnectionIpv4": {
      "type_name": "FabricBGPConnectionIpv4",
      "description": "FabricBGPConnectionIpv4 Defines the structure for a BGP IPv4 connection, including customer and Equinix peering IP addresses.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CustomerIp": {
          "name": "CustomerIp",
          "description": "Customer side peering ip",
          "json_tag": "customerIp"
        },
        "EquinixIp": {
          "name": "EquinixIp",
          "description": "Equinix side peering ip",
          "json_tag": "equinixIp"
        }
      }
    },
    "FabricCloudRouterPackages": {
      "type_name": "FabricCloudRouterPackages",
      "description": "FabricCloudRouterPackages Cloud Router  package",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Code": {
          "name": "Code",
          "description": "",
          "json_tag": "code"
        }
      }
    },
    "FabricCloudRouterPrice": {
      "type_name": "FabricCloudRouterPrice",
      "description": "FabricCloudRouterPrice Cloud Router  Product configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Unique identifier assigned to the Cloud Router",
          "json_tag": "uuid"
        }
      }
    },
    "FabricConnection": {
      "type_name": "FabricConnection",
      "description": "FabricConnection The OrchestratorProvider schema defines the configuration for a network connection and deployment properties, offering a detailed overview of the connection's characteristics and requirements.",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "",
          "json_tag": "bandwidth"
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "FabricConnectionResponse": {
      "type_name": "FabricConnectionResponse",
      "description": "FabricConnectionResponse struct for FabricConnectionResponse",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "",
          "json_tag": "bandwidth"
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Href": {
          "name": "Href",
          "description": "Connection URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned connection identifier",
          "json_tag": "uuid"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "FabricProvider": {
      "type_name": "FabricProvider",
      "description": "FabricProvider The Orchestrator Fabric Providers schema defines the structure for the orchestrator fabric provider configuration.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Resources": {
          "name": "Resources",
          "description": "",
          "json_tag": "resources"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "FabricProviderResource": {
      "type_name": "FabricProviderResource",
      "description": "FabricProviderResource - struct for FabricProviderResource",
      "fields": {
        "FabricConnection": {
          "name": "FabricConnection",
          "description": ""
        },
        "FabricRouteProtocols": {
          "name": "FabricRouteProtocols",
          "description": ""
        },
        "FabricRouter": {
          "name": "FabricRouter",
          "description": ""
        }
      }
    },
    "FabricProviderResourceResponse": {
      "type_name": "FabricProviderResourceResponse",
      "description": "FabricProviderResourceResponse - struct for FabricProviderResourceResponse",
      "fields": {
        "FabricConnectionResponse": {
          "name": "FabricConnectionResponse",
          "description": ""
        },
        "FabricRouteProtocolsResponse": {
          "name": "FabricRouteProtocolsResponse",
          "description": ""
        },
        "FabricRouterResponse": {
          "name": "FabricRouterResponse",
          "description": ""
        }
      }
    },
    "FabricProviderResponse": {
      "type_name": "FabricProviderResponse",
      "description": "FabricProviderResponse The response from the orchestrator when querying for fabric provider resources. This response contains a list of resources that are managed by the fabric provider. The resources can be routers, connections, or route protocols.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Resources": {
          "name": "Resources",
          "description": "",
          "json_tag": "resources"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "FabricRouteProtocols": {
      "type_name": "FabricRouteProtocols",
      "description": "FabricRouteProtocols - The RouteProtocols schema specifies the supported routing protocols for orchestrator providers. It defines the structure and configuration options for each protocol type.",
      "fields": {
        "FabricRoutingProtocolBGPType": {
          "name": "FabricRoutingProtocolBGPType",
          "description": ""
        }
      }
    },
    "FabricRouteProtocolsResponse": {
      "type_name": "FabricRouteProtocolsResponse",
      "description": "FabricRouteProtocolsResponse - struct for FabricRouteProtocolsResponse",
      "fields": {
        "FabricRoutingProtocolBGPType": {
          "name": "FabricRoutingProtocolBGPType",
          "description": ""
        }
      }
    },
    "FabricRouter": {
      "type_name": "FabricRouter",
      "description": "FabricRouter The Router schema defines the structure for a network router within the orchestrator system.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned access point identifier",
          "json_tag": "uuid"
        }
      }
    },
    "FabricRouterResponse": {
      "type_name": "FabricRouterResponse",
      "description": "FabricRouterResponse struct for FabricRouterResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Href": {
          "name": "Href",
          "description": "Cloud Routers URI",
          "json_tag": "href"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned cloud router identifier",
          "json_tag": "uuid"
        }
      }
    },
    "FabricRoutingProtocolBGPType": {
      "type_name": "FabricRoutingProtocolBGPType",
      "description": "FabricRoutingProtocolBGPType Defines the structure for BGP routing protocol configuration, including protocol type, BGP IPv4 settings, customer ASN, authentication key, and deployment properties.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AsOverrideEnabled": {
          "name": "AsOverrideEnabled",
          "description": "Enable AS number override",
          "json_tag": "asOverrideEnabled"
        },
        "BgpAuthKey": {
          "name": "BgpAuthKey",
          "description": "BGP authorization key",
          "json_tag": "bgpAuthKey"
        },
        "BgpIpv4": {
          "name": "BgpIpv4",
          "description": "",
          "json_tag": "bgpIpv4"
        },
        "CustomerAsn": {
          "name": "CustomerAsn",
          "description": "Customer asn",
          "json_tag": "customerAsn"
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned route protocol identifier",
          "json_tag": "uuid"
        }
      }
    },
    "FilterBody": {
      "type_name": "FilterBody",
      "description": "FilterBody Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        }
      }
    },
    "GCPCloudRouter": {
      "type_name": "GCPCloudRouter",
      "description": "GCPCloudRouter The GCP CloudRouter schema defines the structure for the gcp cloud router configuration, including provider type, VPC, subnet, and deployment properties.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "SubnetId": {
          "name": "SubnetId",
          "description": "",
          "json_tag": "subnetId"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "VpcId": {
          "name": "VpcId",
          "description": "",
          "json_tag": "vpcId"
        }
      }
    },
    "GCPCloudRouterResponse": {
      "type_name": "GCPCloudRouterResponse",
      "description": "GCPCloudRouterResponse struct for GCPCloudRouterResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "Id": {
          "name": "Id",
          "description": "Cloud Router id.",
          "json_tag": "id"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "SubnetId": {
          "name": "SubnetId",
          "description": "",
          "json_tag": "subnetId"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "VpcId": {
          "name": "VpcId",
          "description": "",
          "json_tag": "vpcId"
        }
      }
    },
    "GCPPermission": {
      "type_name": "GCPPermission",
      "description": "GCPPermission Provides the GCP permission configuration for the orchestrator. This permission is used to manage the GCP resources and their access control.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DeploymentProperties": {
          "name": "DeploymentProperties",
          "description": "",
          "json_tag": "deploymentProperties"
        },
        "PoolId": {
          "name": "PoolId",
          "description": "",
          "json_tag": "poolId"
        },
        "ProjectId": {
          "name": "ProjectId",
          "description": "",
          "json_tag": "projectId"
        },
        "ProviderId": {
          "name": "ProviderId",
          "description": "",
          "json_tag": "providerId"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "GCPProvider": {
      "type_name": "GCPProvider",
      "description": "GCPProvider The Orchestrator GCP Providers schema defines the structure for the orchestrator gcp provider configuration.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Resources": {
          "name": "Resources",
          "description": "",
          "json_tag": "resources"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "GCPProviderResource": {
      "type_name": "GCPProviderResource",
      "description": "GCPProviderResource - struct for GCPProviderResource",
      "fields": {
        "GCPCloudRouter": {
          "name": "GCPCloudRouter",
          "description": ""
        },
        "GCPPermission": {
          "name": "GCPPermission",
          "description": ""
        }
      }
    },
    "GCPProviderResourceResponse": {
      "type_name": "GCPProviderResourceResponse",
      "description": "GCPProviderResourceResponse - struct for GCPProviderResourceResponse",
      "fields": {
        "GCPCloudRouterResponse": {
          "name": "GCPCloudRouterResponse",
          "description": ""
        },
        "GCPPermission": {
          "name": "GCPPermission",
          "description": ""
        }
      }
    },
    "GCPProviderResponse": {
      "type_name": "GCPProviderResponse",
      "description": "GCPProviderResponse struct for GCPProviderResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Resources": {
          "name": "Resources",
          "description": "",
          "json_tag": "resources"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "GenericOpenAPIError": {
      "type_name": "GenericOpenAPIError",
      "description": "GenericOpenAPIError Provides access to the body, error and model on returned errors.",
      "fields": {
        "body": {
          "name": "body",
          "description": ""
        },
        "error": {
          "name": "error",
          "description": ""
        },
        "model": {
          "name": "model",
          "description": ""
        }
      }
    },
    "GeoCoordinates": {
      "type_name": "GeoCoordinates",
      "description": "GeoCoordinates Geographic location data of Fabric Metro",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Latitude": {
          "name": "Latitude",
          "description": "Latitude of a Fabric Metro",
          "json_tag": "latitude"
        },
        "Longitude": {
          "name": "Longitude",
          "description": "Longitude of a Fabric Metro",
          "json_tag": "longitude"
        }
      }
    },
    "GetAllCloudRouterCommands": {
      "type_name": "GetAllCloudRouterCommands",
      "description": "GetAllCloudRouterCommands List of Fabric Cloud Router Command",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetAllConnectionRouteAggregationsResponse": {
      "type_name": "GetAllConnectionRouteAggregationsResponse",
      "description": "GetAllConnectionRouteAggregationsResponse struct for GetAllConnectionRouteAggregationsResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Route Aggregations attached to a Connection",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetAllConnectionRouteFiltersResponse": {
      "type_name": "GetAllConnectionRouteFiltersResponse",
      "description": "GetAllConnectionRouteFiltersResponse struct for GetAllConnectionRouteFiltersResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Route Filters attached to a Connection",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetAllStreamAlertRuleResponse": {
      "type_name": "GetAllStreamAlertRuleResponse",
      "description": "GetAllStreamAlertRuleResponse struct for GetAllStreamAlertRuleResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetAllStreamAssetResponse": {
      "type_name": "GetAllStreamAssetResponse",
      "description": "GetAllStreamAssetResponse struct for GetAllStreamAssetResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetAllStreamResponse": {
      "type_name": "GetAllStreamResponse",
      "description": "GetAllStreamResponse struct for GetAllStreamResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetAllStreamSubscriptionResponse": {
      "type_name": "GetAllStreamSubscriptionResponse",
      "description": "GetAllStreamSubscriptionResponse struct for GetAllStreamSubscriptionResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetCloudEventsByAssetResponse": {
      "type_name": "GetCloudEventsByAssetResponse",
      "description": "GetCloudEventsByAssetResponse struct for GetCloudEventsByAssetResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetMetricsByAssetResponse": {
      "type_name": "GetMetricsByAssetResponse",
      "description": "GetMetricsByAssetResponse struct for GetMetricsByAssetResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetResponse": {
      "type_name": "GetResponse",
      "description": "GetResponse struct for GetResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Routing Protocols",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetRouteAggregationGetConnectionsResponse": {
      "type_name": "GetRouteAggregationGetConnectionsResponse",
      "description": "GetRouteAggregationGetConnectionsResponse struct for GetRouteAggregationGetConnectionsResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Connections using a Route Aggregation",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetRouteAggregationRulesResponse": {
      "type_name": "GetRouteAggregationRulesResponse",
      "description": "GetRouteAggregationRulesResponse struct for GetRouteAggregationRulesResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Route Aggregation Rules",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetRouteFilterGetConnectionsResponse": {
      "type_name": "GetRouteFilterGetConnectionsResponse",
      "description": "GetRouteFilterGetConnectionsResponse struct for GetRouteFilterGetConnectionsResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Connections using a Route Filter",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "GetRouteFilterRulesResponse": {
      "type_name": "GetRouteFilterRulesResponse",
      "description": "GetRouteFilterRulesResponse struct for GetRouteFilterRulesResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Route Filter Rules",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "HealthResponse": {
      "type_name": "HealthResponse",
      "description": "HealthResponse GET Services Health",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ApiServices": {
          "name": "ApiServices",
          "description": "",
          "json_tag": "apiServices"
        },
        "Href": {
          "name": "Href",
          "description": "The Canonical URL at which the resource resides.",
          "json_tag": "href"
        },
        "Release": {
          "name": "Release",
          "description": "release details.",
          "json_tag": "release"
        },
        "State": {
          "name": "State",
          "description": "status of a service",
          "json_tag": "state"
        },
        "Version": {
          "name": "Version",
          "description": "Indicator of a version",
          "json_tag": "version"
        }
      }
    },
    "Hop": {
      "type_name": "Hop",
      "description": "Hop struct for Hop",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Hop": {
          "name": "Hop",
          "description": "",
          "json_tag": "hop"
        },
        "Probes": {
          "name": "Probes",
          "description": "",
          "json_tag": "probes"
        }
      }
    },
    "HopProbes": {
      "type_name": "HopProbes",
      "description": "HopProbes struct for HopProbes",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Annotation": {
          "name": "Annotation",
          "description": "",
          "json_tag": "annotation"
        },
        "Asn": {
          "name": "Asn",
          "description": "",
          "json_tag": "asn"
        },
        "Ip": {
          "name": "Ip",
          "description": "",
          "json_tag": "ip"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Rtt": {
          "name": "Rtt",
          "description": "",
          "json_tag": "rtt"
        }
      }
    },
    "Interface": {
      "type_name": "Interface",
      "description": "Interface Interface Information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Interface URI",
          "json_tag": "href"
        },
        "Id": {
          "name": "Id",
          "description": "Interface id",
          "json_tag": "id"
        },
        "ProjectId": {
          "name": "ProjectId",
          "description": "Interface Project ID",
          "json_tag": "projectId"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned Interface identifier",
          "json_tag": "uuid"
        }
      }
    },
    "InternetAccess": {
      "type_name": "InternetAccess",
      "description": "InternetAccess Internet Access Details",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Internet Access Service Identifier",
          "json_tag": "uuid"
        }
      }
    },
    "IpBlockPrice": {
      "type_name": "IpBlockPrice",
      "description": "IpBlockPrice IP Block Product configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "PrefixLength": {
          "name": "PrefixLength",
          "description": "",
          "json_tag": "prefixLength"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Either uuid or rest of attributes are required",
          "json_tag": "uuid"
        }
      }
    },
    "Ipv4": {
      "type_name": "Ipv4",
      "description": "Ipv4 EPT service network information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DefaultGateway": {
          "name": "DefaultGateway",
          "description": "Gateway Interface IP address",
          "json_tag": "defaultGateway"
        },
        "NetworkMask": {
          "name": "NetworkMask",
          "description": "Network Mask",
          "json_tag": "networkMask"
        },
        "Primary": {
          "name": "Primary",
          "description": "Primary Timing Server IP Address",
          "json_tag": "primary"
        },
        "Secondary": {
          "name": "Secondary",
          "description": "Secondary Timing Server IP Address",
          "json_tag": "secondary"
        }
      }
    },
    "JsonPatchOperation": {
      "type_name": "JsonPatchOperation",
      "description": "JsonPatchOperation - Service Profile Access Points",
      "fields": {
        "AddOperation": {
          "name": "AddOperation",
          "description": ""
        },
        "RemoveOperation": {
          "name": "RemoveOperation",
          "description": ""
        },
        "ReplaceOperation": {
          "name": "ReplaceOperation",
          "description": ""
        }
      }
    },
    "Link": {
      "type_name": "Link",
      "description": "Link struct for Link",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Authenticate": {
          "name": "Authenticate",
          "description": "Authentication required or not",
          "json_tag": "authenticate"
        },
        "ContentType": {
          "name": "ContentType",
          "description": "Content type for the response",
          "json_tag": "contentType"
        },
        "Href": {
          "name": "Href",
          "description": "Resource URI",
          "json_tag": "href"
        },
        "Method": {
          "name": "Method",
          "description": "Http method type",
          "json_tag": "method"
        },
        "Rel": {
          "name": "Rel",
          "description": "OperationId from Swagger hub spec",
          "json_tag": "rel"
        }
      }
    },
    "LinkAggregationGroup": {
      "type_name": "LinkAggregationGroup",
      "description": "LinkAggregationGroup Link aggregation group (LAG) preferences and settings.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Parameter showing whether LAG configuration is mandatory. The default is false.",
          "json_tag": "enabled"
        }
      }
    },
    "LinkProtocolConnection": {
      "type_name": "LinkProtocolConnection",
      "description": "LinkProtocolConnection Connection details of Link Protocol",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "",
          "json_tag": "bandwidth"
        },
        "Href": {
          "name": "Href",
          "description": "Connection URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "LinkProtocolGetResponse": {
      "type_name": "LinkProtocolGetResponse",
      "description": "LinkProtocolGetResponse List of Vlans",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "LinkProtocolResponse": {
      "type_name": "LinkProtocolResponse",
      "description": "LinkProtocolResponse Link Protocol response",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Asset": {
          "name": "Asset",
          "description": "",
          "json_tag": "asset"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Href": {
          "name": "Href",
          "description": "LinkProtocol URI",
          "json_tag": "href"
        },
        "ServiceToken": {
          "name": "ServiceToken",
          "description": "",
          "json_tag": "serviceToken"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "SubInterface": {
          "name": "SubInterface",
          "description": "",
          "json_tag": "subInterface"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned network identifier",
          "json_tag": "uuid"
        },
        "VlanCTag": {
          "name": "VlanCTag",
          "description": "",
          "json_tag": "vlanCTag"
        },
        "VlanCTagMax": {
          "name": "VlanCTagMax",
          "description": "",
          "json_tag": "vlanCTagMax"
        },
        "VlanCTagMin": {
          "name": "VlanCTagMin",
          "description": "",
          "json_tag": "vlanCTagMin"
        },
        "VlanSTag": {
          "name": "VlanSTag",
          "description": "",
          "json_tag": "vlanSTag"
        },
        "VlanTag": {
          "name": "VlanTag",
          "description": "",
          "json_tag": "vlanTag"
        },
        "VlanTagMax": {
          "name": "VlanTagMax",
          "description": "",
          "json_tag": "vlanTagMax"
        },
        "VlanTagMin": {
          "name": "VlanTagMin",
          "description": "",
          "json_tag": "vlanTagMin"
        },
        "Vni": {
          "name": "Vni",
          "description": "",
          "json_tag": "vni"
        }
      }
    },
    "LinkProtocolServiceToken": {
      "type_name": "LinkProtocolServiceToken",
      "description": "LinkProtocolServiceToken Service Token details of Link Protocol",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "",
          "json_tag": "bandwidth"
        },
        "Href": {
          "name": "Href",
          "description": "Service Token URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "MarketingInfo": {
      "type_name": "MarketingInfo",
      "description": "MarketingInfo struct for MarketingInfo",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Logo": {
          "name": "Logo",
          "description": "Logo file name",
          "json_tag": "logo"
        },
        "ProcessSteps": {
          "name": "ProcessSteps",
          "description": "",
          "json_tag": "processSteps"
        },
        "Promotion": {
          "name": "Promotion",
          "description": "Profile promotion on marketplace",
          "json_tag": "promotion"
        }
      }
    },
    "MarketplaceSubscription": {
      "type_name": "MarketplaceSubscription",
      "description": "MarketplaceSubscription Equinix Fabric Entity for Marketplace Subscription",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Marketplace Subscription URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned Marketplace Subscription identifier",
          "json_tag": "uuid"
        }
      }
    },
    "Md5": {
      "type_name": "Md5",
      "description": "Md5 struct for Md5",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Key": {
          "name": "Key",
          "description": "The plaintext authentication key. Must be Base64 encoded. For ASCII type, the key must contain printable ASCII characters, range 10-20 characters. For HEX type, range should be 10-40 characters.",
          "json_tag": "key"
        },
        "KeyNumber": {
          "name": "KeyNumber",
          "description": "The authentication Key ID.",
          "json_tag": "keyNumber"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "MetalInterconnection": {
      "type_name": "MetalInterconnection",
      "description": "MetalInterconnection Metal Interconnection",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix Metal Interconnection",
          "json_tag": "uuid"
        }
      }
    },
    "Metric": {
      "type_name": "Metric",
      "description": "Metric Metric object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Datapoints": {
          "name": "Datapoints",
          "description": "Metric data points",
          "json_tag": "datapoints"
        },
        "Name": {
          "name": "Name",
          "description": "Metric name",
          "json_tag": "name"
        },
        "Resource": {
          "name": "Resource",
          "description": "",
          "json_tag": "resource"
        },
        "Summary": {
          "name": "Summary",
          "description": "Metric summary",
          "json_tag": "summary"
        },
        "Type": {
          "name": "Type",
          "description": "Equinix supported metric type",
          "json_tag": "type"
        },
        "Unit": {
          "name": "Unit",
          "description": "Metric unit",
          "json_tag": "unit"
        }
      }
    },
    "MetricDatapoints": {
      "type_name": "MetricDatapoints",
      "description": "MetricDatapoints struct for MetricDatapoints",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "EndDateTime": {
          "name": "EndDateTime",
          "description": "Datapoint end date and time",
          "json_tag": "endDateTime"
        },
        "StartDateTime": {
          "name": "StartDateTime",
          "description": "Datapoint start date and time",
          "json_tag": "startDateTime"
        },
        "Value": {
          "name": "Value",
          "description": "Datapoint value",
          "json_tag": "value"
        }
      }
    },
    "MetricResource": {
      "type_name": "MetricResource",
      "description": "MetricResource Metric resource",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Metric resource description",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Metric resource href",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "Metric resource name",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "Metric resource type",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Metric resource UUID",
          "json_tag": "uuid"
        }
      }
    },
    "Metrics": {
      "type_name": "Metrics",
      "description": "Metrics Bandwidth utilization statistics for a specified interval.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "IntervalEndTimestamp": {
          "name": "IntervalEndTimestamp",
          "description": "Interval end timestamp",
          "json_tag": "intervalEndTimestamp"
        },
        "Max": {
          "name": "Max",
          "description": "Max bandwidth within statistics object time interval, represented in units specified by response \\\"units\\\" field",
          "json_tag": "max"
        },
        "Mean": {
          "name": "Mean",
          "description": "Mean bandwidth within statistics object time interval, represented in units specified by response \\\"units\\\" field",
          "json_tag": "mean"
        }
      }
    },
    "Metro": {
      "type_name": "Metro",
      "description": "Metro GET Metros retrieves all Equinix® Fabric™ metros, as well as latency data for each location.This performance data helps network planning engineers and administrators make strategic decisions about port locations and traffic routes.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Code": {
          "name": "Code",
          "description": "Code Assigned to an Equinix IBX data center in a specified metropolitan area.",
          "json_tag": "code"
        },
        "ConnectedMetros": {
          "name": "ConnectedMetros",
          "description": "",
          "json_tag": "connectedMetros"
        },
        "EquinixAsn": {
          "name": "EquinixAsn",
          "description": "Autonomous system number (ASN) for a specified Fabric metro. The ASN is a unique identifier that carries the network routing protocol and exchanges that data with other internal systems via border gateway protocol.",
          "json_tag": "equinixAsn"
        },
        "GeoCoordinates": {
          "name": "GeoCoordinates",
          "description": "",
          "json_tag": "geoCoordinates"
        },
        "GeoScopes": {
          "name": "GeoScopes",
          "description": "List of supported geographic boundaries of a Fabric Metro.",
          "json_tag": "geoScopes"
        },
        "Href": {
          "name": "Href",
          "description": "The Canonical URL at which the resource resides.",
          "json_tag": "href"
        },
        "LocalVCBandwidthMax": {
          "name": "LocalVCBandwidthMax",
          "description": "This field holds Max Connection speed with in the metro",
          "json_tag": "localVCBandwidthMax"
        },
        "Name": {
          "name": "Name",
          "description": "Name of the region in which the data center is located.",
          "json_tag": "name"
        },
        "Region": {
          "name": "Region",
          "description": "Board geographic area in which the data center is located",
          "json_tag": "region"
        },
        "Services": {
          "name": "Services",
          "description": "",
          "json_tag": "services"
        },
        "Type": {
          "name": "Type",
          "description": "Indicator of a Fabric Metro",
          "json_tag": "type"
        }
      }
    },
    "MetroConnectASide": {
      "type_name": "MetroConnectASide",
      "description": "MetroConnectASide Metro Connection ASide configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "PatchPanel": {
          "name": "PatchPanel",
          "description": "",
          "json_tag": "patchPanel"
        }
      }
    },
    "MetroConnectASideResponse": {
      "type_name": "MetroConnectASideResponse",
      "description": "MetroConnectASideResponse Metro Connection ASide configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "PatchPanel": {
          "name": "PatchPanel",
          "description": "",
          "json_tag": "patchPanel"
        },
        "Port": {
          "name": "Port",
          "description": "",
          "json_tag": "port"
        }
      }
    },
    "MetroConnectOrder": {
      "type_name": "MetroConnectOrder",
      "description": "MetroConnectOrder Metro Connect Order",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CustomerReferenceId": {
          "name": "CustomerReferenceId",
          "description": "Customer order reference Id",
          "json_tag": "customerReferenceId"
        },
        "OrderId": {
          "name": "OrderId",
          "description": "Order Identification",
          "json_tag": "orderId"
        },
        "OrderNumber": {
          "name": "OrderNumber",
          "description": "Order Reference Number",
          "json_tag": "orderNumber"
        },
        "PurchaseOrderNumber": {
          "name": "PurchaseOrderNumber",
          "description": "purchase order number",
          "json_tag": "purchaseOrderNumber"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned order identifier, this is a derived response attribute",
          "json_tag": "uuid"
        }
      }
    },
    "MetroConnectPatchPanel": {
      "type_name": "MetroConnectPatchPanel",
      "description": "MetroConnectPatchPanel Patch panel object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CabinetUniqueSpaceId": {
          "name": "CabinetUniqueSpaceId",
          "description": "Cabinet Unique Space Id",
          "json_tag": "cabinetUniqueSpaceId"
        },
        "CageUniqueSpaceId": {
          "name": "CageUniqueSpaceId",
          "description": "Cage Unique Space Id",
          "json_tag": "cageUniqueSpaceId"
        },
        "ConnectorType": {
          "name": "ConnectorType",
          "description": "Type of Connector",
          "json_tag": "connectorType"
        },
        "Ibx": {
          "name": "Ibx",
          "description": "IBX identifier",
          "json_tag": "ibx"
        },
        "Id": {
          "name": "Id",
          "description": "Patch Panel ID",
          "json_tag": "id"
        },
        "PortA": {
          "name": "PortA",
          "description": "Patch Panel Port A",
          "json_tag": "portA"
        },
        "PortB": {
          "name": "PortB",
          "description": "Patch Panel Port B",
          "json_tag": "portB"
        }
      }
    },
    "MetroConnectPort": {
      "type_name": "MetroConnectPort",
      "description": "MetroConnectPort Metro Connect Port",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "",
          "json_tag": "href"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Type": {
          "name": "Type",
          "description": "Port Type",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "MetroConnectPostRequest": {
      "type_name": "MetroConnectPostRequest",
      "description": "MetroConnectPostRequest Create Metro Connect",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Bandwidth in Mbps",
          "json_tag": "bandwidth"
        },
        "ConnectivityDestinationType": {
          "name": "ConnectivityDestinationType",
          "description": "",
          "json_tag": "connectivityDestinationType"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on connection configuration or status changes",
          "json_tag": "notifications"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Type": {
          "name": "Type",
          "description": "Metro Connect Type",
          "json_tag": "type"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "MetroConnectZSide": {
      "type_name": "MetroConnectZSide",
      "description": "MetroConnectZSide Metro Connection ZSide configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Loas": {
          "name": "Loas",
          "description": "",
          "json_tag": "loas"
        },
        "PatchPanel": {
          "name": "PatchPanel",
          "description": "",
          "json_tag": "patchPanel"
        }
      }
    },
    "MetroConnectZSideResponse": {
      "type_name": "MetroConnectZSideResponse",
      "description": "MetroConnectZSideResponse Metro Connection ZSide configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Loas": {
          "name": "Loas",
          "description": "",
          "json_tag": "loas"
        },
        "PatchPanel": {
          "name": "PatchPanel",
          "description": "",
          "json_tag": "patchPanel"
        },
        "Port": {
          "name": "Port",
          "description": "",
          "json_tag": "port"
        }
      }
    },
    "MetroError": {
      "type_name": "MetroError",
      "description": "MetroError Error with details",
      "fields": {
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CorrelationId": {
          "name": "CorrelationId",
          "description": "",
          "json_tag": "correlationId"
        },
        "Details": {
          "name": "Details",
          "description": "",
          "json_tag": "details"
        },
        "ErrorCode": {
          "name": "ErrorCode",
          "description": "",
          "json_tag": "errorCode"
        },
        "ErrorMessage": {
          "name": "ErrorMessage",
          "description": "",
          "json_tag": "errorMessage"
        },
        "Help": {
          "name": "Help",
          "description": "",
          "json_tag": "help"
        }
      }
    },
    "MetroResponse": {
      "type_name": "MetroResponse",
      "description": "MetroResponse GET Metros retrieves all Equinix® Fabric™ metros, as well as latency data for each location.This performance data helps network planning engineers and administrators make strategic decisions about port locations and traffic routes.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Fabric Metros.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "Network": {
      "type_name": "Network",
      "description": "Network Network specification",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "ConnectionsCount": {
          "name": "ConnectionsCount",
          "description": "number of connections created on the network",
          "json_tag": "connectionsCount"
        },
        "Href": {
          "name": "Href",
          "description": "Network URI",
          "json_tag": "href"
        },
        "Links": {
          "name": "Links",
          "description": "Network sub-resources links",
          "json_tag": "links"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided network name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on network configuration or status changes",
          "json_tag": "notifications"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Scope": {
          "name": "Scope",
          "description": "",
          "json_tag": "scope"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned network identifier",
          "json_tag": "uuid"
        }
      }
    },
    "NetworkChange": {
      "type_name": "NetworkChange",
      "description": "NetworkChange Current state of latest network change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Set when change flow starts",
          "json_tag": "createdDateTime"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Href": {
          "name": "Href",
          "description": "Network URI",
          "json_tag": "href"
        },
        "Status": {
          "name": "Status",
          "description": "",
          "json_tag": "status"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Set when change object is updated",
          "json_tag": "updatedDateTime"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "NetworkChangeOperation": {
      "type_name": "NetworkChangeOperation",
      "description": "NetworkChangeOperation Network change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "NetworkChangeResponse": {
      "type_name": "NetworkChangeResponse",
      "description": "NetworkChangeResponse List of network changes",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "NetworkConnections": {
      "type_name": "NetworkConnections",
      "description": "NetworkConnections List of network changes",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "NetworkFilter": {
      "type_name": "NetworkFilter",
      "description": "NetworkFilter struct for NetworkFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        },
        "Operator": {
          "name": "Operator",
          "description": "",
          "json_tag": "operator"
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "NetworkOperation": {
      "type_name": "NetworkOperation",
      "description": "NetworkOperation Network operational data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "EquinixStatus": {
          "name": "EquinixStatus",
          "description": "",
          "json_tag": "equinixStatus"
        }
      }
    },
    "NetworkPostRequest": {
      "type_name": "NetworkPostRequest",
      "description": "NetworkPostRequest Create Network",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided network name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Preferences for notifications on network configuration or status changes",
          "json_tag": "notifications"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Scope": {
          "name": "Scope",
          "description": "",
          "json_tag": "scope"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "NetworkSearchRequest": {
      "type_name": "NetworkSearchRequest",
      "description": "NetworkSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "NetworkSearchResponse": {
      "type_name": "NetworkSearchResponse",
      "description": "NetworkSearchResponse List of networks",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "NetworkSortCriteria": {
      "type_name": "NetworkSortCriteria",
      "description": "NetworkSortCriteria struct for NetworkSortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "NetworkSortCriteriaResponse": {
      "type_name": "NetworkSortCriteriaResponse",
      "description": "NetworkSortCriteriaResponse struct for NetworkSortCriteriaResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "NullableAWSDirectConnect": {
      "type_name": "NullableAWSDirectConnect",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSDirectConnectResponse": {
      "type_name": "NullableAWSDirectConnectResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSPermission": {
      "type_name": "NullableAWSPermission",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSPermissionType": {
      "type_name": "NullableAWSPermissionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSProvider": {
      "type_name": "NullableAWSProvider",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSProviderResource": {
      "type_name": "NullableAWSProviderResource",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSProviderResourceResponse": {
      "type_name": "NullableAWSProviderResourceResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSProviderResponse": {
      "type_name": "NullableAWSProviderResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSProviderType": {
      "type_name": "NullableAWSProviderType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSVirtualPrivateGateway": {
      "type_name": "NullableAWSVirtualPrivateGateway",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSVirtualPrivateGatewayResponse": {
      "type_name": "NullableAWSVirtualPrivateGatewayResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAWSVirtualPrivateGatewayType": {
      "type_name": "NullableAWSVirtualPrivateGatewayType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAccessPoint": {
      "type_name": "NullableAccessPoint",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAccessPointRole": {
      "type_name": "NullableAccessPointRole",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAccessPointSelector": {
      "type_name": "NullableAccessPointSelector",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAccessPointSelectorType": {
      "type_name": "NullableAccessPointSelectorType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAccessPointType": {
      "type_name": "NullableAccessPointType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableActionRequest": {
      "type_name": "NullableActionRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableActions": {
      "type_name": "NullableActions",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAddOperation": {
      "type_name": "NullableAddOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAlertRulePostRequest": {
      "type_name": "NullableAlertRulePostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAlertRulePostRequestOperand": {
      "type_name": "NullableAlertRulePostRequestOperand",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAlertRulePostRequestType": {
      "type_name": "NullableAlertRulePostRequestType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAlertRulePutRequest": {
      "type_name": "NullableAlertRulePutRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAllPhysicalPortsResponse": {
      "type_name": "NullableAllPhysicalPortsResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAllPortsResponse": {
      "type_name": "NullableAllPortsResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableApiConfig": {
      "type_name": "NullableApiConfig",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableApiServices": {
      "type_name": "NullableApiServices",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAsset": {
      "type_name": "NullableAsset",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAuthContext": {
      "type_name": "NullableAuthContext",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAuthContextAuthid": {
      "type_name": "NullableAuthContextAuthid",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAuthContextAuthtype": {
      "type_name": "NullableAuthContextAuthtype",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableAuthenticationKey": {
      "type_name": "NullableAuthenticationKey",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBGPActionData": {
      "type_name": "NullableBGPActionData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBGPActionRequest": {
      "type_name": "NullableBGPActionRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBGPActionStates": {
      "type_name": "NullableBGPActionStates",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBGPActions": {
      "type_name": "NullableBGPActions",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBGPActionsBulkData": {
      "type_name": "NullableBGPActionsBulkData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBGPConnectionIpv4": {
      "type_name": "NullableBGPConnectionIpv4",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBGPConnectionIpv6": {
      "type_name": "NullableBGPConnectionIpv6",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBGPConnectionOperation": {
      "type_name": "NullableBGPConnectionOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBGPConnectionOperationOperationalStatus": {
      "type_name": "NullableBGPConnectionOperationOperationalStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBandwidthUtilization": {
      "type_name": "NullableBandwidthUtilization",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBandwidthUtilizationUnit": {
      "type_name": "NullableBandwidthUtilizationUnit",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBool": {
      "type_name": "NullableBool",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBulkPhysicalPort": {
      "type_name": "NullableBulkPhysicalPort",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBulkPort": {
      "type_name": "NullableBulkPort",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableBulkPortRequest": {
      "type_name": "NullableBulkPortRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableChange": {
      "type_name": "NullableChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableChangeStatus": {
      "type_name": "NullableChangeStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableChangeType": {
      "type_name": "NullableChangeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableChangelog": {
      "type_name": "NullableChangelog",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableClientInterfaces": {
      "type_name": "NullableClientInterfaces",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudEvent": {
      "type_name": "NullableCloudEvent",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudEventAssetType": {
      "type_name": "NullableCloudEventAssetType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudEventData": {
      "type_name": "NullableCloudEventData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudEventFilters": {
      "type_name": "NullableCloudEventFilters",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudEventSearchRequest": {
      "type_name": "NullableCloudEventSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudEventSimpleExpression": {
      "type_name": "NullableCloudEventSimpleExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouter": {
      "type_name": "NullableCloudRouter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterAccessPointState": {
      "type_name": "NullableCloudRouterAccessPointState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionRequest": {
      "type_name": "NullableCloudRouterActionRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionResponse": {
      "type_name": "NullableCloudRouterActionResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionState": {
      "type_name": "NullableCloudRouterActionState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionType": {
      "type_name": "NullableCloudRouterActionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionsSearchExpression": {
      "type_name": "NullableCloudRouterActionsSearchExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionsSearchFilter": {
      "type_name": "NullableCloudRouterActionsSearchFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionsSearchFilters": {
      "type_name": "NullableCloudRouterActionsSearchFilters",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionsSearchOrFilter": {
      "type_name": "NullableCloudRouterActionsSearchOrFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionsSearchRequest": {
      "type_name": "NullableCloudRouterActionsSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionsSearchResponse": {
      "type_name": "NullableCloudRouterActionsSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionsSearchSortBy": {
      "type_name": "NullableCloudRouterActionsSearchSortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionsSearchSortCriteria": {
      "type_name": "NullableCloudRouterActionsSearchSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterActionsSearchSortDirection": {
      "type_name": "NullableCloudRouterActionsSearchSortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterChange": {
      "type_name": "NullableCloudRouterChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterChangeOperation": {
      "type_name": "NullableCloudRouterChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterChangeType": {
      "type_name": "NullableCloudRouterChangeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommand": {
      "type_name": "NullableCloudRouterCommand",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandPingResponse": {
      "type_name": "NullableCloudRouterCommandPingResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandPostRequest": {
      "type_name": "NullableCloudRouterCommandPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandRequestConnection": {
      "type_name": "NullableCloudRouterCommandRequestConnection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandRequestPayload": {
      "type_name": "NullableCloudRouterCommandRequestPayload",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandRequestResponse": {
      "type_name": "NullableCloudRouterCommandRequestResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandResponse": {
      "type_name": "NullableCloudRouterCommandResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandSearchExpression": {
      "type_name": "NullableCloudRouterCommandSearchExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandSearchFilter": {
      "type_name": "NullableCloudRouterCommandSearchFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandSearchFilters": {
      "type_name": "NullableCloudRouterCommandSearchFilters",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandSearchOrFilter": {
      "type_name": "NullableCloudRouterCommandSearchOrFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandSearchRequest": {
      "type_name": "NullableCloudRouterCommandSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandSearchResponse": {
      "type_name": "NullableCloudRouterCommandSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandSearchSortBy": {
      "type_name": "NullableCloudRouterCommandSearchSortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandSearchSortCriteria": {
      "type_name": "NullableCloudRouterCommandSearchSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandSearchSortDirection": {
      "type_name": "NullableCloudRouterCommandSearchSortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandState": {
      "type_name": "NullableCloudRouterCommandState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandTracerouteResponse": {
      "type_name": "NullableCloudRouterCommandTracerouteResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterCommandType": {
      "type_name": "NullableCloudRouterCommandType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterFilter": {
      "type_name": "NullableCloudRouterFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterFilters": {
      "type_name": "NullableCloudRouterFilters",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterOrFilter": {
      "type_name": "NullableCloudRouterOrFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterPackage": {
      "type_name": "NullableCloudRouterPackage",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterPackageType": {
      "type_name": "NullableCloudRouterPackageType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterPostRequest": {
      "type_name": "NullableCloudRouterPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterPostRequestBase": {
      "type_name": "NullableCloudRouterPostRequestBase",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterPostRequestBaseType": {
      "type_name": "NullableCloudRouterPostRequestBaseType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterPostRequestPackage": {
      "type_name": "NullableCloudRouterPostRequestPackage",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterPostRequestPackageCode": {
      "type_name": "NullableCloudRouterPostRequestPackageCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterPostRequestPackageType": {
      "type_name": "NullableCloudRouterPostRequestPackageType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterSearchRequest": {
      "type_name": "NullableCloudRouterSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterSimpleExpression": {
      "type_name": "NullableCloudRouterSimpleExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterSortBy": {
      "type_name": "NullableCloudRouterSortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterSortCriteria": {
      "type_name": "NullableCloudRouterSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCloudRouterSortDirection": {
      "type_name": "NullableCloudRouterSortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCode": {
      "type_name": "NullableCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectedMetro": {
      "type_name": "NullableConnectedMetro",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnection": {
      "type_name": "NullableConnection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionAcceptanceData": {
      "type_name": "NullableConnectionAcceptanceData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionAction": {
      "type_name": "NullableConnectionAction",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionActionRequest": {
      "type_name": "NullableConnectionActionRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionChangeOperation": {
      "type_name": "NullableConnectionChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionCompanyProfile": {
      "type_name": "NullableConnectionCompanyProfile",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionDirection": {
      "type_name": "NullableConnectionDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionInvitation": {
      "type_name": "NullableConnectionInvitation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionLink": {
      "type_name": "NullableConnectionLink",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionLinkType": {
      "type_name": "NullableConnectionLinkType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionOperation": {
      "type_name": "NullableConnectionOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionOperationOperationalStatus": {
      "type_name": "NullableConnectionOperationOperationalStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionPostRequest": {
      "type_name": "NullableConnectionPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionPriority": {
      "type_name": "NullableConnectionPriority",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRedundancy": {
      "type_name": "NullableConnectionRedundancy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionResponse": {
      "type_name": "NullableConnectionResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteAggregationData": {
      "type_name": "NullableConnectionRouteAggregationData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteAggregationDataAttachmentStatus": {
      "type_name": "NullableConnectionRouteAggregationDataAttachmentStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteAggregationDataType": {
      "type_name": "NullableConnectionRouteAggregationDataType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteEntryFilter": {
      "type_name": "NullableConnectionRouteEntryFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteEntryFilters": {
      "type_name": "NullableConnectionRouteEntryFilters",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteEntryOrFilter": {
      "type_name": "NullableConnectionRouteEntryOrFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteEntrySimpleExpression": {
      "type_name": "NullableConnectionRouteEntrySimpleExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteEntrySortBy": {
      "type_name": "NullableConnectionRouteEntrySortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteEntrySortDirection": {
      "type_name": "NullableConnectionRouteEntrySortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteFilterData": {
      "type_name": "NullableConnectionRouteFilterData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteFilterDataDirection": {
      "type_name": "NullableConnectionRouteFilterDataDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteFilterDataType": {
      "type_name": "NullableConnectionRouteFilterDataType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteFiltersBase": {
      "type_name": "NullableConnectionRouteFiltersBase",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteFiltersBaseDirection": {
      "type_name": "NullableConnectionRouteFiltersBaseDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteSearchRequest": {
      "type_name": "NullableConnectionRouteSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteSortCriteria": {
      "type_name": "NullableConnectionRouteSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteTableEntry": {
      "type_name": "NullableConnectionRouteTableEntry",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteTableEntryConnection": {
      "type_name": "NullableConnectionRouteTableEntryConnection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteTableEntrySearchResponse": {
      "type_name": "NullableConnectionRouteTableEntrySearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRouteTableEntryState": {
      "type_name": "NullableConnectionRouteTableEntryState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionRoutingProtocolPostRequest": {
      "type_name": "NullableConnectionRoutingProtocolPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionSearchResponse": {
      "type_name": "NullableConnectionSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionSide": {
      "type_name": "NullableConnectionSide",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionSideAdditionalInfo": {
      "type_name": "NullableConnectionSideAdditionalInfo",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionState": {
      "type_name": "NullableConnectionState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectionType": {
      "type_name": "NullableConnectionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectivitySource": {
      "type_name": "NullableConnectivitySource",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableConnectivitySourceType": {
      "type_name": "NullableConnectivitySourceType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCustomField": {
      "type_name": "NullableCustomField",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableCustomFieldDataType": {
      "type_name": "NullableCustomFieldDataType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeployment": {
      "type_name": "NullableDeployment",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentActionRequest": {
      "type_name": "NullableDeploymentActionRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentActionType": {
      "type_name": "NullableDeploymentActionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentExpression": {
      "type_name": "NullableDeploymentExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentResponse": {
      "type_name": "NullableDeploymentResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentSearchExpressions": {
      "type_name": "NullableDeploymentSearchExpressions",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentSearchExpressionsOperator": {
      "type_name": "NullableDeploymentSearchExpressionsOperator",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentSearchRequest": {
      "type_name": "NullableDeploymentSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentSearchResponse": {
      "type_name": "NullableDeploymentSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentState": {
      "type_name": "NullableDeploymentState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDeploymentTopology": {
      "type_name": "NullableDeploymentTopology",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDirectConnectionIpv4": {
      "type_name": "NullableDirectConnectionIpv4",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDirectConnectionIpv6": {
      "type_name": "NullableDirectConnectionIpv6",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableDirection": {
      "type_name": "NullableDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableEndCustomer": {
      "type_name": "NullableEndCustomer",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableEquinixStatus": {
      "type_name": "NullableEquinixStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableError": {
      "type_name": "NullableError",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableExpression": {
      "type_name": "NullableExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableExpressionOperator": {
      "type_name": "NullableExpressionOperator",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricBGPConnectionIpv4": {
      "type_name": "NullableFabricBGPConnectionIpv4",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricCloudRouterCode": {
      "type_name": "NullableFabricCloudRouterCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricCloudRouterPackages": {
      "type_name": "NullableFabricCloudRouterPackages",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricCloudRouterPrice": {
      "type_name": "NullableFabricCloudRouterPrice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricConnection": {
      "type_name": "NullableFabricConnection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricConnectionResponse": {
      "type_name": "NullableFabricConnectionResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricConnectionType": {
      "type_name": "NullableFabricConnectionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricProvider": {
      "type_name": "NullableFabricProvider",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricProviderResource": {
      "type_name": "NullableFabricProviderResource",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricProviderResourceResponse": {
      "type_name": "NullableFabricProviderResourceResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricProviderResponse": {
      "type_name": "NullableFabricProviderResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricProviderType": {
      "type_name": "NullableFabricProviderType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricRouteProtocols": {
      "type_name": "NullableFabricRouteProtocols",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricRouteProtocolsResponse": {
      "type_name": "NullableFabricRouteProtocolsResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricRouter": {
      "type_name": "NullableFabricRouter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricRouterResponse": {
      "type_name": "NullableFabricRouterResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricRouterType": {
      "type_name": "NullableFabricRouterType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFabricRoutingProtocolBGPType": {
      "type_name": "NullableFabricRoutingProtocolBGPType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFilterBody": {
      "type_name": "NullableFilterBody",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFloat32": {
      "type_name": "NullableFloat32",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableFloat64": {
      "type_name": "NullableFloat64",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGCPCloudRouter": {
      "type_name": "NullableGCPCloudRouter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGCPCloudRouterResponse": {
      "type_name": "NullableGCPCloudRouterResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGCPCloudRouterType": {
      "type_name": "NullableGCPCloudRouterType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGCPPermission": {
      "type_name": "NullableGCPPermission",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGCPProvider": {
      "type_name": "NullableGCPProvider",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGCPProviderResource": {
      "type_name": "NullableGCPProviderResource",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGCPProviderResourceResponse": {
      "type_name": "NullableGCPProviderResourceResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGCPProviderResponse": {
      "type_name": "NullableGCPProviderResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGCPProviderType": {
      "type_name": "NullableGCPProviderType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGeoCoordinates": {
      "type_name": "NullableGeoCoordinates",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGeoScopeType": {
      "type_name": "NullableGeoScopeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetAllCloudRouterCommands": {
      "type_name": "NullableGetAllCloudRouterCommands",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetAllConnectionRouteAggregationsResponse": {
      "type_name": "NullableGetAllConnectionRouteAggregationsResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetAllConnectionRouteFiltersResponse": {
      "type_name": "NullableGetAllConnectionRouteFiltersResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetAllStreamAlertRuleResponse": {
      "type_name": "NullableGetAllStreamAlertRuleResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetAllStreamAssetResponse": {
      "type_name": "NullableGetAllStreamAssetResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetAllStreamResponse": {
      "type_name": "NullableGetAllStreamResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetAllStreamSubscriptionResponse": {
      "type_name": "NullableGetAllStreamSubscriptionResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetCloudEventsByAssetResponse": {
      "type_name": "NullableGetCloudEventsByAssetResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetMetricsByAssetResponse": {
      "type_name": "NullableGetMetricsByAssetResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetResponse": {
      "type_name": "NullableGetResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetRouteAggregationGetConnectionsResponse": {
      "type_name": "NullableGetRouteAggregationGetConnectionsResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetRouteAggregationRulesResponse": {
      "type_name": "NullableGetRouteAggregationRulesResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetRouteFilterGetConnectionsResponse": {
      "type_name": "NullableGetRouteFilterGetConnectionsResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetRouteFilterRulesResponse": {
      "type_name": "NullableGetRouteFilterRulesResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetServiceProfilesViewPointParameter": {
      "type_name": "NullableGetServiceProfilesViewPointParameter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableGetTimeServicesPackageByCodePackageCodeParameter": {
      "type_name": "NullableGetTimeServicesPackageByCodePackageCodeParameter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableHealthResponse": {
      "type_name": "NullableHealthResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableHop": {
      "type_name": "NullableHop",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableHopProbes": {
      "type_name": "NullableHopProbes",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableInt": {
      "type_name": "NullableInt",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableInt32": {
      "type_name": "NullableInt32",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableInt64": {
      "type_name": "NullableInt64",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableInterface": {
      "type_name": "NullableInterface",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableInterfaceType": {
      "type_name": "NullableInterfaceType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableInternetAccess": {
      "type_name": "NullableInternetAccess",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableIpBlockPrice": {
      "type_name": "NullableIpBlockPrice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableIpBlockType": {
      "type_name": "NullableIpBlockType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableIpv4": {
      "type_name": "NullableIpv4",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableJsonPatchOperation": {
      "type_name": "NullableJsonPatchOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableLink": {
      "type_name": "NullableLink",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableLinkAggregationGroup": {
      "type_name": "NullableLinkAggregationGroup",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableLinkProtocolConnection": {
      "type_name": "NullableLinkProtocolConnection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableLinkProtocolGetResponse": {
      "type_name": "NullableLinkProtocolGetResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableLinkProtocolRequestType": {
      "type_name": "NullableLinkProtocolRequestType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableLinkProtocolResponse": {
      "type_name": "NullableLinkProtocolResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableLinkProtocolServiceToken": {
      "type_name": "NullableLinkProtocolServiceToken",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableLinkProtocolState": {
      "type_name": "NullableLinkProtocolState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableLinkProtocolType": {
      "type_name": "NullableLinkProtocolType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMarketingInfo": {
      "type_name": "NullableMarketingInfo",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMarketplaceSubscription": {
      "type_name": "NullableMarketplaceSubscription",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMarketplaceSubscriptionType": {
      "type_name": "NullableMarketplaceSubscriptionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMd5": {
      "type_name": "NullableMd5",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMd5Type": {
      "type_name": "NullableMd5Type",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetalInterconnection": {
      "type_name": "NullableMetalInterconnection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetric": {
      "type_name": "NullableMetric",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetricAssetType": {
      "type_name": "NullableMetricAssetType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetricDatapoints": {
      "type_name": "NullableMetricDatapoints",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetricResource": {
      "type_name": "NullableMetricResource",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetrics": {
      "type_name": "NullableMetrics",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetro": {
      "type_name": "NullableMetro",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroConnectASide": {
      "type_name": "NullableMetroConnectASide",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroConnectASideResponse": {
      "type_name": "NullableMetroConnectASideResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroConnectOrder": {
      "type_name": "NullableMetroConnectOrder",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroConnectPatchPanel": {
      "type_name": "NullableMetroConnectPatchPanel",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroConnectPort": {
      "type_name": "NullableMetroConnectPort",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroConnectPostRequest": {
      "type_name": "NullableMetroConnectPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroConnectPostRequestConnectivityDestinationType": {
      "type_name": "NullableMetroConnectPostRequestConnectivityDestinationType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroConnectZSide": {
      "type_name": "NullableMetroConnectZSide",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroConnectZSideResponse": {
      "type_name": "NullableMetroConnectZSideResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroError": {
      "type_name": "NullableMetroError",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroErrorErrorCode": {
      "type_name": "NullableMetroErrorErrorCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroErrorErrorMessage": {
      "type_name": "NullableMetroErrorErrorMessage",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableMetroResponse": {
      "type_name": "NullableMetroResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetwork": {
      "type_name": "NullableNetwork",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkChange": {
      "type_name": "NullableNetworkChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkChangeOperation": {
      "type_name": "NullableNetworkChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkChangeResponse": {
      "type_name": "NullableNetworkChangeResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkChangeStatus": {
      "type_name": "NullableNetworkChangeStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkChangeType": {
      "type_name": "NullableNetworkChangeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkConnections": {
      "type_name": "NullableNetworkConnections",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkEquinixStatus": {
      "type_name": "NullableNetworkEquinixStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkFilter": {
      "type_name": "NullableNetworkFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkFilterOperator": {
      "type_name": "NullableNetworkFilterOperator",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkOperation": {
      "type_name": "NullableNetworkOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkPostRequest": {
      "type_name": "NullableNetworkPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkScope": {
      "type_name": "NullableNetworkScope",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkSearchFieldName": {
      "type_name": "NullableNetworkSearchFieldName",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkSearchRequest": {
      "type_name": "NullableNetworkSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkSearchResponse": {
      "type_name": "NullableNetworkSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkSortBy": {
      "type_name": "NullableNetworkSortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkSortByResponse": {
      "type_name": "NullableNetworkSortByResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkSortCriteria": {
      "type_name": "NullableNetworkSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkSortCriteriaResponse": {
      "type_name": "NullableNetworkSortCriteriaResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkSortDirection": {
      "type_name": "NullableNetworkSortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkSortDirectionResponse": {
      "type_name": "NullableNetworkSortDirectionResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkState": {
      "type_name": "NullableNetworkState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableNetworkType": {
      "type_name": "NullableNetworkType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableOpEnum": {
      "type_name": "NullableOpEnum",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableOperation": {
      "type_name": "NullableOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableOrchestratorProviders": {
      "type_name": "NullableOrchestratorProviders",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableOrder": {
      "type_name": "NullableOrder",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableOutputStructuredPing": {
      "type_name": "NullableOutputStructuredPing",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableOutputStructuredPingResponseItem": {
      "type_name": "NullableOutputStructuredPingResponseItem",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableOutputStructuredTraceroute": {
      "type_name": "NullableOutputStructuredTraceroute",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePackage": {
      "type_name": "NullablePackage",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePackageChangeLog": {
      "type_name": "NullablePackageChangeLog",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePackageCode": {
      "type_name": "NullablePackageCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePackageResponse": {
      "type_name": "NullablePackageResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePackageType": {
      "type_name": "NullablePackageType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePagination": {
      "type_name": "NullablePagination",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePaginationRequest": {
      "type_name": "NullablePaginationRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePeeringType": {
      "type_name": "NullablePeeringType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePhysicalPort": {
      "type_name": "NullablePhysicalPort",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePhysicalPortSettings": {
      "type_name": "NullablePhysicalPortSettings",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePhysicalPortType": {
      "type_name": "NullablePhysicalPortType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePort": {
      "type_name": "NullablePort",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortAdditionalInfo": {
      "type_name": "NullablePortAdditionalInfo",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortBmmrType": {
      "type_name": "NullablePortBmmrType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortChange": {
      "type_name": "NullablePortChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortChangeOperation": {
      "type_name": "NullablePortChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortChangeStatus": {
      "type_name": "NullablePortChangeStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortChangeType": {
      "type_name": "NullablePortChangeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortConnectivitySourceType": {
      "type_name": "NullablePortConnectivitySourceType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortDemarcationPoint": {
      "type_name": "NullablePortDemarcationPoint",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortDevice": {
      "type_name": "NullablePortDevice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortDeviceRedundancy": {
      "type_name": "NullablePortDeviceRedundancy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortDeviceRedundancyPriority": {
      "type_name": "NullablePortDeviceRedundancyPriority",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortEncapsulation": {
      "type_name": "NullablePortEncapsulation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortEncapsulationType": {
      "type_name": "NullablePortEncapsulationType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortExpression": {
      "type_name": "NullablePortExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortInterface": {
      "type_name": "NullablePortInterface",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortLag": {
      "type_name": "NullablePortLag",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortLoa": {
      "type_name": "NullablePortLoa",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortNotification": {
      "type_name": "NullablePortNotification",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortNotificationType": {
      "type_name": "NullablePortNotificationType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortOperation": {
      "type_name": "NullablePortOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortOperationOperationalStatus": {
      "type_name": "NullablePortOperationOperationalStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortOrder": {
      "type_name": "NullablePortOrder",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortOrderPurchaseOrder": {
      "type_name": "NullablePortOrderPurchaseOrder",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortOrderPurchaseOrderSelectionType": {
      "type_name": "NullablePortOrderPurchaseOrderSelectionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortOrderPurchaseOrderType": {
      "type_name": "NullablePortOrderPurchaseOrderType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortOrderSignature": {
      "type_name": "NullablePortOrderSignature",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortOrderSignatureDelegate": {
      "type_name": "NullablePortOrderSignatureDelegate",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortOrderSignatureSignatory": {
      "type_name": "NullablePortOrderSignatureSignatory",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortPhysicalPortsType": {
      "type_name": "NullablePortPhysicalPortsType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortPriority": {
      "type_name": "NullablePortPriority",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortRedundancy": {
      "type_name": "NullablePortRedundancy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortRequest": {
      "type_name": "NullablePortRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortSearchFieldName": {
      "type_name": "NullablePortSearchFieldName",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortServiceType": {
      "type_name": "NullablePortServiceType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortSettings": {
      "type_name": "NullablePortSettings",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortSettingsPackageType": {
      "type_name": "NullablePortSettingsPackageType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortSettingsSharedPortProduct": {
      "type_name": "NullablePortSettingsSharedPortProduct",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortSortBy": {
      "type_name": "NullablePortSortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortSortCriteria": {
      "type_name": "NullablePortSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortSortDirection": {
      "type_name": "NullablePortSortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortState": {
      "type_name": "NullablePortState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortTether": {
      "type_name": "NullablePortTether",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortType": {
      "type_name": "NullablePortType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePortV4SearchRequest": {
      "type_name": "NullablePortV4SearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeChangeOperation": {
      "type_name": "NullablePrecisionTimeChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeChangeOperationOp": {
      "type_name": "NullablePrecisionTimeChangeOperationOp",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeChangeOperationPath": {
      "type_name": "NullablePrecisionTimeChangeOperationPath",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeOrder": {
      "type_name": "NullablePrecisionTimeOrder",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimePackagePostResponse": {
      "type_name": "NullablePrecisionTimePackagePostResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimePackageRequest": {
      "type_name": "NullablePrecisionTimePackageRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimePackageRequestCode": {
      "type_name": "NullablePrecisionTimePackageRequestCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimePackageResponse": {
      "type_name": "NullablePrecisionTimePackageResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimePackageResponseType": {
      "type_name": "NullablePrecisionTimePackageResponseType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimePrice": {
      "type_name": "NullablePrecisionTimePrice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeServiceConnectionsResponse": {
      "type_name": "NullablePrecisionTimeServiceConnectionsResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeServicePackagesResponse": {
      "type_name": "NullablePrecisionTimeServicePackagesResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeServiceRequest": {
      "type_name": "NullablePrecisionTimeServiceRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeServiceRequestType": {
      "type_name": "NullablePrecisionTimeServiceRequestType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeServiceResponse": {
      "type_name": "NullablePrecisionTimeServiceResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeServiceResponseState": {
      "type_name": "NullablePrecisionTimeServiceResponseState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrecisionTimeServiceResponseType": {
      "type_name": "NullablePrecisionTimeServiceResponseType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePresence": {
      "type_name": "NullablePresence",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePrice": {
      "type_name": "NullablePrice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceCategory": {
      "type_name": "NullablePriceCategory",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceCharge": {
      "type_name": "NullablePriceCharge",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceChargeType": {
      "type_name": "NullablePriceChargeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceError": {
      "type_name": "NullablePriceError",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceErrorAdditionalInfo": {
      "type_name": "NullablePriceErrorAdditionalInfo",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceErrorErrorCode": {
      "type_name": "NullablePriceErrorErrorCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceErrorErrorMessage": {
      "type_name": "NullablePriceErrorErrorMessage",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceLocation": {
      "type_name": "NullablePriceLocation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceSearchResponse": {
      "type_name": "NullablePriceSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePriceTermLength": {
      "type_name": "NullablePriceTermLength",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProcessStep": {
      "type_name": "NullableProcessStep",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProductType": {
      "type_name": "NullableProductType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProject": {
      "type_name": "NullableProject",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProviderExpression": {
      "type_name": "NullableProviderExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProviderResponse": {
      "type_name": "NullableProviderResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProviderSearchExpressions": {
      "type_name": "NullableProviderSearchExpressions",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProviderSearchRequest": {
      "type_name": "NullableProviderSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProviderSearchResponse": {
      "type_name": "NullableProviderSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProviderStatus": {
      "type_name": "NullableProviderStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProviderType": {
      "type_name": "NullableProviderType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableProvidersSearchResponse": {
      "type_name": "NullableProvidersSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePtpAdvanceConfiguration": {
      "type_name": "NullablePtpAdvanceConfiguration",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePtpAdvanceConfigurationLogAnnounceInterval": {
      "type_name": "NullablePtpAdvanceConfigurationLogAnnounceInterval",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePtpAdvanceConfigurationLogDelayReqInterval": {
      "type_name": "NullablePtpAdvanceConfigurationLogDelayReqInterval",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePtpAdvanceConfigurationLogSyncInterval": {
      "type_name": "NullablePtpAdvanceConfigurationLogSyncInterval",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePtpAdvanceConfigurationTimeScale": {
      "type_name": "NullablePtpAdvanceConfigurationTimeScale",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullablePtpAdvanceConfigurationTransportMode": {
      "type_name": "NullablePtpAdvanceConfigurationTransportMode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRemoveOperation": {
      "type_name": "NullableRemoveOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableReplaceOperation": {
      "type_name": "NullableReplaceOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableResourceData": {
      "type_name": "NullableResourceData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableResourceSelector": {
      "type_name": "NullableResourceSelector",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationChangeData": {
      "type_name": "NullableRouteAggregationChangeData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationChangeDataResponse": {
      "type_name": "NullableRouteAggregationChangeDataResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationConnectionsData": {
      "type_name": "NullableRouteAggregationConnectionsData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRuleState": {
      "type_name": "NullableRouteAggregationRuleState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesBase": {
      "type_name": "NullableRouteAggregationRulesBase",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesChange": {
      "type_name": "NullableRouteAggregationRulesChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesChangeData": {
      "type_name": "NullableRouteAggregationRulesChangeData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesChangeDataResponse": {
      "type_name": "NullableRouteAggregationRulesChangeDataResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesChangeOperation": {
      "type_name": "NullableRouteAggregationRulesChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesChangeType": {
      "type_name": "NullableRouteAggregationRulesChangeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesData": {
      "type_name": "NullableRouteAggregationRulesData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesDataType": {
      "type_name": "NullableRouteAggregationRulesDataType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesPatchRequestItem": {
      "type_name": "NullableRouteAggregationRulesPatchRequestItem",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationRulesPostRequest": {
      "type_name": "NullableRouteAggregationRulesPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationSortItem": {
      "type_name": "NullableRouteAggregationSortItem",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationSortItemProperty": {
      "type_name": "NullableRouteAggregationSortItemProperty",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationState": {
      "type_name": "NullableRouteAggregationState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsBase": {
      "type_name": "NullableRouteAggregationsBase",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsBaseType": {
      "type_name": "NullableRouteAggregationsBaseType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsChange": {
      "type_name": "NullableRouteAggregationsChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsChangeOperation": {
      "type_name": "NullableRouteAggregationsChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsChangeType": {
      "type_name": "NullableRouteAggregationsChangeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsData": {
      "type_name": "NullableRouteAggregationsData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsDataProject": {
      "type_name": "NullableRouteAggregationsDataProject",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsPatchRequestItem": {
      "type_name": "NullableRouteAggregationsPatchRequestItem",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsSearchBase": {
      "type_name": "NullableRouteAggregationsSearchBase",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsSearchBaseFilter": {
      "type_name": "NullableRouteAggregationsSearchBaseFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsSearchFilterItem": {
      "type_name": "NullableRouteAggregationsSearchFilterItem",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteAggregationsSearchResponse": {
      "type_name": "NullableRouteAggregationsSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterChangeData": {
      "type_name": "NullableRouteFilterChangeData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterChangeDataResponse": {
      "type_name": "NullableRouteFilterChangeDataResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterConnectionsData": {
      "type_name": "NullableRouteFilterConnectionsData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRuleState": {
      "type_name": "NullableRouteFilterRuleState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesBase": {
      "type_name": "NullableRouteFilterRulesBase",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesChange": {
      "type_name": "NullableRouteFilterRulesChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesChangeData": {
      "type_name": "NullableRouteFilterRulesChangeData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesChangeDataResponse": {
      "type_name": "NullableRouteFilterRulesChangeDataResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesChangeOperation": {
      "type_name": "NullableRouteFilterRulesChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesChangeType": {
      "type_name": "NullableRouteFilterRulesChangeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesData": {
      "type_name": "NullableRouteFilterRulesData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesDataAction": {
      "type_name": "NullableRouteFilterRulesDataAction",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesDataType": {
      "type_name": "NullableRouteFilterRulesDataType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesPatchRequestItem": {
      "type_name": "NullableRouteFilterRulesPatchRequestItem",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterRulesPostRequest": {
      "type_name": "NullableRouteFilterRulesPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFilterState": {
      "type_name": "NullableRouteFilterState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersBase": {
      "type_name": "NullableRouteFiltersBase",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersBaseType": {
      "type_name": "NullableRouteFiltersBaseType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersChange": {
      "type_name": "NullableRouteFiltersChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersChangeOperation": {
      "type_name": "NullableRouteFiltersChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersChangeType": {
      "type_name": "NullableRouteFiltersChangeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersData": {
      "type_name": "NullableRouteFiltersData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersDataNotMatchedRuleAction": {
      "type_name": "NullableRouteFiltersDataNotMatchedRuleAction",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersDataProject": {
      "type_name": "NullableRouteFiltersDataProject",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersPatchRequestItem": {
      "type_name": "NullableRouteFiltersPatchRequestItem",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersSearchBase": {
      "type_name": "NullableRouteFiltersSearchBase",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersSearchBaseFilter": {
      "type_name": "NullableRouteFiltersSearchBaseFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersSearchFilterItem": {
      "type_name": "NullableRouteFiltersSearchFilterItem",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersSearchFilterItemProperty": {
      "type_name": "NullableRouteFiltersSearchFilterItemProperty",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteFiltersSearchResponse": {
      "type_name": "NullableRouteFiltersSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntry": {
      "type_name": "NullableRouteTableEntry",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntryFilter": {
      "type_name": "NullableRouteTableEntryFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntryFilters": {
      "type_name": "NullableRouteTableEntryFilters",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntryOrFilter": {
      "type_name": "NullableRouteTableEntryOrFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntryProtocolType": {
      "type_name": "NullableRouteTableEntryProtocolType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntrySearchRequest": {
      "type_name": "NullableRouteTableEntrySearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntrySearchResponse": {
      "type_name": "NullableRouteTableEntrySearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntrySimpleExpression": {
      "type_name": "NullableRouteTableEntrySimpleExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntrySortBy": {
      "type_name": "NullableRouteTableEntrySortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntrySortCriteria": {
      "type_name": "NullableRouteTableEntrySortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntrySortDirection": {
      "type_name": "NullableRouteTableEntrySortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntryState": {
      "type_name": "NullableRouteTableEntryState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouteTableEntryType": {
      "type_name": "NullableRouteTableEntryType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouterActionsConnection": {
      "type_name": "NullableRouterActionsConnection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRouterPackageCode": {
      "type_name": "NullableRouterPackageCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolBFD": {
      "type_name": "NullableRoutingProtocolBFD",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolBGPData": {
      "type_name": "NullableRoutingProtocolBGPData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolBGPDataState": {
      "type_name": "NullableRoutingProtocolBGPDataState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolBGPType": {
      "type_name": "NullableRoutingProtocolBGPType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolBGPTypeType": {
      "type_name": "NullableRoutingProtocolBGPTypeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolBase": {
      "type_name": "NullableRoutingProtocolBase",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolChange": {
      "type_name": "NullableRoutingProtocolChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolChangeData": {
      "type_name": "NullableRoutingProtocolChangeData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolChangeDataResponse": {
      "type_name": "NullableRoutingProtocolChangeDataResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolChangeOperation": {
      "type_name": "NullableRoutingProtocolChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolChangeOperationOp": {
      "type_name": "NullableRoutingProtocolChangeOperationOp",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolChangeType": {
      "type_name": "NullableRoutingProtocolChangeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolData": {
      "type_name": "NullableRoutingProtocolData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolDirectData": {
      "type_name": "NullableRoutingProtocolDirectData",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolDirectType": {
      "type_name": "NullableRoutingProtocolDirectType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolDirectTypeType": {
      "type_name": "NullableRoutingProtocolDirectTypeType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableRoutingProtocolOperation": {
      "type_name": "NullableRoutingProtocolOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSearchDeploymentField": {
      "type_name": "NullableSearchDeploymentField",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSearchDirectConnect": {
      "type_name": "NullableSearchDirectConnect",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSearchDirectConnectState": {
      "type_name": "NullableSearchDirectConnectState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSearchDirectConnectType": {
      "type_name": "NullableSearchDirectConnectType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSearchExpression": {
      "type_name": "NullableSearchExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSearchFieldName": {
      "type_name": "NullableSearchFieldName",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSearchProviderField": {
      "type_name": "NullableSearchProviderField",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSearchRequest": {
      "type_name": "NullableSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSearchResponse": {
      "type_name": "NullableSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceMetro": {
      "type_name": "NullableServiceMetro",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceMetros": {
      "type_name": "NullableServiceMetros",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfile": {
      "type_name": "NullableServiceProfile",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileAccessPointCOLO": {
      "type_name": "NullableServiceProfileAccessPointCOLO",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileAccessPointCOLOType": {
      "type_name": "NullableServiceProfileAccessPointCOLOType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileAccessPointType": {
      "type_name": "NullableServiceProfileAccessPointType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileAccessPointTypeCOLO": {
      "type_name": "NullableServiceProfileAccessPointTypeCOLO",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileAccessPointTypeEnum": {
      "type_name": "NullableServiceProfileAccessPointTypeEnum",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileAccessPointTypeVD": {
      "type_name": "NullableServiceProfileAccessPointTypeVD",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileAccessPointVD": {
      "type_name": "NullableServiceProfileAccessPointVD",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileAccessPointVDType": {
      "type_name": "NullableServiceProfileAccessPointVDType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileAndFilter": {
      "type_name": "NullableServiceProfileAndFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileFilter": {
      "type_name": "NullableServiceProfileFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileLinkProtocolConfig": {
      "type_name": "NullableServiceProfileLinkProtocolConfig",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileLinkProtocolConfigEncapsulation": {
      "type_name": "NullableServiceProfileLinkProtocolConfigEncapsulation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileLinkProtocolConfigEncapsulationStrategy": {
      "type_name": "NullableServiceProfileLinkProtocolConfigEncapsulationStrategy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileMetadata": {
      "type_name": "NullableServiceProfileMetadata",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileRequest": {
      "type_name": "NullableServiceProfileRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileSearchRequest": {
      "type_name": "NullableServiceProfileSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileSimpleExpression": {
      "type_name": "NullableServiceProfileSimpleExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileSortBy": {
      "type_name": "NullableServiceProfileSortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileSortCriteria": {
      "type_name": "NullableServiceProfileSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileSortDirection": {
      "type_name": "NullableServiceProfileSortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileStateEnum": {
      "type_name": "NullableServiceProfileStateEnum",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileTypeEnum": {
      "type_name": "NullableServiceProfileTypeEnum",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfileVisibilityEnum": {
      "type_name": "NullableServiceProfileVisibilityEnum",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceProfiles": {
      "type_name": "NullableServiceProfiles",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceSearchResponse": {
      "type_name": "NullableServiceSearchResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceToken": {
      "type_name": "NullableServiceToken",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenActionRequest": {
      "type_name": "NullableServiceTokenActionRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenActions": {
      "type_name": "NullableServiceTokenActions",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenChangeOperation": {
      "type_name": "NullableServiceTokenChangeOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenConnection": {
      "type_name": "NullableServiceTokenConnection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenConnectionType": {
      "type_name": "NullableServiceTokenConnectionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenSearchExpression": {
      "type_name": "NullableServiceTokenSearchExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenSearchExpressionOperator": {
      "type_name": "NullableServiceTokenSearchExpressionOperator",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenSearchFieldName": {
      "type_name": "NullableServiceTokenSearchFieldName",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenSearchRequest": {
      "type_name": "NullableServiceTokenSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenSide": {
      "type_name": "NullableServiceTokenSide",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenState": {
      "type_name": "NullableServiceTokenState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokenType": {
      "type_name": "NullableServiceTokenType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServiceTokens": {
      "type_name": "NullableServiceTokens",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableServices": {
      "type_name": "NullableServices",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedAccount": {
      "type_name": "NullableSimplifiedAccount",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedLinkProtocol": {
      "type_name": "NullableSimplifiedLinkProtocol",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedLocation": {
      "type_name": "NullableSimplifiedLocation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedLocationWithoutIBX": {
      "type_name": "NullableSimplifiedLocationWithoutIBX",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedMetadataEntity": {
      "type_name": "NullableSimplifiedMetadataEntity",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedNetwork": {
      "type_name": "NullableSimplifiedNetwork",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedNetworkChange": {
      "type_name": "NullableSimplifiedNetworkChange",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedNotification": {
      "type_name": "NullableSimplifiedNotification",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedNotificationType": {
      "type_name": "NullableSimplifiedNotificationType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedPort": {
      "type_name": "NullableSimplifiedPort",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedServiceProfile": {
      "type_name": "NullableSimplifiedServiceProfile",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedTokenNetwork": {
      "type_name": "NullableSimplifiedTokenNetwork",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedTokenNetworkScope": {
      "type_name": "NullableSimplifiedTokenNetworkScope",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedTokenNetworkType": {
      "type_name": "NullableSimplifiedTokenNetworkType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedVirtualDevice": {
      "type_name": "NullableSimplifiedVirtualDevice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSimplifiedVirtualDeviceType": {
      "type_name": "NullableSimplifiedVirtualDeviceType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSortBy": {
      "type_name": "NullableSortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSortCriteria": {
      "type_name": "NullableSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSortCriteriaResponse": {
      "type_name": "NullableSortCriteriaResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSortDirection": {
      "type_name": "NullableSortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSortItem": {
      "type_name": "NullableSortItem",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSortItemDirection": {
      "type_name": "NullableSortItemDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSortItemProperty": {
      "type_name": "NullableSortItemProperty",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStatistics": {
      "type_name": "NullableStatistics",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStatisticsViewPoint": {
      "type_name": "NullableStatisticsViewPoint",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStream": {
      "type_name": "NullableStream",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAlertRule": {
      "type_name": "NullableStreamAlertRule",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAlertRuleState": {
      "type_name": "NullableStreamAlertRuleState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAlertRuleType": {
      "type_name": "NullableStreamAlertRuleType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAsset": {
      "type_name": "NullableStreamAsset",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetAttachmentStatus": {
      "type_name": "NullableStreamAssetAttachmentStatus",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetFilter": {
      "type_name": "NullableStreamAssetFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetFilters": {
      "type_name": "NullableStreamAssetFilters",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetOrFilter": {
      "type_name": "NullableStreamAssetOrFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetPutRequest": {
      "type_name": "NullableStreamAssetPutRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetSearchRequest": {
      "type_name": "NullableStreamAssetSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetSimpleExpression": {
      "type_name": "NullableStreamAssetSimpleExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetSortBy": {
      "type_name": "NullableStreamAssetSortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetSortCriteria": {
      "type_name": "NullableStreamAssetSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetSortDirection": {
      "type_name": "NullableStreamAssetSortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamAssetType": {
      "type_name": "NullableStreamAssetType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamFilter": {
      "type_name": "NullableStreamFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamFilterOrFilter": {
      "type_name": "NullableStreamFilterOrFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamFilterSimpleExpression": {
      "type_name": "NullableStreamFilterSimpleExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamPostRequest": {
      "type_name": "NullableStreamPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamPostRequestType": {
      "type_name": "NullableStreamPostRequestType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamPutRequest": {
      "type_name": "NullableStreamPutRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscription": {
      "type_name": "NullableStreamSubscription",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionFilter": {
      "type_name": "NullableStreamSubscriptionFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionOperation": {
      "type_name": "NullableStreamSubscriptionOperation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionOperationAdditionalInfo": {
      "type_name": "NullableStreamSubscriptionOperationAdditionalInfo",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionOperationErrors": {
      "type_name": "NullableStreamSubscriptionOperationErrors",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionPostRequest": {
      "type_name": "NullableStreamSubscriptionPostRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionPostRequestType": {
      "type_name": "NullableStreamSubscriptionPostRequestType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionPutRequest": {
      "type_name": "NullableStreamSubscriptionPutRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionSelector": {
      "type_name": "NullableStreamSubscriptionSelector",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionSink": {
      "type_name": "NullableStreamSubscriptionSink",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionSinkCredential": {
      "type_name": "NullableStreamSubscriptionSinkCredential",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionSinkCredentialType": {
      "type_name": "NullableStreamSubscriptionSinkCredentialType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionSinkSetting": {
      "type_name": "NullableStreamSubscriptionSinkSetting",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionSinkSettingFormat": {
      "type_name": "NullableStreamSubscriptionSinkSettingFormat",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionSinkType": {
      "type_name": "NullableStreamSubscriptionSinkType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionState": {
      "type_name": "NullableStreamSubscriptionState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableStreamSubscriptionType": {
      "type_name": "NullableStreamSubscriptionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableString": {
      "type_name": "NullableString",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubInterface": {
      "type_name": "NullableSubInterface",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubnet": {
      "type_name": "NullableSubnet",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubnetType": {
      "type_name": "NullableSubnetType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubscriptionAsset": {
      "type_name": "NullableSubscriptionAsset",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubscriptionEntitlementResponse": {
      "type_name": "NullableSubscriptionEntitlementResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubscriptionResponse": {
      "type_name": "NullableSubscriptionResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubscriptionResponseMarketplace": {
      "type_name": "NullableSubscriptionResponseMarketplace",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubscriptionResponseOfferType": {
      "type_name": "NullableSubscriptionResponseOfferType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubscriptionRouterPackageType": {
      "type_name": "NullableSubscriptionRouterPackageType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubscriptionRouterPackageTypeCode": {
      "type_name": "NullableSubscriptionRouterPackageTypeCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubscriptionState": {
      "type_name": "NullableSubscriptionState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableSubscriptionTrial": {
      "type_name": "NullableSubscriptionTrial",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTime": {
      "type_name": "NullableTime",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServiceFilter": {
      "type_name": "NullableTimeServiceFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServiceFilters": {
      "type_name": "NullableTimeServiceFilters",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServiceOrFilter": {
      "type_name": "NullableTimeServiceOrFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServicePrice": {
      "type_name": "NullableTimeServicePrice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServicePriceConnection": {
      "type_name": "NullableTimeServicePriceConnection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServicePriceConnectionASide": {
      "type_name": "NullableTimeServicePriceConnectionASide",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServicePriceConnectionAccessPoint": {
      "type_name": "NullableTimeServicePriceConnectionAccessPoint",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServiceSimpleExpression": {
      "type_name": "NullableTimeServiceSimpleExpression",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServiceSortBy": {
      "type_name": "NullableTimeServiceSortBy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServiceSortCriteria": {
      "type_name": "NullableTimeServiceSortCriteria",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServiceSortDirection": {
      "type_name": "NullableTimeServiceSortDirection",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTimeServicesSearchRequest": {
      "type_name": "NullableTimeServicesSearchRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableTopologyProperties": {
      "type_name": "NullableTopologyProperties",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVPC": {
      "type_name": "NullableVPC",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVPCState": {
      "type_name": "NullableVPCState",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVPCType": {
      "type_name": "NullableVPCType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableValidateConnectionResponse": {
      "type_name": "NullableValidateConnectionResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableValidateRequest": {
      "type_name": "NullableValidateRequest",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableValidateRequestFilter": {
      "type_name": "NullableValidateRequestFilter",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableValidateRequestFilterAnd": {
      "type_name": "NullableValidateRequestFilterAnd",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableValidateSubnetResponse": {
      "type_name": "NullableValidateSubnetResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableViewPoint": {
      "type_name": "NullableViewPoint",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionBridgePackageCode": {
      "type_name": "NullableVirtualConnectionBridgePackageCode",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPrice": {
      "type_name": "NullableVirtualConnectionPrice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceASide": {
      "type_name": "NullableVirtualConnectionPriceASide",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceASideAccessPoint": {
      "type_name": "NullableVirtualConnectionPriceASideAccessPoint",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceASideAccessPointPort": {
      "type_name": "NullableVirtualConnectionPriceASideAccessPointPort",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceASideAccessPointPortSettings": {
      "type_name": "NullableVirtualConnectionPriceASideAccessPointPortSettings",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceAccessPointType": {
      "type_name": "NullableVirtualConnectionPriceAccessPointType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceConnectionType": {
      "type_name": "NullableVirtualConnectionPriceConnectionType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceZSide": {
      "type_name": "NullableVirtualConnectionPriceZSide",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceZSideAccessPoint": {
      "type_name": "NullableVirtualConnectionPriceZSideAccessPoint",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceZSideAccessPointBridge": {
      "type_name": "NullableVirtualConnectionPriceZSideAccessPointBridge",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceZSideAccessPointBridgePackage": {
      "type_name": "NullableVirtualConnectionPriceZSideAccessPointBridgePackage",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionPriceZSideAccessPointProfile": {
      "type_name": "NullableVirtualConnectionPriceZSideAccessPointProfile",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionSide": {
      "type_name": "NullableVirtualConnectionSide",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionTimeServiceResponse": {
      "type_name": "NullableVirtualConnectionTimeServiceResponse",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualConnectionUuid": {
      "type_name": "NullableVirtualConnectionUuid",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualDevice": {
      "type_name": "NullableVirtualDevice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualDeviceInterface": {
      "type_name": "NullableVirtualDeviceInterface",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualDeviceInterfaceType": {
      "type_name": "NullableVirtualDeviceInterfaceType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualDeviceType": {
      "type_name": "NullableVirtualDeviceType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualNetwork": {
      "type_name": "NullableVirtualNetwork",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualPortConfiguration": {
      "type_name": "NullableVirtualPortConfiguration",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualPortLocation": {
      "type_name": "NullableVirtualPortLocation",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualPortPrice": {
      "type_name": "NullableVirtualPortPrice",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualPortRedundancy": {
      "type_name": "NullableVirtualPortRedundancy",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualPortServiceType": {
      "type_name": "NullableVirtualPortServiceType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVirtualPortType": {
      "type_name": "NullableVirtualPortType",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "NullableVpicInterface": {
      "type_name": "NullableVpicInterface",
      "fields": {
        "isSet": {
          "name": "isSet",
          "description": ""
        },
        "value": {
          "name": "value",
          "description": ""
        }
      }
    },
    "Operation": {
      "type_name": "Operation",
      "description": "Operation Operation object for router actions",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "BgpIpv4RoutesCount": {
          "name": "BgpIpv4RoutesCount",
          "description": "IPV4 route count",
          "json_tag": "bgpIpv4RoutesCount"
        },
        "BgpIpv6RoutesCount": {
          "name": "BgpIpv6RoutesCount",
          "description": "IPV6 route count",
          "json_tag": "bgpIpv6RoutesCount"
        }
      }
    },
    "OrchestratorProviders": {
      "type_name": "OrchestratorProviders",
      "description": "OrchestratorProviders - The OrchestratorProvider schema defines the structure for the orchestrator provider configuration. It includes details about the provider type and its specific configurations.",
      "fields": {
        "AWSProvider": {
          "name": "AWSProvider",
          "description": ""
        },
        "FabricProvider": {
          "name": "FabricProvider",
          "description": ""
        },
        "GCPProvider": {
          "name": "GCPProvider",
          "description": ""
        }
      }
    },
    "Order": {
      "type_name": "Order",
      "description": "Order struct for Order",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "BillingTier": {
          "name": "BillingTier",
          "description": "Billing tier for connection bandwidth",
          "json_tag": "billingTier"
        },
        "CustomerReferenceNumber": {
          "name": "CustomerReferenceNumber",
          "description": "Customer reference number",
          "json_tag": "customerReferenceNumber"
        },
        "OrderId": {
          "name": "OrderId",
          "description": "Order Identification",
          "json_tag": "orderId"
        },
        "OrderNumber": {
          "name": "OrderNumber",
          "description": "Order Reference Number",
          "json_tag": "orderNumber"
        },
        "PurchaseOrderNumber": {
          "name": "PurchaseOrderNumber",
          "description": "Purchase order number",
          "json_tag": "purchaseOrderNumber"
        },
        "TermLength": {
          "name": "TermLength",
          "description": "Term length in months, valid values are 1, 12, 24, 36 where 1 is the default value (for on-demand case).",
          "json_tag": "termLength"
        }
      }
    },
    "OutputStructuredPing": {
      "type_name": "OutputStructuredPing",
      "description": "OutputStructuredPing struct for OutputStructuredPing",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DataBytes": {
          "name": "DataBytes",
          "description": "",
          "json_tag": "dataBytes"
        },
        "DestinationIp": {
          "name": "DestinationIp",
          "description": "",
          "json_tag": "destinationIp"
        },
        "DestinationName": {
          "name": "DestinationName",
          "description": "",
          "json_tag": "destinationName"
        },
        "PacketsLossPercent": {
          "name": "PacketsLossPercent",
          "description": "",
          "json_tag": "packetsLossPercent"
        },
        "PacketsReceived": {
          "name": "PacketsReceived",
          "description": "",
          "json_tag": "packetsReceived"
        },
        "PacketsTransmitted": {
          "name": "PacketsTransmitted",
          "description": "",
          "json_tag": "packetsTransmitted"
        },
        "Responses": {
          "name": "Responses",
          "description": "",
          "json_tag": "responses"
        },
        "RttAvg": {
          "name": "RttAvg",
          "description": "",
          "json_tag": "rttAvg"
        },
        "RttMax": {
          "name": "RttMax",
          "description": "",
          "json_tag": "rttMax"
        },
        "RttMin": {
          "name": "RttMin",
          "description": "",
          "json_tag": "rttMin"
        },
        "RttStdDev": {
          "name": "RttStdDev",
          "description": "",
          "json_tag": "rttStdDev"
        }
      }
    },
    "OutputStructuredPingResponseItem": {
      "type_name": "OutputStructuredPingResponseItem",
      "description": "OutputStructuredPingResponseItem struct for OutputStructuredPingResponseItem",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bytes": {
          "name": "Bytes",
          "description": "",
          "json_tag": "bytes"
        },
        "IcmpSeq": {
          "name": "IcmpSeq",
          "description": "",
          "json_tag": "icmpSeq"
        },
        "Ip": {
          "name": "Ip",
          "description": "",
          "json_tag": "ip"
        },
        "Time": {
          "name": "Time",
          "description": "",
          "json_tag": "time"
        },
        "Ttl": {
          "name": "Ttl",
          "description": "",
          "json_tag": "ttl"
        }
      }
    },
    "OutputStructuredTraceroute": {
      "type_name": "OutputStructuredTraceroute",
      "description": "OutputStructuredTraceroute struct for OutputStructuredTraceroute",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DestinationIp": {
          "name": "DestinationIp",
          "description": "",
          "json_tag": "destinationIp"
        },
        "DestinationName": {
          "name": "DestinationName",
          "description": "",
          "json_tag": "destinationName"
        },
        "Hops": {
          "name": "Hops",
          "description": "",
          "json_tag": "hops"
        },
        "HopsMax": {
          "name": "HopsMax",
          "description": "",
          "json_tag": "hopsMax"
        },
        "PacketBytes": {
          "name": "PacketBytes",
          "description": "",
          "json_tag": "packetBytes"
        }
      }
    },
    "Package": {
      "type_name": "Package",
      "description": "Package Package settings for port",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Code": {
          "name": "Code",
          "description": "",
          "json_tag": "code"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "PackageChangeLog": {
      "type_name": "PackageChangeLog",
      "description": "PackageChangeLog Cloud Router package change log",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "",
          "json_tag": "createdDateTime"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "",
          "json_tag": "updatedDateTime"
        }
      }
    },
    "PackageResponse": {
      "type_name": "PackageResponse",
      "description": "PackageResponse struct for PackageResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "Pagination": {
      "type_name": "Pagination",
      "description": "Pagination Pagination response information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Limit": {
          "name": "Limit",
          "description": "Maximum number of search results returned per page. Number must be between 1 and 100, and the default is 20.",
          "json_tag": "limit"
        },
        "Next": {
          "name": "Next",
          "description": "URL relative to the next item in the response.",
          "json_tag": "next"
        },
        "Offset": {
          "name": "Offset",
          "description": "Index of the first item returned in the response. The default is 0.",
          "json_tag": "offset"
        },
        "Previous": {
          "name": "Previous",
          "description": "URL relative to the previous item in the response.",
          "json_tag": "previous"
        },
        "Total": {
          "name": "Total",
          "description": "Total number of elements returned.",
          "json_tag": "total"
        }
      }
    },
    "PaginationRequest": {
      "type_name": "PaginationRequest",
      "description": "PaginationRequest Pagination request information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Limit": {
          "name": "Limit",
          "description": "Number of elements to be requested per page. Number must be between 1 and 100, and the default is 20.",
          "json_tag": "limit"
        },
        "Offset": {
          "name": "Offset",
          "description": "Index of the first element.",
          "json_tag": "offset"
        }
      }
    },
    "PhysicalPort": {
      "type_name": "PhysicalPort",
      "description": "PhysicalPort Physical Port specification",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "Physical Port additional information",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DemarcationPoint": {
          "name": "DemarcationPoint",
          "description": "",
          "json_tag": "demarcationPoint"
        },
        "Href": {
          "name": "Href",
          "description": "Equinix assigned response attribute for an absolute URL that is the subject of the link's context.",
          "json_tag": "href"
        },
        "Id": {
          "name": "Id",
          "description": "Equinix assigned response attribute for Physical Port Id\nDeprecated",
          "json_tag": "id"
        },
        "Interface": {
          "name": "Interface",
          "description": "",
          "json_tag": "interface"
        },
        "InterfaceSpeed": {
          "name": "InterfaceSpeed",
          "description": "Physical Port Speed in Mbps",
          "json_tag": "interfaceSpeed"
        },
        "InterfaceType": {
          "name": "InterfaceType",
          "description": "Physical Port Interface Type",
          "json_tag": "interfaceType"
        },
        "Loas": {
          "name": "Loas",
          "description": "Port Loas",
          "json_tag": "loas"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Notification preferences",
          "json_tag": "notifications"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Settings": {
          "name": "Settings",
          "description": "",
          "json_tag": "settings"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Tether": {
          "name": "Tether",
          "description": "",
          "json_tag": "tether"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix assigned response attribute for physical port identifier",
          "json_tag": "uuid"
        }
      }
    },
    "PhysicalPortSettings": {
      "type_name": "PhysicalPortSettings",
      "description": "PhysicalPortSettings Physical Port configuration settings",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ErrorMessage": {
          "name": "ErrorMessage",
          "description": "",
          "json_tag": "errorMessage"
        },
        "PackageType": {
          "name": "PackageType",
          "description": "Deprecated",
          "json_tag": "packageType"
        }
      }
    },
    "Port": {
      "type_name": "Port",
      "description": "Port Port specification",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "Port additional information",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Asn": {
          "name": "Asn",
          "description": "Port ASN",
          "json_tag": "asn"
        },
        "AvailableBandwidth": {
          "name": "AvailableBandwidth",
          "description": "Equinix assigned response attribute for Port available bandwidth in Mbps",
          "json_tag": "availableBandwidth"
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Equinix assigned response attribute for Port bandwidth in Mbps\nDeprecated",
          "json_tag": "bandwidth"
        },
        "BmmrType": {
          "name": "BmmrType",
          "description": "",
          "json_tag": "bmmrType"
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "ConnectionsCount": {
          "name": "ConnectionsCount",
          "description": "Equinix assigned response attribute for Connection count",
          "json_tag": "connectionsCount"
        },
        "ConnectivitySourceType": {
          "name": "ConnectivitySourceType",
          "description": "",
          "json_tag": "connectivitySourceType"
        },
        "DemarcationPoint": {
          "name": "DemarcationPoint",
          "description": "",
          "json_tag": "demarcationPoint"
        },
        "DemarcationPointIbx": {
          "name": "DemarcationPointIbx",
          "description": "A-side/Equinix ibx",
          "json_tag": "demarcationPointIbx"
        },
        "Description": {
          "name": "Description",
          "description": "Equinix assigned response attribute for Port description",
          "json_tag": "description"
        },
        "Device": {
          "name": "Device",
          "description": "",
          "json_tag": "device"
        },
        "Encapsulation": {
          "name": "Encapsulation",
          "description": "",
          "json_tag": "encapsulation"
        },
        "EndCustomer": {
          "name": "EndCustomer",
          "description": "",
          "json_tag": "endCustomer"
        },
        "Href": {
          "name": "Href",
          "description": "Equinix assigned response attribute for an absolute URL that is the subject of the link's context.",
          "json_tag": "href"
        },
        "Id": {
          "name": "Id",
          "description": "Equinix assigned response attribute for Port Id",
          "json_tag": "id"
        },
        "Interface": {
          "name": "Interface",
          "description": "",
          "json_tag": "interface"
        },
        "Lag": {
          "name": "Lag",
          "description": "",
          "json_tag": "lag"
        },
        "LagEnabled": {
          "name": "LagEnabled",
          "description": "If LAG enabled",
          "json_tag": "lagEnabled"
        },
        "Loas": {
          "name": "Loas",
          "description": "Port Loas",
          "json_tag": "loas"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Name": {
          "name": "Name",
          "description": "Equinix assigned response attribute for Port name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Notification preferences",
          "json_tag": "notifications"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "PhysicalPortQuantity": {
          "name": "PhysicalPortQuantity",
          "description": "Number of physical ports",
          "json_tag": "physicalPortQuantity"
        },
        "PhysicalPorts": {
          "name": "PhysicalPorts",
          "description": "Physical ports that implement this port",
          "json_tag": "physicalPorts"
        },
        "PhysicalPortsCount": {
          "name": "PhysicalPortsCount",
          "description": "",
          "json_tag": "physicalPortsCount"
        },
        "PhysicalPortsSpeed": {
          "name": "PhysicalPortsSpeed",
          "description": "Physical Ports Speed in Mbps",
          "json_tag": "physicalPortsSpeed"
        },
        "PhysicalPortsType": {
          "name": "PhysicalPortsType",
          "description": "",
          "json_tag": "physicalPortsType"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "ServiceType": {
          "name": "ServiceType",
          "description": "Deprecated",
          "json_tag": "serviceType"
        },
        "Settings": {
          "name": "Settings",
          "description": "",
          "json_tag": "settings"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "TetherIbx": {
          "name": "TetherIbx",
          "description": "z-side/Equinix ibx",
          "json_tag": "tetherIbx"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UsedBandwidth": {
          "name": "UsedBandwidth",
          "description": "Equinix assigned response attribute for Port used bandwidth in Mbps",
          "json_tag": "usedBandwidth"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix assigned response attribute for  port identifier",
          "json_tag": "uuid"
        }
      }
    },
    "PortAdditionalInfo": {
      "type_name": "PortAdditionalInfo",
      "description": "PortAdditionalInfo Additional information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Key": {
          "name": "Key",
          "description": "Key",
          "json_tag": "key"
        },
        "Value": {
          "name": "Value",
          "description": "Value",
          "json_tag": "value"
        }
      }
    },
    "PortChange": {
      "type_name": "PortChange",
      "description": "PortChange Current state of latest port change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Set when change flow starts",
          "json_tag": "createdDateTime"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Information": {
          "name": "Information",
          "description": "Additional information",
          "json_tag": "information"
        },
        "Status": {
          "name": "Status",
          "description": "",
          "json_tag": "status"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Set when change object is updated",
          "json_tag": "updatedDateTime"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "PortChangeOperation": {
      "type_name": "PortChangeOperation",
      "description": "PortChangeOperation Port change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "Handy shortcut for operation name",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "PortDemarcationPoint": {
      "type_name": "PortDemarcationPoint",
      "description": "PortDemarcationPoint Customer physical Port",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CabinetUniqueSpaceId": {
          "name": "CabinetUniqueSpaceId",
          "description": "Port cabinet unique space id",
          "json_tag": "cabinetUniqueSpaceId"
        },
        "CageUniqueSpaceId": {
          "name": "CageUniqueSpaceId",
          "description": "Port cage unique space id",
          "json_tag": "cageUniqueSpaceId"
        },
        "ConnectorType": {
          "name": "ConnectorType",
          "description": "Port connector type",
          "json_tag": "connectorType"
        },
        "Ibx": {
          "name": "Ibx",
          "description": "Port ibx identifier",
          "json_tag": "ibx"
        },
        "PatchPanel": {
          "name": "PatchPanel",
          "description": "Port patch panel",
          "json_tag": "patchPanel"
        },
        "PatchPanelName": {
          "name": "PatchPanelName",
          "description": "Port patch panel\nDeprecated",
          "json_tag": "patchPanelName"
        },
        "PatchPanelPortA": {
          "name": "PatchPanelPortA",
          "description": "Port patch panel port A",
          "json_tag": "patchPanelPortA"
        },
        "PatchPanelPortB": {
          "name": "PatchPanelPortB",
          "description": "Port patch panel port B",
          "json_tag": "patchPanelPortB"
        }
      }
    },
    "PortDevice": {
      "type_name": "PortDevice",
      "description": "PortDevice Port device",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Name": {
          "name": "Name",
          "description": "Device name",
          "json_tag": "name"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "VcBandwidthMax": {
          "name": "VcBandwidthMax",
          "description": "Maximum bandwidth allowed for connection.",
          "json_tag": "vcBandwidthMax"
        }
      }
    },
    "PortDeviceRedundancy": {
      "type_name": "PortDeviceRedundancy",
      "description": "PortDeviceRedundancy Device redundancy",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Group": {
          "name": "Group",
          "description": "Device redundancy group",
          "json_tag": "group"
        },
        "Priority": {
          "name": "Priority",
          "description": "",
          "json_tag": "priority"
        }
      }
    },
    "PortEncapsulation": {
      "type_name": "PortEncapsulation",
      "description": "PortEncapsulation Port encapsulation configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "TagProtocolId": {
          "name": "TagProtocolId",
          "description": "Port encapsulation tag protocol identifier",
          "json_tag": "tagProtocolId"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "PortExpression": {
      "type_name": "PortExpression",
      "description": "PortExpression struct for PortExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        },
        "Operator": {
          "name": "Operator",
          "description": "",
          "json_tag": "operator"
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "PortInterface": {
      "type_name": "PortInterface",
      "description": "PortInterface Port interface",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Type": {
          "name": "Type",
          "description": "Port interface type",
          "json_tag": "type"
        }
      }
    },
    "PortLag": {
      "type_name": "PortLag",
      "description": "PortLag Port Lag",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Enabled": {
          "name": "Enabled",
          "description": "enabled\nDeprecated",
          "json_tag": "enabled"
        },
        "Id": {
          "name": "Id",
          "description": "id",
          "json_tag": "id"
        },
        "MemberStatus": {
          "name": "MemberStatus",
          "description": "member status",
          "json_tag": "memberStatus"
        },
        "Name": {
          "name": "Name",
          "description": "name",
          "json_tag": "name"
        }
      }
    },
    "PortLoa": {
      "type_name": "PortLoa",
      "description": "PortLoa Port Loas",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Type": {
          "name": "Type",
          "description": "Loa type",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "uuid",
          "json_tag": "uuid"
        }
      }
    },
    "PortNotification": {
      "type_name": "PortNotification",
      "description": "PortNotification struct for PortNotification",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "RegisteredUsers": {
          "name": "RegisteredUsers",
          "description": "Array of registered users",
          "json_tag": "registeredUsers"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "PortOperation": {
      "type_name": "PortOperation",
      "description": "PortOperation Operational specifications for ports.",
      "fields": {
        "AccessVCCount": {
          "name": "AccessVCCount",
          "description": "Total number of connections.",
          "json_tag": "accessVCCount"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ConnectionCount": {
          "name": "ConnectionCount",
          "description": "Total number of connections.",
          "json_tag": "connectionCount"
        },
        "EvplVCCount": {
          "name": "EvplVCCount",
          "description": "Total number of connections.",
          "json_tag": "evplVCCount"
        },
        "FgVCCount": {
          "name": "FgVCCount",
          "description": "Total number of connections.",
          "json_tag": "fgVCCount"
        },
        "OpStatusChangedAt": {
          "name": "OpStatusChangedAt",
          "description": "Date and time at which port availability changed.",
          "json_tag": "opStatusChangedAt"
        },
        "OperationalStatus": {
          "name": "OperationalStatus",
          "description": "",
          "json_tag": "operationalStatus"
        }
      }
    },
    "PortOrder": {
      "type_name": "PortOrder",
      "description": "PortOrder struct for PortOrder",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CustomerReferenceId": {
          "name": "CustomerReferenceId",
          "description": "Customer order reference Id",
          "json_tag": "customerReferenceId"
        },
        "OrderId": {
          "name": "OrderId",
          "description": "Order Identification",
          "json_tag": "orderId"
        },
        "OrderNumber": {
          "name": "OrderNumber",
          "description": "Order Reference Number",
          "json_tag": "orderNumber"
        },
        "PurchaseOrder": {
          "name": "PurchaseOrder",
          "description": "",
          "json_tag": "purchaseOrder"
        },
        "Signature": {
          "name": "Signature",
          "description": "",
          "json_tag": "signature"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned order identifier, this is a derived response atrribute\nDeprecated",
          "json_tag": "uuid"
        }
      }
    },
    "PortOrderPurchaseOrder": {
      "type_name": "PortOrderPurchaseOrder",
      "description": "PortOrderPurchaseOrder purchase order",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Amount": {
          "name": "Amount",
          "description": "purchase order amount",
          "json_tag": "amount"
        },
        "AttachmentId": {
          "name": "AttachmentId",
          "description": "",
          "json_tag": "attachmentId"
        },
        "EndDate": {
          "name": "EndDate",
          "description": "",
          "json_tag": "endDate"
        },
        "Number": {
          "name": "Number",
          "description": "purchase order number",
          "json_tag": "number"
        },
        "SelectionType": {
          "name": "SelectionType",
          "description": "Deprecated",
          "json_tag": "selectionType"
        },
        "StartDate": {
          "name": "StartDate",
          "description": "",
          "json_tag": "startDate"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "PortOrderSignature": {
      "type_name": "PortOrderSignature",
      "description": "PortOrderSignature Port signature Type",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Delegate": {
          "name": "Delegate",
          "description": "",
          "json_tag": "delegate"
        },
        "Signatory": {
          "name": "Signatory",
          "description": "",
          "json_tag": "signatory"
        }
      }
    },
    "PortOrderSignatureDelegate": {
      "type_name": "PortOrderSignatureDelegate",
      "description": "PortOrderSignatureDelegate delegate oder details",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Email": {
          "name": "Email",
          "description": "email of delegate",
          "json_tag": "email"
        },
        "FirstName": {
          "name": "FirstName",
          "description": "name of delegate",
          "json_tag": "firstName"
        },
        "LastName": {
          "name": "LastName",
          "description": "last Name of delegate",
          "json_tag": "lastName"
        }
      }
    },
    "PortRedundancy": {
      "type_name": "PortRedundancy",
      "description": "PortRedundancy Port redundancy configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Access point redundancy",
          "json_tag": "enabled"
        },
        "Group": {
          "name": "Group",
          "description": "Port UUID of respective primary port\nDeprecated",
          "json_tag": "group"
        },
        "Priority": {
          "name": "Priority",
          "description": "",
          "json_tag": "priority"
        }
      }
    },
    "PortRequest": {
      "type_name": "PortRequest",
      "description": "PortRequest PortRequest is the Request Object for creating single and bulk fabric ports",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "Port additional information",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Asn": {
          "name": "Asn",
          "description": "Port ASN",
          "json_tag": "asn"
        },
        "AvailableBandwidth": {
          "name": "AvailableBandwidth",
          "description": "Equinix assigned response attribute for Port available bandwidth in Mbps",
          "json_tag": "availableBandwidth"
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Equinix assigned response attribute for Port bandwidth in Mbps\nDeprecated",
          "json_tag": "bandwidth"
        },
        "BmmrType": {
          "name": "BmmrType",
          "description": "",
          "json_tag": "bmmrType"
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "ConnectionsCount": {
          "name": "ConnectionsCount",
          "description": "Equinix assigned response attribute for Connection count",
          "json_tag": "connectionsCount"
        },
        "ConnectivitySourceType": {
          "name": "ConnectivitySourceType",
          "description": "",
          "json_tag": "connectivitySourceType"
        },
        "DemarcationPoint": {
          "name": "DemarcationPoint",
          "description": "",
          "json_tag": "demarcationPoint"
        },
        "DemarcationPointIbx": {
          "name": "DemarcationPointIbx",
          "description": "A-side/Equinix ibx",
          "json_tag": "demarcationPointIbx"
        },
        "Description": {
          "name": "Description",
          "description": "Equinix assigned response attribute for Port description",
          "json_tag": "description"
        },
        "Device": {
          "name": "Device",
          "description": "",
          "json_tag": "device"
        },
        "Encapsulation": {
          "name": "Encapsulation",
          "description": "",
          "json_tag": "encapsulation"
        },
        "EndCustomer": {
          "name": "EndCustomer",
          "description": "",
          "json_tag": "endCustomer"
        },
        "Href": {
          "name": "Href",
          "description": "Equinix assigned response attribute for an absolute URL that is the subject of the link's context.",
          "json_tag": "href"
        },
        "Id": {
          "name": "Id",
          "description": "Equinix assigned response attribute for Port Id",
          "json_tag": "id"
        },
        "Interface": {
          "name": "Interface",
          "description": "",
          "json_tag": "interface"
        },
        "Lag": {
          "name": "Lag",
          "description": "",
          "json_tag": "lag"
        },
        "LagEnabled": {
          "name": "LagEnabled",
          "description": "If LAG enabled",
          "json_tag": "lagEnabled"
        },
        "Loas": {
          "name": "Loas",
          "description": "Port Loas",
          "json_tag": "loas"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Name": {
          "name": "Name",
          "description": "Equinix assigned response attribute for Port name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Notification preferences",
          "json_tag": "notifications"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "PhysicalPortQuantity": {
          "name": "PhysicalPortQuantity",
          "description": "Number of physical ports",
          "json_tag": "physicalPortQuantity"
        },
        "PhysicalPorts": {
          "name": "PhysicalPorts",
          "description": "Physical ports that implement this port",
          "json_tag": "physicalPorts"
        },
        "PhysicalPortsCount": {
          "name": "PhysicalPortsCount",
          "description": "",
          "json_tag": "physicalPortsCount"
        },
        "PhysicalPortsSpeed": {
          "name": "PhysicalPortsSpeed",
          "description": "Physical Ports Speed in Mbps",
          "json_tag": "physicalPortsSpeed"
        },
        "PhysicalPortsType": {
          "name": "PhysicalPortsType",
          "description": "",
          "json_tag": "physicalPortsType"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "ServiceType": {
          "name": "ServiceType",
          "description": "Deprecated",
          "json_tag": "serviceType"
        },
        "Settings": {
          "name": "Settings",
          "description": "",
          "json_tag": "settings"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "TetherIbx": {
          "name": "TetherIbx",
          "description": "z-side/Equinix ibx",
          "json_tag": "tetherIbx"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UsedBandwidth": {
          "name": "UsedBandwidth",
          "description": "Equinix assigned response attribute for Port used bandwidth in Mbps",
          "json_tag": "usedBandwidth"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix assigned response attribute for  port identifier",
          "json_tag": "uuid"
        }
      }
    },
    "PortSettings": {
      "type_name": "PortSettings",
      "description": "PortSettings Port configuration settings",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Buyout": {
          "name": "Buyout",
          "description": "Deprecated",
          "json_tag": "buyout"
        },
        "Layer3Enabled": {
          "name": "Layer3Enabled",
          "description": "Deprecated",
          "json_tag": "layer3Enabled"
        },
        "PackageType": {
          "name": "PackageType",
          "description": "Deprecated",
          "json_tag": "packageType"
        },
        "PlaceVcOrderPermission": {
          "name": "PlaceVcOrderPermission",
          "description": "Deprecated",
          "json_tag": "placeVcOrderPermission"
        },
        "SharedPortProduct": {
          "name": "SharedPortProduct",
          "description": "",
          "json_tag": "sharedPortProduct"
        },
        "SharedPortType": {
          "name": "SharedPortType",
          "description": "",
          "json_tag": "sharedPortType"
        },
        "ViewPortPermission": {
          "name": "ViewPortPermission",
          "description": "Deprecated",
          "json_tag": "viewPortPermission"
        }
      }
    },
    "PortSortCriteria": {
      "type_name": "PortSortCriteria",
      "description": "PortSortCriteria struct for PortSortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "PortTether": {
      "type_name": "PortTether",
      "description": "PortTether Port physical connection",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CabinetNumber": {
          "name": "CabinetNumber",
          "description": "Port cabinet number",
          "json_tag": "cabinetNumber"
        },
        "CrossConnectId": {
          "name": "CrossConnectId",
          "description": "Port cross connect identifier",
          "json_tag": "crossConnectId"
        },
        "Ibx": {
          "name": "Ibx",
          "description": "z-side/Equinix IBX",
          "json_tag": "ibx"
        },
        "PatchPanel": {
          "name": "PatchPanel",
          "description": "Port patch panel",
          "json_tag": "patchPanel"
        },
        "PatchPanelPortA": {
          "name": "PatchPanelPortA",
          "description": "Port patch panel port A",
          "json_tag": "patchPanelPortA"
        },
        "PatchPanelPortB": {
          "name": "PatchPanelPortB",
          "description": "Port patch panel port B",
          "json_tag": "patchPanelPortB"
        },
        "SystemName": {
          "name": "SystemName",
          "description": "Port system name",
          "json_tag": "systemName"
        }
      }
    },
    "PortV4SearchRequest": {
      "type_name": "PortV4SearchRequest",
      "description": "PortV4SearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "PrecisionTimeChangeOperation": {
      "type_name": "PrecisionTimeChangeOperation",
      "description": "PrecisionTimeChangeOperation Fabric Precision Timing change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "PrecisionTimeOrder": {
      "type_name": "PrecisionTimeOrder",
      "description": "PrecisionTimeOrder Precision Time Order",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CustomerReferenceNumber": {
          "name": "CustomerReferenceNumber",
          "description": "Customer reference number",
          "json_tag": "customerReferenceNumber"
        },
        "OrderNumber": {
          "name": "OrderNumber",
          "description": "Order Reference Number",
          "json_tag": "orderNumber"
        },
        "PurchaseOrderNumber": {
          "name": "PurchaseOrderNumber",
          "description": "Purchase order number",
          "json_tag": "purchaseOrderNumber"
        }
      }
    },
    "PrecisionTimePackagePostResponse": {
      "type_name": "PrecisionTimePackagePostResponse",
      "description": "PrecisionTimePackagePostResponse struct for PrecisionTimePackagePostResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Code": {
          "name": "Code",
          "description": "",
          "json_tag": "code"
        },
        "Href": {
          "name": "Href",
          "description": "",
          "json_tag": "href"
        }
      }
    },
    "PrecisionTimePackageRequest": {
      "type_name": "PrecisionTimePackageRequest",
      "description": "PrecisionTimePackageRequest Precision Time Service Level Request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Code": {
          "name": "Code",
          "description": "",
          "json_tag": "code"
        }
      }
    },
    "PrecisionTimePackageResponse": {
      "type_name": "PrecisionTimePackageResponse",
      "description": "PrecisionTimePackageResponse EPT Service Package Information",
      "fields": {
        "AccuracySla": {
          "name": "AccuracySla",
          "description": "Accuracy SLA for the package code, -1 value denotes the accuracySla is not published.",
          "json_tag": "accuracySla"
        },
        "AccuracySlaMax": {
          "name": "AccuracySlaMax",
          "description": "Typical maximum Accuracy for the package code.",
          "json_tag": "accuracySlaMax"
        },
        "AccuracySlaMin": {
          "name": "AccuracySlaMin",
          "description": "Typical minimum Accuracy for the package code.",
          "json_tag": "accuracySlaMin"
        },
        "AccuracySlaUnit": {
          "name": "AccuracySlaUnit",
          "description": "Accuracy SLA unit.",
          "json_tag": "accuracySlaUnit"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Connection bandwidth in Mbps.",
          "json_tag": "bandwidth"
        },
        "Changelog": {
          "name": "Changelog",
          "description": "",
          "json_tag": "changelog"
        },
        "ClientsPerSecondMax": {
          "name": "ClientsPerSecondMax",
          "description": "Max. number of clients that can be synchronized per second at a packet rate of 1 per second.",
          "json_tag": "clientsPerSecondMax"
        },
        "Code": {
          "name": "Code",
          "description": "",
          "json_tag": "code"
        },
        "Href": {
          "name": "Href",
          "description": "",
          "json_tag": "href"
        },
        "MultiSubnetSupported": {
          "name": "MultiSubnetSupported",
          "description": "Is Multiple subnet supported for the package code.",
          "json_tag": "multiSubnetSupported"
        },
        "RedundancySupported": {
          "name": "RedundancySupported",
          "description": "Is Redundant virtual connection supported for the package code.",
          "json_tag": "redundancySupported"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "PrecisionTimePrice": {
      "type_name": "PrecisionTimePrice",
      "description": "PrecisionTimePrice Precision Time Price",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Charges": {
          "name": "Charges",
          "description": "",
          "json_tag": "charges"
        },
        "Currency": {
          "name": "Currency",
          "description": "offering price currency",
          "json_tag": "currency"
        }
      }
    },
    "PrecisionTimeServiceConnectionsResponse": {
      "type_name": "PrecisionTimeServiceConnectionsResponse",
      "description": "PrecisionTimeServiceConnectionsResponse EPT service instance's L2 connections",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "PrecisionTimeServicePackagesResponse": {
      "type_name": "PrecisionTimeServicePackagesResponse",
      "description": "PrecisionTimeServicePackagesResponse Precision Packages",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "PrecisionTimeServiceRequest": {
      "type_name": "PrecisionTimeServiceRequest",
      "description": "PrecisionTimeServiceRequest Create Precision Time Service Request Schema.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Connections": {
          "name": "Connections",
          "description": "",
          "json_tag": "connections"
        },
        "Ipv4": {
          "name": "Ipv4",
          "description": "",
          "json_tag": "ipv4"
        },
        "Name": {
          "name": "Name",
          "description": "Precision Time Service name.",
          "json_tag": "name"
        },
        "NtpAdvancedConfiguration": {
          "name": "NtpAdvancedConfiguration",
          "description": "NTP Advanced configuration - MD5 Authentication.",
          "json_tag": "ntpAdvancedConfiguration"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "PtpAdvancedConfiguration": {
          "name": "PtpAdvancedConfiguration",
          "description": "",
          "json_tag": "ptpAdvancedConfiguration"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "PrecisionTimeServiceResponse": {
      "type_name": "PrecisionTimeServiceResponse",
      "description": "PrecisionTimeServiceResponse Precision Time Service Response Schema.",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Connections": {
          "name": "Connections",
          "description": "Fabric Connections associated with Precision Time Service.",
          "json_tag": "connections"
        },
        "Href": {
          "name": "Href",
          "description": "Precision Time Service URI.",
          "json_tag": "href"
        },
        "Ipv4": {
          "name": "Ipv4",
          "description": "",
          "json_tag": "ipv4"
        },
        "Name": {
          "name": "Name",
          "description": "Precision Time Service Name.",
          "json_tag": "name"
        },
        "NtpAdvancedConfiguration": {
          "name": "NtpAdvancedConfiguration",
          "description": "NTP Advanced configuration - MD5 Authentication.",
          "json_tag": "ntpAdvancedConfiguration"
        },
        "Order": {
          "name": "Order",
          "description": "",
          "json_tag": "order"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "Pricing": {
          "name": "Pricing",
          "description": "",
          "json_tag": "pricing"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "PtpAdvancedConfiguration": {
          "name": "PtpAdvancedConfiguration",
          "description": "",
          "json_tag": "ptpAdvancedConfiguration"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Precision Time Service UUID.",
          "json_tag": "uuid"
        }
      }
    },
    "Price": {
      "type_name": "Price",
      "description": "Price struct for Price",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Catgory": {
          "name": "Catgory",
          "description": "",
          "json_tag": "catgory"
        },
        "Charges": {
          "name": "Charges",
          "description": "",
          "json_tag": "charges"
        },
        "Code": {
          "name": "Code",
          "description": "Equinix-assigned product code",
          "json_tag": "code"
        },
        "Connection": {
          "name": "Connection",
          "description": "",
          "json_tag": "connection"
        },
        "Currency": {
          "name": "Currency",
          "description": "Product offering price currency",
          "json_tag": "currency"
        },
        "Description": {
          "name": "Description",
          "description": "Product description",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "An absolute URL that returns specified pricing data",
          "json_tag": "href"
        },
        "IpBlock": {
          "name": "IpBlock",
          "description": "",
          "json_tag": "ipBlock"
        },
        "Name": {
          "name": "Name",
          "description": "Full product name",
          "json_tag": "name"
        },
        "Port": {
          "name": "Port",
          "description": "",
          "json_tag": "port"
        },
        "Router": {
          "name": "Router",
          "description": "",
          "json_tag": "router"
        },
        "TermLength": {
          "name": "TermLength",
          "description": "",
          "json_tag": "termLength"
        },
        "TimeService": {
          "name": "TimeService",
          "description": "",
          "json_tag": "timeService"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "PriceCharge": {
      "type_name": "PriceCharge",
      "description": "PriceCharge Price  Charge",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Price": {
          "name": "Price",
          "description": "Offering price",
          "json_tag": "price"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "PriceError": {
      "type_name": "PriceError",
      "description": "PriceError Error with details",
      "fields": {
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CorrelationId": {
          "name": "CorrelationId",
          "description": "",
          "json_tag": "correlationId"
        },
        "Details": {
          "name": "Details",
          "description": "",
          "json_tag": "details"
        },
        "ErrorCode": {
          "name": "ErrorCode",
          "description": "",
          "json_tag": "errorCode"
        },
        "ErrorMessage": {
          "name": "ErrorMessage",
          "description": "",
          "json_tag": "errorMessage"
        },
        "Help": {
          "name": "Help",
          "description": "",
          "json_tag": "help"
        }
      }
    },
    "PriceErrorAdditionalInfo": {
      "type_name": "PriceErrorAdditionalInfo",
      "description": "PriceErrorAdditionalInfo struct for PriceErrorAdditionalInfo",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Reason": {
          "name": "Reason",
          "description": "",
          "json_tag": "reason"
        }
      }
    },
    "PriceLocation": {
      "type_name": "PriceLocation",
      "description": "PriceLocation struct for PriceLocation",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Ibx": {
          "name": "Ibx",
          "description": "",
          "json_tag": "ibx"
        },
        "MetroCode": {
          "name": "MetroCode",
          "description": "",
          "json_tag": "metroCode"
        }
      }
    },
    "PriceSearchResponse": {
      "type_name": "PriceSearchResponse",
      "description": "PriceSearchResponse struct for PriceSearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "ProcessStep": {
      "type_name": "ProcessStep",
      "description": "ProcessStep Definition of customized step while making connection",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Service profile custom step description",
          "json_tag": "description"
        },
        "SubTitle": {
          "name": "SubTitle",
          "description": "Service profile custom step sub title",
          "json_tag": "subTitle"
        },
        "Title": {
          "name": "Title",
          "description": "Service profile custom step title",
          "json_tag": "title"
        }
      }
    },
    "Project": {
      "type_name": "Project",
      "description": "Project struct for Project",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ProjectId": {
          "name": "ProjectId",
          "description": "Subscriber-assigned project ID",
          "json_tag": "projectId"
        }
      }
    },
    "ProviderExpression": {
      "type_name": "ProviderExpression",
      "description": "ProviderExpression struct for ProviderExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "ProviderResponse": {
      "type_name": "ProviderResponse",
      "description": "ProviderResponse - Describes the response structure for different orchestrator provider types, including their specific configuration details.",
      "fields": {
        "AWSProviderResponse": {
          "name": "AWSProviderResponse",
          "description": ""
        },
        "FabricProviderResponse": {
          "name": "FabricProviderResponse",
          "description": ""
        },
        "GCPProviderResponse": {
          "name": "GCPProviderResponse",
          "description": ""
        }
      }
    },
    "ProviderSearchExpressions": {
      "type_name": "ProviderSearchExpressions",
      "description": "ProviderSearchExpressions struct for ProviderSearchExpressions",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "ProviderSearchRequest": {
      "type_name": "ProviderSearchRequest",
      "description": "ProviderSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        }
      }
    },
    "ProviderSearchResponse": {
      "type_name": "ProviderSearchResponse",
      "description": "ProviderSearchResponse struct for ProviderSearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "ProvidersSearchResponse": {
      "type_name": "ProvidersSearchResponse",
      "description": "ProvidersSearchResponse - struct for ProvidersSearchResponse",
      "fields": {
        "SearchDirectConnect": {
          "name": "SearchDirectConnect",
          "description": ""
        },
        "Subnet": {
          "name": "Subnet",
          "description": ""
        },
        "VPC": {
          "name": "VPC",
          "description": ""
        }
      }
    },
    "PtpAdvanceConfiguration": {
      "type_name": "PtpAdvanceConfiguration",
      "description": "PtpAdvanceConfiguration PTP Advanced Configuration.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Domain": {
          "name": "Domain",
          "description": "The PTP domain value.",
          "json_tag": "domain"
        },
        "GrantTime": {
          "name": "GrantTime",
          "description": "Unicast Grant Time in seconds. For Multicast and Hybrid transport modes, grant time defaults to 300 seconds. For Unicast mode, grant time can be between 30 to 7200.",
          "json_tag": "grantTime"
        },
        "LogAnnounceInterval": {
          "name": "LogAnnounceInterval",
          "description": "",
          "json_tag": "logAnnounceInterval"
        },
        "LogDelayReqInterval": {
          "name": "LogDelayReqInterval",
          "description": "",
          "json_tag": "logDelayReqInterval"
        },
        "LogSyncInterval": {
          "name": "LogSyncInterval",
          "description": "",
          "json_tag": "logSyncInterval"
        },
        "Priority1": {
          "name": "Priority1",
          "description": "The priority1 value determines the best primary clock, Lower value indicates higher priority.",
          "json_tag": "priority1"
        },
        "Priority2": {
          "name": "Priority2",
          "description": "The priority2 value differentiates and prioritizes the primary clock to avoid confusion when priority1-value is the same for different primary clocks in a network.",
          "json_tag": "priority2"
        },
        "TimeScale": {
          "name": "TimeScale",
          "description": "",
          "json_tag": "timeScale"
        },
        "TransportMode": {
          "name": "TransportMode",
          "description": "",
          "json_tag": "transportMode"
        }
      }
    },
    "RemoveOperation": {
      "type_name": "RemoveOperation",
      "description": "RemoveOperation Remove sub-resource from an existing model",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "A JSON Pointer path.",
          "json_tag": "path"
        }
      }
    },
    "ReplaceOperation": {
      "type_name": "ReplaceOperation",
      "description": "ReplaceOperation Replace attribute value or sub-resource in the existing model",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "A JSON Pointer path.",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "value to replace with",
          "json_tag": "value"
        }
      }
    },
    "ResourceData": {
      "type_name": "ResourceData",
      "description": "ResourceData struct for ResourceData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Cloud Event asset href",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "Cloud Event asset name",
          "json_tag": "name"
        },
        "State": {
          "name": "State",
          "description": "Cloud Event asset state",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "Cloud Event asset type",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Cloud Event asset uuid",
          "json_tag": "uuid"
        }
      }
    },
    "ResourceSelector": {
      "type_name": "ResourceSelector",
      "description": "ResourceSelector struct for ResourceSelector",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Include": {
          "name": "Include",
          "description": "### Supported metric names to use on filters with property /subject:   * `*` - all events or metrics   * `*_/ports/\u003cuuid\u003e` - port metrics   * `*_/connections/\u003cuuid\u003e` - connection metrics   * `*_/metros/\u003cmetroCode\u003e` - metro latency metrics",
          "json_tag": "include"
        }
      }
    },
    "RouteAggregationChangeData": {
      "type_name": "RouteAggregationChangeData",
      "description": "RouteAggregationChangeData Current state of latest Route Aggregation change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedBy": {
          "name": "CreatedBy",
          "description": "Created by User Key",
          "json_tag": "createdBy"
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Set when change flow starts",
          "json_tag": "createdDateTime"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Href": {
          "name": "Href",
          "description": "Route AGGREGATION Change URI",
          "json_tag": "href"
        },
        "Information": {
          "name": "Information",
          "description": "Additional information",
          "json_tag": "information"
        },
        "Status": {
          "name": "Status",
          "description": "Current outcome of the change flow",
          "json_tag": "status"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UpdatedBy": {
          "name": "UpdatedBy",
          "description": "Updated by User Key",
          "json_tag": "updatedBy"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Set when change object is updated",
          "json_tag": "updatedDateTime"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RouteAggregationChangeDataResponse": {
      "type_name": "RouteAggregationChangeDataResponse",
      "description": "RouteAggregationChangeDataResponse List of Route Aggregation changes",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "RouteAggregationConnectionsData": {
      "type_name": "RouteAggregationConnectionsData",
      "description": "RouteAggregationConnectionsData struct for RouteAggregationConnectionsData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Connection URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Route Aggregation identifier",
          "json_tag": "uuid"
        }
      }
    },
    "RouteAggregationRulesBase": {
      "type_name": "RouteAggregationRulesBase",
      "description": "RouteAggregationRulesBase struct for RouteAggregationRulesBase",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided Route Aggregation Rule description",
          "json_tag": "description"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Prefix": {
          "name": "Prefix",
          "description": "",
          "json_tag": "prefix"
        }
      }
    },
    "RouteAggregationRulesChange": {
      "type_name": "RouteAggregationRulesChange",
      "description": "RouteAggregationRulesChange Current state of latest Route Aggregation Rule change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Route Aggregation Change URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RouteAggregationRulesChangeData": {
      "type_name": "RouteAggregationRulesChangeData",
      "description": "RouteAggregationRulesChangeData Current state of latest Route Aggregation Rules change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedBy": {
          "name": "CreatedBy",
          "description": "Created by User Key",
          "json_tag": "createdBy"
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Set when change flow starts",
          "json_tag": "createdDateTime"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Href": {
          "name": "Href",
          "description": "Route Aggregation Change URI",
          "json_tag": "href"
        },
        "Status": {
          "name": "Status",
          "description": "Current outcome of the change flow",
          "json_tag": "status"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UpdatedBy": {
          "name": "UpdatedBy",
          "description": "Updated by User Key",
          "json_tag": "updatedBy"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Set when change object is updated",
          "json_tag": "updatedDateTime"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RouteAggregationRulesChangeDataResponse": {
      "type_name": "RouteAggregationRulesChangeDataResponse",
      "description": "RouteAggregationRulesChangeDataResponse List of Route Aggregation Rule changes",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "RouteAggregationRulesChangeOperation": {
      "type_name": "RouteAggregationRulesChangeOperation",
      "description": "RouteAggregationRulesChangeOperation Route Aggregation Rule change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "",
          "json_tag": "value"
        }
      }
    },
    "RouteAggregationRulesData": {
      "type_name": "RouteAggregationRulesData",
      "description": "RouteAggregationRulesData struct for RouteAggregationRulesData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided Route Aggregation Rule description",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Route Aggregation Rules URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Prefix": {
          "name": "Prefix",
          "description": "",
          "json_tag": "prefix"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Route Aggregation Rule identifier",
          "json_tag": "uuid"
        }
      }
    },
    "RouteAggregationRulesPatchRequestItem": {
      "type_name": "RouteAggregationRulesPatchRequestItem",
      "description": "RouteAggregationRulesPatchRequestItem Route Aggregation Rule change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "Handy shortcut for operation name",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path to change",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "RouteAggregationRulesPostRequest": {
      "type_name": "RouteAggregationRulesPostRequest",
      "description": "RouteAggregationRulesPostRequest Create Route Aggregation Rule POST request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Route Aggregation Rule configuration",
          "json_tag": "data"
        }
      }
    },
    "RouteAggregationSortItem": {
      "type_name": "RouteAggregationSortItem",
      "description": "RouteAggregationSortItem struct for RouteAggregationSortItem",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "RouteAggregationsBase": {
      "type_name": "RouteAggregationsBase",
      "description": "RouteAggregationsBase struct for RouteAggregationsBase",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided connection description",
          "json_tag": "description"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "RouteAggregationsChange": {
      "type_name": "RouteAggregationsChange",
      "description": "RouteAggregationsChange Current state of latest Route Aggregation change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Route AGGREGATION Change URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RouteAggregationsChangeOperation": {
      "type_name": "RouteAggregationsChangeOperation",
      "description": "RouteAggregationsChangeOperation Route Aggregation change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "",
          "json_tag": "value"
        }
      }
    },
    "RouteAggregationsData": {
      "type_name": "RouteAggregationsData",
      "description": "RouteAggregationsData struct for RouteAggregationsData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "ConnectionsCount": {
          "name": "ConnectionsCount",
          "description": "",
          "json_tag": "connectionsCount"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided connection description",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Route Aggregation URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "RulesCount": {
          "name": "RulesCount",
          "description": "",
          "json_tag": "rulesCount"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Route Aggregation identifier",
          "json_tag": "uuid"
        }
      }
    },
    "RouteAggregationsDataProject": {
      "type_name": "RouteAggregationsDataProject",
      "description": "RouteAggregationsDataProject struct for RouteAggregationsDataProject",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Project URI",
          "json_tag": "href"
        },
        "ProjectId": {
          "name": "ProjectId",
          "description": "Subscriber-assigned project ID",
          "json_tag": "projectId"
        }
      }
    },
    "RouteAggregationsPatchRequestItem": {
      "type_name": "RouteAggregationsPatchRequestItem",
      "description": "RouteAggregationsPatchRequestItem Route Aggregation change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "Handy shortcut for operation name",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path to change",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "RouteAggregationsSearchBase": {
      "type_name": "RouteAggregationsSearchBase",
      "description": "RouteAggregationsSearchBase struct for RouteAggregationsSearchBase",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "RouteAggregationsSearchBaseFilter": {
      "type_name": "RouteAggregationsSearchBaseFilter",
      "description": "RouteAggregationsSearchBaseFilter struct for RouteAggregationsSearchBaseFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "RouteAggregationsSearchFilterItem": {
      "type_name": "RouteAggregationsSearchFilterItem",
      "description": "RouteAggregationsSearchFilterItem struct for RouteAggregationsSearchFilterItem",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "RouteAggregationsSearchResponse": {
      "type_name": "RouteAggregationsSearchResponse",
      "description": "RouteAggregationsSearchResponse struct for RouteAggregationsSearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Route Aggregations",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "RouteFilterChangeData": {
      "type_name": "RouteFilterChangeData",
      "description": "RouteFilterChangeData Current state of latest route filter change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedBy": {
          "name": "CreatedBy",
          "description": "Created by user key",
          "json_tag": "createdBy"
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Set when change flow starts",
          "json_tag": "createdDateTime"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Href": {
          "name": "Href",
          "description": "Route filter change URI",
          "json_tag": "href"
        },
        "Information": {
          "name": "Information",
          "description": "Additional information",
          "json_tag": "information"
        },
        "Status": {
          "name": "Status",
          "description": "Current outcome of the change flow",
          "json_tag": "status"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UpdatedBy": {
          "name": "UpdatedBy",
          "description": "Updated by user key",
          "json_tag": "updatedBy"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Set when change object is updated",
          "json_tag": "updatedDateTime"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RouteFilterChangeDataResponse": {
      "type_name": "RouteFilterChangeDataResponse",
      "description": "RouteFilterChangeDataResponse List of route filter changes",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "RouteFilterConnectionsData": {
      "type_name": "RouteFilterConnectionsData",
      "description": "RouteFilterConnectionsData struct for RouteFilterConnectionsData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Connection URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Route filter identifier",
          "json_tag": "uuid"
        }
      }
    },
    "RouteFilterRulesBase": {
      "type_name": "RouteFilterRulesBase",
      "description": "RouteFilterRulesBase struct for RouteFilterRulesBase",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided Route Filter Rule description",
          "json_tag": "description"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Prefix": {
          "name": "Prefix",
          "description": "",
          "json_tag": "prefix"
        },
        "PrefixMatch": {
          "name": "PrefixMatch",
          "description": "",
          "json_tag": "prefixMatch"
        }
      }
    },
    "RouteFilterRulesChange": {
      "type_name": "RouteFilterRulesChange",
      "description": "RouteFilterRulesChange Current state of latest route filter rule change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Route Filter Change URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RouteFilterRulesChangeData": {
      "type_name": "RouteFilterRulesChangeData",
      "description": "RouteFilterRulesChangeData Current state of latest route filter rules change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedBy": {
          "name": "CreatedBy",
          "description": "Created by User Key",
          "json_tag": "createdBy"
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Set when change flow starts",
          "json_tag": "createdDateTime"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Href": {
          "name": "Href",
          "description": "Route Filter Change URI",
          "json_tag": "href"
        },
        "Status": {
          "name": "Status",
          "description": "Current outcome of the change flow",
          "json_tag": "status"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UpdatedBy": {
          "name": "UpdatedBy",
          "description": "Updated by User Key",
          "json_tag": "updatedBy"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Set when change object is updated",
          "json_tag": "updatedDateTime"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RouteFilterRulesChangeDataResponse": {
      "type_name": "RouteFilterRulesChangeDataResponse",
      "description": "RouteFilterRulesChangeDataResponse List of route filter rule changes",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "RouteFilterRulesChangeOperation": {
      "type_name": "RouteFilterRulesChangeOperation",
      "description": "RouteFilterRulesChangeOperation Route filter rule change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "",
          "json_tag": "value"
        }
      }
    },
    "RouteFilterRulesData": {
      "type_name": "RouteFilterRulesData",
      "description": "RouteFilterRulesData struct for RouteFilterRulesData",
      "fields": {
        "Action": {
          "name": "Action",
          "description": "",
          "json_tag": "action"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "Changelog": {
          "name": "Changelog",
          "description": "",
          "json_tag": "changelog"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided Route Filter Rule description",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Route Filter Rules URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Prefix": {
          "name": "Prefix",
          "description": "",
          "json_tag": "prefix"
        },
        "PrefixMatch": {
          "name": "PrefixMatch",
          "description": "prefix matching operator",
          "json_tag": "prefixMatch"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Route Filter Rule identifier",
          "json_tag": "uuid"
        }
      }
    },
    "RouteFilterRulesPatchRequestItem": {
      "type_name": "RouteFilterRulesPatchRequestItem",
      "description": "RouteFilterRulesPatchRequestItem Route filter rule change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "Handy shortcut for operation name",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path to change",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "RouteFilterRulesPostRequest": {
      "type_name": "RouteFilterRulesPostRequest",
      "description": "RouteFilterRulesPostRequest Create Route Filter Rule POST request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Route Filter Rule configuration",
          "json_tag": "data"
        }
      }
    },
    "RouteFiltersBase": {
      "type_name": "RouteFiltersBase",
      "description": "RouteFiltersBase struct for RouteFiltersBase",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided connection description",
          "json_tag": "description"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "RouteFiltersChange": {
      "type_name": "RouteFiltersChange",
      "description": "RouteFiltersChange Current state of latest route filter change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Route filter change URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RouteFiltersChangeOperation": {
      "type_name": "RouteFiltersChangeOperation",
      "description": "RouteFiltersChangeOperation Route filter change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "",
          "json_tag": "value"
        }
      }
    },
    "RouteFiltersData": {
      "type_name": "RouteFiltersData",
      "description": "RouteFiltersData struct for RouteFiltersData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "Changelog": {
          "name": "Changelog",
          "description": "",
          "json_tag": "changelog"
        },
        "ConnectionsCount": {
          "name": "ConnectionsCount",
          "description": "",
          "json_tag": "connectionsCount"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided connection description",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Route filter URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "NotMatchedRuleAction": {
          "name": "NotMatchedRuleAction",
          "description": "",
          "json_tag": "notMatchedRuleAction"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "RulesCount": {
          "name": "RulesCount",
          "description": "",
          "json_tag": "rulesCount"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Route filter identifier",
          "json_tag": "uuid"
        }
      }
    },
    "RouteFiltersDataProject": {
      "type_name": "RouteFiltersDataProject",
      "description": "RouteFiltersDataProject struct for RouteFiltersDataProject",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Project URI",
          "json_tag": "href"
        },
        "ProjectId": {
          "name": "ProjectId",
          "description": "Subscriber-assigned project ID",
          "json_tag": "projectId"
        }
      }
    },
    "RouteFiltersPatchRequestItem": {
      "type_name": "RouteFiltersPatchRequestItem",
      "description": "RouteFiltersPatchRequestItem Route filter change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "Handy shortcut for operation name",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path to change",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "RouteFiltersSearchBase": {
      "type_name": "RouteFiltersSearchBase",
      "description": "RouteFiltersSearchBase struct for RouteFiltersSearchBase",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "RouteFiltersSearchBaseFilter": {
      "type_name": "RouteFiltersSearchBaseFilter",
      "description": "RouteFiltersSearchBaseFilter struct for RouteFiltersSearchBaseFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "RouteFiltersSearchFilterItem": {
      "type_name": "RouteFiltersSearchFilterItem",
      "description": "RouteFiltersSearchFilterItem struct for RouteFiltersSearchFilterItem",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "RouteFiltersSearchResponse": {
      "type_name": "RouteFiltersSearchResponse",
      "description": "RouteFiltersSearchResponse struct for RouteFiltersSearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of route filters",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "RouteTableEntry": {
      "type_name": "RouteTableEntry",
      "description": "RouteTableEntry Route table entry object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Age": {
          "name": "Age",
          "description": "",
          "json_tag": "age"
        },
        "AsPath": {
          "name": "AsPath",
          "description": "",
          "json_tag": "asPath"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Connection": {
          "name": "Connection",
          "description": "",
          "json_tag": "connection"
        },
        "LocalPreference": {
          "name": "LocalPreference",
          "description": "",
          "json_tag": "localPreference"
        },
        "MED": {
          "name": "MED",
          "description": "",
          "json_tag": "MED"
        },
        "NextHop": {
          "name": "NextHop",
          "description": "",
          "json_tag": "nextHop"
        },
        "Prefix": {
          "name": "Prefix",
          "description": "",
          "json_tag": "prefix"
        },
        "ProtocolType": {
          "name": "ProtocolType",
          "description": "",
          "json_tag": "protocolType"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "RouteTableEntryFilter": {
      "type_name": "RouteTableEntryFilter",
      "description": "RouteTableEntryFilter struct for RouteTableEntryFilter",
      "fields": {
        "RouteTableEntryOrFilter": {
          "name": "RouteTableEntryOrFilter",
          "description": ""
        },
        "RouteTableEntrySimpleExpression": {
          "name": "RouteTableEntrySimpleExpression",
          "description": ""
        }
      }
    },
    "RouteTableEntryFilters": {
      "type_name": "RouteTableEntryFilters",
      "description": "RouteTableEntryFilters struct for RouteTableEntryFilters",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "RouteTableEntryOrFilter": {
      "type_name": "RouteTableEntryOrFilter",
      "description": "RouteTableEntryOrFilter struct for RouteTableEntryOrFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "RouteTableEntrySearchRequest": {
      "type_name": "RouteTableEntrySearchRequest",
      "description": "RouteTableEntrySearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "RouteTableEntrySearchResponse": {
      "type_name": "RouteTableEntrySearchResponse",
      "description": "RouteTableEntrySearchResponse struct for RouteTableEntrySearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "RouteTableEntrySimpleExpression": {
      "type_name": "RouteTableEntrySimpleExpression",
      "description": "RouteTableEntrySimpleExpression struct for RouteTableEntrySimpleExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal  * `!=` - not equal  * `\u003e` - greater than  * `\u003e=` - greater than or equal to  * `\u003c` - less than  * `\u003c=` - less than or equal to  * `[NOT] BETWEEN` - (not) between  * `[NOT] LIKE` - (not) like  * `[NOT] IN` - (not) in  * `~*` - case-insensitive like",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/type` - Route table entry type  * `/prefix` - Route table entry prefix  * `/nextHop` - Route table entry nextHop  * `/state` - Route table entry state  * `/_*` - all-category search",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "RouteTableEntrySortCriteria": {
      "type_name": "RouteTableEntrySortCriteria",
      "description": "RouteTableEntrySortCriteria struct for RouteTableEntrySortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "RouterActionsConnection": {
      "type_name": "RouterActionsConnection",
      "description": "RouterActionsConnection Connection object for router actions",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Connection UUID",
          "json_tag": "uuid"
        }
      }
    },
    "RoutingProtocolBFD": {
      "type_name": "RoutingProtocolBFD",
      "description": "RoutingProtocolBFD struct for RoutingProtocolBFD",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Enabled": {
          "name": "Enabled",
          "description": "",
          "json_tag": "enabled"
        },
        "Interval": {
          "name": "Interval",
          "description": "",
          "json_tag": "interval"
        }
      }
    },
    "RoutingProtocolBGPData": {
      "type_name": "RoutingProtocolBGPData",
      "description": "RoutingProtocolBGPData struct for RoutingProtocolBGPData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AsOverrideEnabled": {
          "name": "AsOverrideEnabled",
          "description": "Enable AS number override",
          "json_tag": "asOverrideEnabled"
        },
        "Bfd": {
          "name": "Bfd",
          "description": "",
          "json_tag": "bfd"
        },
        "BgpAuthKey": {
          "name": "BgpAuthKey",
          "description": "BGP authorization key",
          "json_tag": "bgpAuthKey"
        },
        "BgpIpv4": {
          "name": "BgpIpv4",
          "description": "",
          "json_tag": "bgpIpv4"
        },
        "BgpIpv6": {
          "name": "BgpIpv6",
          "description": "",
          "json_tag": "bgpIpv6"
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "Changelog": {
          "name": "Changelog",
          "description": "",
          "json_tag": "changelog"
        },
        "CustomerAsn": {
          "name": "CustomerAsn",
          "description": "Customer asn",
          "json_tag": "customerAsn"
        },
        "EquinixAsn": {
          "name": "EquinixAsn",
          "description": "Equinix asn",
          "json_tag": "equinixAsn"
        },
        "Href": {
          "name": "Href",
          "description": "Routing Protocol URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Routing protocol identifier",
          "json_tag": "uuid"
        }
      }
    },
    "RoutingProtocolBGPType": {
      "type_name": "RoutingProtocolBGPType",
      "description": "RoutingProtocolBGPType struct for RoutingProtocolBGPType",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AsOverrideEnabled": {
          "name": "AsOverrideEnabled",
          "description": "Enable AS number override",
          "json_tag": "asOverrideEnabled"
        },
        "Bfd": {
          "name": "Bfd",
          "description": "",
          "json_tag": "bfd"
        },
        "BgpAuthKey": {
          "name": "BgpAuthKey",
          "description": "BGP authorization key",
          "json_tag": "bgpAuthKey"
        },
        "BgpIpv4": {
          "name": "BgpIpv4",
          "description": "",
          "json_tag": "bgpIpv4"
        },
        "BgpIpv6": {
          "name": "BgpIpv6",
          "description": "",
          "json_tag": "bgpIpv6"
        },
        "CustomerAsn": {
          "name": "CustomerAsn",
          "description": "Customer asn",
          "json_tag": "customerAsn"
        },
        "EquinixAsn": {
          "name": "EquinixAsn",
          "description": "Equinix asn",
          "json_tag": "equinixAsn"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "RoutingProtocolBase": {
      "type_name": "RoutingProtocolBase",
      "description": "RoutingProtocolBase - struct for RoutingProtocolBase",
      "fields": {
        "RoutingProtocolBGPType": {
          "name": "RoutingProtocolBGPType",
          "description": ""
        },
        "RoutingProtocolDirectType": {
          "name": "RoutingProtocolDirectType",
          "description": ""
        }
      }
    },
    "RoutingProtocolChange": {
      "type_name": "RoutingProtocolChange",
      "description": "RoutingProtocolChange Current state of latest Routing Protocol change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Routing Protocol Change URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RoutingProtocolChangeData": {
      "type_name": "RoutingProtocolChangeData",
      "description": "RoutingProtocolChangeData Current state of latest Routing Protocol change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CreatedBy": {
          "name": "CreatedBy",
          "description": "Created by User Key",
          "json_tag": "createdBy"
        },
        "CreatedDateTime": {
          "name": "CreatedDateTime",
          "description": "Set when change flow starts",
          "json_tag": "createdDateTime"
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Href": {
          "name": "Href",
          "description": "Routing Protocol Change URI",
          "json_tag": "href"
        },
        "Information": {
          "name": "Information",
          "description": "Additional information",
          "json_tag": "information"
        },
        "Status": {
          "name": "Status",
          "description": "Current outcome of the change flow",
          "json_tag": "status"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UpdatedBy": {
          "name": "UpdatedBy",
          "description": "Updated by User Key",
          "json_tag": "updatedBy"
        },
        "UpdatedDateTime": {
          "name": "UpdatedDateTime",
          "description": "Set when change object is updated",
          "json_tag": "updatedDateTime"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "RoutingProtocolChangeDataResponse": {
      "type_name": "RoutingProtocolChangeDataResponse",
      "description": "RoutingProtocolChangeDataResponse List of network changes",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "RoutingProtocolChangeOperation": {
      "type_name": "RoutingProtocolChangeOperation",
      "description": "RoutingProtocolChangeOperation Routing Protocol change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "",
          "json_tag": "value"
        }
      }
    },
    "RoutingProtocolData": {
      "type_name": "RoutingProtocolData",
      "description": "RoutingProtocolData - struct for RoutingProtocolData",
      "fields": {
        "RoutingProtocolBGPData": {
          "name": "RoutingProtocolBGPData",
          "description": ""
        },
        "RoutingProtocolDirectData": {
          "name": "RoutingProtocolDirectData",
          "description": ""
        }
      }
    },
    "RoutingProtocolDirectData": {
      "type_name": "RoutingProtocolDirectData",
      "description": "RoutingProtocolDirectData struct for RoutingProtocolDirectData",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "Changelog": {
          "name": "Changelog",
          "description": "",
          "json_tag": "changelog"
        },
        "DirectIpv4": {
          "name": "DirectIpv4",
          "description": "",
          "json_tag": "directIpv4"
        },
        "DirectIpv6": {
          "name": "DirectIpv6",
          "description": "",
          "json_tag": "directIpv6"
        },
        "Href": {
          "name": "Href",
          "description": "Routing Protocol URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Routing protocol identifier",
          "json_tag": "uuid"
        }
      }
    },
    "RoutingProtocolDirectType": {
      "type_name": "RoutingProtocolDirectType",
      "description": "RoutingProtocolDirectType struct for RoutingProtocolDirectType",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DirectIpv4": {
          "name": "DirectIpv4",
          "description": "",
          "json_tag": "directIpv4"
        },
        "DirectIpv6": {
          "name": "DirectIpv6",
          "description": "",
          "json_tag": "directIpv6"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "RoutingProtocolOperation": {
      "type_name": "RoutingProtocolOperation",
      "description": "RoutingProtocolOperation struct for RoutingProtocolOperation",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Errors": {
          "name": "Errors",
          "description": "",
          "json_tag": "errors"
        }
      }
    },
    "SearchDirectConnect": {
      "type_name": "SearchDirectConnect",
      "description": "SearchDirectConnect struct for SearchDirectConnect",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Id": {
          "name": "Id",
          "description": "",
          "json_tag": "id"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "SearchExpression": {
      "type_name": "SearchExpression",
      "description": "SearchExpression struct for SearchExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        },
        "Operator": {
          "name": "Operator",
          "description": "",
          "json_tag": "operator"
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "SearchRequest": {
      "type_name": "SearchRequest",
      "description": "SearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "SearchResponse": {
      "type_name": "SearchResponse",
      "description": "SearchResponse struct for SearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "ServerConfiguration": {
      "type_name": "ServerConfiguration",
      "description": "ServerConfiguration stores the information about a server",
      "fields": {
        "Description": {
          "name": "Description",
          "description": ""
        },
        "URL": {
          "name": "URL",
          "description": ""
        },
        "Variables": {
          "name": "Variables",
          "description": ""
        }
      }
    },
    "ServerVariable": {
      "type_name": "ServerVariable",
      "description": "ServerVariable stores the information about a server variable",
      "fields": {
        "DefaultValue": {
          "name": "DefaultValue",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": ""
        },
        "EnumValues": {
          "name": "EnumValues",
          "description": ""
        }
      }
    },
    "ServiceMetro": {
      "type_name": "ServiceMetro",
      "description": "ServiceMetro struct for ServiceMetro",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Code": {
          "name": "Code",
          "description": "metro code",
          "json_tag": "code"
        },
        "DisplayName": {
          "name": "DisplayName",
          "description": "service metro display name",
          "json_tag": "displayName"
        },
        "Ibxs": {
          "name": "Ibxs",
          "description": "",
          "json_tag": "ibxs"
        },
        "InTrail": {
          "name": "InTrail",
          "description": "",
          "json_tag": "inTrail"
        },
        "Name": {
          "name": "Name",
          "description": "metro name",
          "json_tag": "name"
        },
        "SellerRegions": {
          "name": "SellerRegions",
          "description": "",
          "json_tag": "sellerRegions"
        },
        "VcBandwidthMax": {
          "name": "VcBandwidthMax",
          "description": "max VC speed supported in Mbps",
          "json_tag": "vcBandwidthMax"
        }
      }
    },
    "ServiceMetros": {
      "type_name": "ServiceMetros",
      "description": "ServiceMetros Service Profile Metros",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "ServiceProfile": {
      "type_name": "ServiceProfile",
      "description": "ServiceProfile Service Profile is a software definition for a named provider service and it's network connectivity requirements. This includes the basic marketing information and one or more sets of access points (a set per each access point type) fulfilling the provider service.",
      "fields": {
        "AccessPointTypeConfigs": {
          "name": "AccessPointTypeConfigs",
          "description": "",
          "json_tag": "accessPointTypeConfigs"
        },
        "Account": {
          "name": "Account",
          "description": "Seller Account for Service Profile.",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AllowedEmails": {
          "name": "AllowedEmails",
          "description": "",
          "json_tag": "allowedEmails"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "Seller Account for Service Profile.",
          "json_tag": "changeLog"
        },
        "CustomFields": {
          "name": "CustomFields",
          "description": "",
          "json_tag": "customFields"
        },
        "Description": {
          "name": "Description",
          "description": "User-provided service description should be of maximum length 375",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Service Profile URI response attribute",
          "json_tag": "href"
        },
        "MarketingInfo": {
          "name": "MarketingInfo",
          "description": "",
          "json_tag": "marketingInfo"
        },
        "Metros": {
          "name": "Metros",
          "description": "Derived response attribute.",
          "json_tag": "metros"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-assigned service profile name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Recipients of notifications on service profile change",
          "json_tag": "notifications"
        },
        "Ports": {
          "name": "Ports",
          "description": "",
          "json_tag": "ports"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "ProjectId": {
          "name": "ProjectId",
          "description": "",
          "json_tag": "projectId"
        },
        "SelfProfile": {
          "name": "SelfProfile",
          "description": "response attribute indicates whether the profile belongs to the same organization as the api-invoker.",
          "json_tag": "selfProfile"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Tags": {
          "name": "Tags",
          "description": "",
          "json_tag": "tags"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned service profile identifier",
          "json_tag": "uuid"
        },
        "VirtualDevices": {
          "name": "VirtualDevices",
          "description": "",
          "json_tag": "virtualDevices"
        },
        "Visibility": {
          "name": "Visibility",
          "description": "",
          "json_tag": "visibility"
        }
      }
    },
    "ServiceProfileAccessPointCOLO": {
      "type_name": "ServiceProfileAccessPointCOLO",
      "description": "ServiceProfileAccessPointCOLO Colo Access Point",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "CrossConnectId": {
          "name": "CrossConnectId",
          "description": "",
          "json_tag": "crossConnectId"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "SellerRegion": {
          "name": "SellerRegion",
          "description": "",
          "json_tag": "sellerRegion"
        },
        "SellerRegionDescription": {
          "name": "SellerRegionDescription",
          "description": "",
          "json_tag": "sellerRegionDescription"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "ServiceProfileAccessPointType": {
      "type_name": "ServiceProfileAccessPointType",
      "description": "ServiceProfileAccessPointType - Access Point Type",
      "fields": {
        "ServiceProfileAccessPointTypeCOLO": {
          "name": "ServiceProfileAccessPointTypeCOLO",
          "description": ""
        },
        "ServiceProfileAccessPointTypeVD": {
          "name": "ServiceProfileAccessPointTypeVD",
          "description": ""
        }
      }
    },
    "ServiceProfileAccessPointTypeCOLO": {
      "type_name": "ServiceProfileAccessPointTypeCOLO",
      "description": "ServiceProfileAccessPointTypeCOLO Colo Access Point Type",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AllowBandwidthAutoApproval": {
          "name": "AllowBandwidthAutoApproval",
          "description": "Setting to enable or disable the ability of the buyer to change connection bandwidth without approval of the seller.",
          "json_tag": "allowBandwidthAutoApproval"
        },
        "AllowBandwidthUpgrade": {
          "name": "AllowBandwidthUpgrade",
          "description": "Availability of a bandwidth upgrade. The default is false.",
          "json_tag": "allowBandwidthUpgrade"
        },
        "AllowCustomBandwidth": {
          "name": "AllowCustomBandwidth",
          "description": "Setting to enable or disable the ability of the buyer to customize the bandwidth.",
          "json_tag": "allowCustomBandwidth"
        },
        "AllowRemoteConnections": {
          "name": "AllowRemoteConnections",
          "description": "Setting to allow or prohibit remote connections to the service profile.",
          "json_tag": "allowRemoteConnections"
        },
        "ApiConfig": {
          "name": "ApiConfig",
          "description": "",
          "json_tag": "apiConfig"
        },
        "AuthenticationKey": {
          "name": "AuthenticationKey",
          "description": "",
          "json_tag": "authenticationKey"
        },
        "BandwidthAlertThreshold": {
          "name": "BandwidthAlertThreshold",
          "description": "percentage of port bandwidth at which an allocation alert is generated - missing on wiki.",
          "json_tag": "bandwidthAlertThreshold"
        },
        "ConnectionLabel": {
          "name": "ConnectionLabel",
          "description": "custom name for \\\"Connection\\\"",
          "json_tag": "connectionLabel"
        },
        "ConnectionRedundancyRequired": {
          "name": "ConnectionRedundancyRequired",
          "description": "Mandate redundant connections",
          "json_tag": "connectionRedundancyRequired"
        },
        "EnableAutoGenerateServiceKey": {
          "name": "EnableAutoGenerateServiceKey",
          "description": "for verizon only.",
          "json_tag": "enableAutoGenerateServiceKey"
        },
        "LinkProtocolConfig": {
          "name": "LinkProtocolConfig",
          "description": "",
          "json_tag": "linkProtocolConfig"
        },
        "Metadata": {
          "name": "Metadata",
          "description": "",
          "json_tag": "metadata"
        },
        "SupportedBandwidths": {
          "name": "SupportedBandwidths",
          "description": "",
          "json_tag": "supportedBandwidths"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "ServiceProfileAccessPointTypeVD": {
      "type_name": "ServiceProfileAccessPointTypeVD",
      "description": "ServiceProfileAccessPointTypeVD VirtualDevice Access Point Type",
      "fields": {
        "AllowCustomBandwidth": {
          "name": "AllowCustomBandwidth",
          "description": "",
          "json_tag": "allowCustomBandwidth"
        },
        "AllowRemoteConnections": {
          "name": "AllowRemoteConnections",
          "description": "Allow remote connections to Service Profile",
          "json_tag": "allowRemoteConnections"
        },
        "SupportedBandwidths": {
          "name": "SupportedBandwidths",
          "description": "",
          "json_tag": "supportedBandwidths"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "ServiceProfileAccessPointVD": {
      "type_name": "ServiceProfileAccessPointVD",
      "description": "ServiceProfileAccessPointVD Virtual Device Point",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "InterfaceUuid": {
          "name": "InterfaceUuid",
          "description": "",
          "json_tag": "interfaceUuid"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "ServiceProfileAndFilter": {
      "type_name": "ServiceProfileAndFilter",
      "description": "ServiceProfileAndFilter struct for ServiceProfileAndFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "ServiceProfileFilter": {
      "type_name": "ServiceProfileFilter",
      "description": "ServiceProfileFilter struct for ServiceProfileFilter",
      "fields": {
        "ServiceProfileAndFilter": {
          "name": "ServiceProfileAndFilter",
          "description": ""
        },
        "ServiceProfileSimpleExpression": {
          "name": "ServiceProfileSimpleExpression",
          "description": ""
        }
      }
    },
    "ServiceProfileLinkProtocolConfig": {
      "type_name": "ServiceProfileLinkProtocolConfig",
      "description": "ServiceProfileLinkProtocolConfig Configuration for dot1q to qinq translation support",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Encapsulation": {
          "name": "Encapsulation",
          "description": "",
          "json_tag": "encapsulation"
        },
        "EncapsulationStrategy": {
          "name": "EncapsulationStrategy",
          "description": "",
          "json_tag": "encapsulationStrategy"
        },
        "NamedTags": {
          "name": "NamedTags",
          "description": "",
          "json_tag": "namedTags"
        },
        "ReuseVlanSTag": {
          "name": "ReuseVlanSTag",
          "description": "",
          "json_tag": "reuseVlanSTag"
        },
        "VlanCTagLabel": {
          "name": "VlanCTagLabel",
          "description": "was ctagLabel",
          "json_tag": "vlanCTagLabel"
        }
      }
    },
    "ServiceProfileMetadata": {
      "type_name": "ServiceProfileMetadata",
      "description": "ServiceProfileMetadata Metadata. Response attribute. Ignored on request payload.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AllowSecondaryLocation": {
          "name": "AllowSecondaryLocation",
          "description": "",
          "json_tag": "allowSecondaryLocation"
        },
        "AllowVcMigration": {
          "name": "AllowVcMigration",
          "description": "",
          "json_tag": "allowVcMigration"
        },
        "ConnectionEditable": {
          "name": "ConnectionEditable",
          "description": "",
          "json_tag": "connectionEditable"
        },
        "ConnectionNameEditable": {
          "name": "ConnectionNameEditable",
          "description": "",
          "json_tag": "connectionNameEditable"
        },
        "EqxManagedPort": {
          "name": "EqxManagedPort",
          "description": "",
          "json_tag": "eqxManagedPort"
        },
        "GlobalOrganization": {
          "name": "GlobalOrganization",
          "description": "",
          "json_tag": "globalOrganization"
        },
        "LimitAuthKeyConn": {
          "name": "LimitAuthKeyConn",
          "description": "",
          "json_tag": "limitAuthKeyConn"
        },
        "MaxConnectionsOnPort": {
          "name": "MaxConnectionsOnPort",
          "description": "",
          "json_tag": "maxConnectionsOnPort"
        },
        "MaxDot1q": {
          "name": "MaxDot1q",
          "description": "",
          "json_tag": "maxDot1q"
        },
        "MaxQinq": {
          "name": "MaxQinq",
          "description": "",
          "json_tag": "maxQinq"
        },
        "PortAssignmentStrategy": {
          "name": "PortAssignmentStrategy",
          "description": "",
          "json_tag": "portAssignmentStrategy"
        },
        "Props": {
          "name": "Props",
          "description": "",
          "json_tag": "props"
        },
        "RedundantProfileId": {
          "name": "RedundantProfileId",
          "description": "",
          "json_tag": "redundantProfileId"
        },
        "RegEx": {
          "name": "RegEx",
          "description": "",
          "json_tag": "regEx"
        },
        "RegExMsg": {
          "name": "RegExMsg",
          "description": "",
          "json_tag": "regExMsg"
        },
        "ReleaseVlan": {
          "name": "ReleaseVlan",
          "description": "",
          "json_tag": "releaseVlan"
        },
        "VariableBilling": {
          "name": "VariableBilling",
          "description": "",
          "json_tag": "variableBilling"
        },
        "VlanRangeMaxValue": {
          "name": "VlanRangeMaxValue",
          "description": "",
          "json_tag": "vlanRangeMaxValue"
        },
        "VlanRangeMinValue": {
          "name": "VlanRangeMinValue",
          "description": "",
          "json_tag": "vlanRangeMinValue"
        }
      }
    },
    "ServiceProfileRequest": {
      "type_name": "ServiceProfileRequest",
      "description": "ServiceProfileRequest Service Profile is a software definition for a named provider service and it's network connectivity requirements. This includes the basic marketing information and one or more sets of access points (a set per each access point type) fulfilling the provider service.",
      "fields": {
        "AccessPointTypeConfigs": {
          "name": "AccessPointTypeConfigs",
          "description": "",
          "json_tag": "accessPointTypeConfigs"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AllowedEmails": {
          "name": "AllowedEmails",
          "description": "",
          "json_tag": "allowedEmails"
        },
        "CustomFields": {
          "name": "CustomFields",
          "description": "",
          "json_tag": "customFields"
        },
        "Description": {
          "name": "Description",
          "description": "User-provided service description should be of maximum length 375",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Service Profile URI response attribute",
          "json_tag": "href"
        },
        "MarketingInfo": {
          "name": "MarketingInfo",
          "description": "",
          "json_tag": "marketingInfo"
        },
        "Metros": {
          "name": "Metros",
          "description": "Derived response attribute.",
          "json_tag": "metros"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-assigned service profile name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Recipients of notifications on service profile change",
          "json_tag": "notifications"
        },
        "Ports": {
          "name": "Ports",
          "description": "",
          "json_tag": "ports"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "ProjectId": {
          "name": "ProjectId",
          "description": "",
          "json_tag": "projectId"
        },
        "SelfProfile": {
          "name": "SelfProfile",
          "description": "response attribute indicates whether the profile belongs to the same organization as the api-invoker.",
          "json_tag": "selfProfile"
        },
        "Tags": {
          "name": "Tags",
          "description": "",
          "json_tag": "tags"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned service profile identifier",
          "json_tag": "uuid"
        },
        "VirtualDevices": {
          "name": "VirtualDevices",
          "description": "",
          "json_tag": "virtualDevices"
        },
        "Visibility": {
          "name": "Visibility",
          "description": "",
          "json_tag": "visibility"
        }
      }
    },
    "ServiceProfileSearchRequest": {
      "type_name": "ServiceProfileSearchRequest",
      "description": "ServiceProfileSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "ServiceProfileSimpleExpression": {
      "type_name": "ServiceProfileSimpleExpression",
      "description": "ServiceProfileSimpleExpression struct for ServiceProfileSimpleExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/name` - Service Profile name  * `/uuid` - Service Profile uuid  * `/state` - Service Profile status  * `/metros/code` - Service Profile metro code  * `/visibility` - Service Profile package  * `/type` - Service Profile package  * `/project/projectId` - Service Profile project id",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "ServiceProfileSortCriteria": {
      "type_name": "ServiceProfileSortCriteria",
      "description": "ServiceProfileSortCriteria struct for ServiceProfileSortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "ServiceProfiles": {
      "type_name": "ServiceProfiles",
      "description": "ServiceProfiles Service Profiles",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "ServiceSearchResponse": {
      "type_name": "ServiceSearchResponse",
      "description": "ServiceSearchResponse struct for ServiceSearchResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "Data returned from the API call.",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "ServiceToken": {
      "type_name": "ServiceToken",
      "description": "ServiceToken Create Service Tokens (v4) generates Equinix Fabric service tokens. These tokens authorize users to access protected resources and services. The tokens remove sensitive content from the environment, rather than just masking it, making the protected data impossible to unencrypt or decrypt. Resource owners can distribute the tokens to trusted partners and vendors, allowing selected third parties to work directly with Equinix network assets.",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Changelog": {
          "name": "Changelog",
          "description": "",
          "json_tag": "changelog"
        },
        "Connection": {
          "name": "Connection",
          "description": "",
          "json_tag": "connection"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided service token description",
          "json_tag": "description"
        },
        "ExpirationDateTime": {
          "name": "ExpirationDateTime",
          "description": "Expiration date and time of the service token.",
          "json_tag": "expirationDateTime"
        },
        "Expiry": {
          "name": "Expiry",
          "description": "Deprecated",
          "json_tag": "expiry"
        },
        "Href": {
          "name": "Href",
          "description": "An absolute URL that is the subject of the link's context.",
          "json_tag": "href"
        },
        "IssuerSide": {
          "name": "IssuerSide",
          "description": "information about token side\nDeprecated",
          "json_tag": "issuerSide"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided service token name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Service token related notifications",
          "json_tag": "notifications"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned service token identifier",
          "json_tag": "uuid"
        }
      }
    },
    "ServiceTokenActionRequest": {
      "type_name": "ServiceTokenActionRequest",
      "description": "ServiceTokenActionRequest Service Token action request",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "ServiceTokenChangeOperation": {
      "type_name": "ServiceTokenChangeOperation",
      "description": "ServiceTokenChangeOperation Service Token change operation data",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Op": {
          "name": "Op",
          "description": "",
          "json_tag": "op"
        },
        "Path": {
          "name": "Path",
          "description": "path inside document leading to updated parameter",
          "json_tag": "path"
        },
        "Value": {
          "name": "Value",
          "description": "new value for updated parameter",
          "json_tag": "value"
        }
      }
    },
    "ServiceTokenConnection": {
      "type_name": "ServiceTokenConnection",
      "description": "ServiceTokenConnection Service Token Connection Type Information",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AllowCustomBandwidth": {
          "name": "AllowCustomBandwidth",
          "description": "Allow custom bandwidth value",
          "json_tag": "allowCustomBandwidth"
        },
        "AllowRemoteConnection": {
          "name": "AllowRemoteConnection",
          "description": "Authorization to connect remotely",
          "json_tag": "allowRemoteConnection"
        },
        "BandwidthLimit": {
          "name": "BandwidthLimit",
          "description": "Connection bandwidth limit in Mbps",
          "json_tag": "bandwidthLimit"
        },
        "Href": {
          "name": "Href",
          "description": "An absolute URL that is the subject of the link's context.",
          "json_tag": "href"
        },
        "SupportedBandwidths": {
          "name": "SupportedBandwidths",
          "description": "List of permitted bandwidths.",
          "json_tag": "supportedBandwidths"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned connection identifier",
          "json_tag": "uuid"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "ServiceTokenSearchExpression": {
      "type_name": "ServiceTokenSearchExpression",
      "description": "ServiceTokenSearchExpression struct for ServiceTokenSearchExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        },
        "Operator": {
          "name": "Operator",
          "description": "",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "ServiceTokenSearchRequest": {
      "type_name": "ServiceTokenSearchRequest",
      "description": "ServiceTokenSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "ServiceTokenSide": {
      "type_name": "ServiceTokenSide",
      "description": "ServiceTokenSide Connection link protocol,virtual device or network configuration",
      "fields": {
        "AccessPointSelectors": {
          "name": "AccessPointSelectors",
          "description": "List of AccessPointSelectors",
          "json_tag": "accessPointSelectors"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        }
      }
    },
    "ServiceTokens": {
      "type_name": "ServiceTokens",
      "description": "ServiceTokens Service tokens authorize a user to access protected resources and services available on the Equinix Fabric network. The owner of the resources can distribute service tokens to third-party users (trusted partners and vendors), allowing them to directly access and work with the resources on the network without involving the resource owners.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Data": {
          "name": "Data",
          "description": "List of Service Tokens",
          "json_tag": "data"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        }
      }
    },
    "Services": {
      "type_name": "Services",
      "description": "Services Arrays of objects containing type of services supported in the specified metros",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Type": {
          "name": "Type",
          "description": "Type of Service",
          "json_tag": "type"
        }
      }
    },
    "SimplifiedAccount": {
      "type_name": "SimplifiedAccount",
      "description": "SimplifiedAccount struct for SimplifiedAccount",
      "fields": {
        "AccountName": {
          "name": "AccountName",
          "description": "Account name",
          "json_tag": "accountName"
        },
        "AccountNumber": {
          "name": "AccountNumber",
          "description": "Account number",
          "json_tag": "accountNumber"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "GlobalCustId": {
          "name": "GlobalCustId",
          "description": "Account name",
          "json_tag": "globalCustId"
        },
        "GlobalOrgId": {
          "name": "GlobalOrgId",
          "description": "Global organization identifier",
          "json_tag": "globalOrgId"
        },
        "GlobalOrganizationName": {
          "name": "GlobalOrganizationName",
          "description": "Global organization name",
          "json_tag": "globalOrganizationName"
        },
        "OrgId": {
          "name": "OrgId",
          "description": "Customer organization identifier",
          "json_tag": "orgId"
        },
        "OrganizationName": {
          "name": "OrganizationName",
          "description": "Customer organization name",
          "json_tag": "organizationName"
        },
        "ResellerAccountName": {
          "name": "ResellerAccountName",
          "description": "Reseller account name",
          "json_tag": "resellerAccountName"
        },
        "ResellerAccountNumber": {
          "name": "ResellerAccountNumber",
          "description": "Reseller account number",
          "json_tag": "resellerAccountNumber"
        },
        "ResellerOrgId": {
          "name": "ResellerOrgId",
          "description": "Reseller customer organization identifier",
          "json_tag": "resellerOrgId"
        },
        "ResellerUcmId": {
          "name": "ResellerUcmId",
          "description": "Reseller account ucmId",
          "json_tag": "resellerUcmId"
        },
        "UcmId": {
          "name": "UcmId",
          "description": "Account ucmId",
          "json_tag": "ucmId"
        }
      }
    },
    "SimplifiedLinkProtocol": {
      "type_name": "SimplifiedLinkProtocol",
      "description": "SimplifiedLinkProtocol Connection link protocol Configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "VlanCTag": {
          "name": "VlanCTag",
          "description": "vlanCTag value specified for QINQ connections",
          "json_tag": "vlanCTag"
        },
        "VlanSTag": {
          "name": "VlanSTag",
          "description": "vlanSTag value specified for QINQ connections",
          "json_tag": "vlanSTag"
        },
        "VlanTag": {
          "name": "VlanTag",
          "description": "vlanTag value specified for DOT1Q connections",
          "json_tag": "vlanTag"
        }
      }
    },
    "SimplifiedLocation": {
      "type_name": "SimplifiedLocation",
      "description": "SimplifiedLocation struct for SimplifiedLocation",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Ibx": {
          "name": "Ibx",
          "description": "Deprecated",
          "json_tag": "ibx"
        },
        "MetroCode": {
          "name": "MetroCode",
          "description": "",
          "json_tag": "metroCode"
        },
        "MetroHref": {
          "name": "MetroHref",
          "description": "",
          "json_tag": "metroHref"
        },
        "MetroName": {
          "name": "MetroName",
          "description": "",
          "json_tag": "metroName"
        },
        "Region": {
          "name": "Region",
          "description": "",
          "json_tag": "region"
        }
      }
    },
    "SimplifiedLocationWithoutIBX": {
      "type_name": "SimplifiedLocationWithoutIBX",
      "description": "SimplifiedLocationWithoutIBX struct for SimplifiedLocationWithoutIBX",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "MetroCode": {
          "name": "MetroCode",
          "description": "",
          "json_tag": "metroCode"
        },
        "MetroHref": {
          "name": "MetroHref",
          "description": "The Canonical URL at which the resource resides.",
          "json_tag": "metroHref"
        },
        "MetroName": {
          "name": "MetroName",
          "description": "",
          "json_tag": "metroName"
        },
        "Region": {
          "name": "Region",
          "description": "",
          "json_tag": "region"
        }
      }
    },
    "SimplifiedMetadataEntity": {
      "type_name": "SimplifiedMetadataEntity",
      "description": "SimplifiedMetadataEntity Configuration details for port used at the access point.",
      "fields": {
        "AccountName": {
          "name": "AccountName",
          "description": "Account Name",
          "json_tag": "accountName"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Port Bandwidth",
          "json_tag": "bandwidth"
        },
        "CvpId": {
          "name": "CvpId",
          "description": "Customer virtual port Id",
          "json_tag": "cvpId"
        },
        "EncapsulationProtocolType": {
          "name": "EncapsulationProtocolType",
          "description": "Port Encapsulation",
          "json_tag": "encapsulationProtocolType"
        },
        "Href": {
          "name": "Href",
          "description": "url to entity",
          "json_tag": "href"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "PortName": {
          "name": "PortName",
          "description": "Port Name",
          "json_tag": "portName"
        },
        "Priority": {
          "name": "Priority",
          "description": "Port Priority",
          "json_tag": "priority"
        },
        "Type": {
          "name": "Type",
          "description": "Type of Port",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix assigned Identifier",
          "json_tag": "uuid"
        }
      }
    },
    "SimplifiedNetwork": {
      "type_name": "SimplifiedNetwork",
      "description": "SimplifiedNetwork Network specification",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Change": {
          "name": "Change",
          "description": "",
          "json_tag": "change"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Href": {
          "name": "Href",
          "description": "Network URI",
          "json_tag": "href"
        },
        "Links": {
          "name": "Links",
          "description": "Network sub-resources links",
          "json_tag": "links"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-assigned network name",
          "json_tag": "name"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "Scope": {
          "name": "Scope",
          "description": "",
          "json_tag": "scope"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned network identifier",
          "json_tag": "uuid"
        }
      }
    },
    "SimplifiedNetworkChange": {
      "type_name": "SimplifiedNetworkChange",
      "description": "SimplifiedNetworkChange Current state of latest network change",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Network URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Uniquely identifies a change",
          "json_tag": "uuid"
        }
      }
    },
    "SimplifiedNotification": {
      "type_name": "SimplifiedNotification",
      "description": "SimplifiedNotification struct for SimplifiedNotification",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Emails": {
          "name": "Emails",
          "description": "Array of contact emails",
          "json_tag": "emails"
        },
        "RegisteredUsers": {
          "name": "RegisteredUsers",
          "description": "Array of registered users",
          "json_tag": "registeredUsers"
        },
        "SendInterval": {
          "name": "SendInterval",
          "description": "",
          "json_tag": "sendInterval"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "SimplifiedPort": {
      "type_name": "SimplifiedPort",
      "description": "SimplifiedPort Port specification",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "Port additional information",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AvailableBandwidth": {
          "name": "AvailableBandwidth",
          "description": "Equinix assigned response attribute for Port available bandwidth in Mbps",
          "json_tag": "availableBandwidth"
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Equinix assigned response attribute for Port bandwidth in Mbps",
          "json_tag": "bandwidth"
        },
        "ConnectionsCount": {
          "name": "ConnectionsCount",
          "description": "Equinix assigned response attribute for Connection count",
          "json_tag": "connectionsCount"
        },
        "DemarcationPoint": {
          "name": "DemarcationPoint",
          "description": "",
          "json_tag": "demarcationPoint"
        },
        "Description": {
          "name": "Description",
          "description": "Equinix assigned response attribute for Port description",
          "json_tag": "description"
        },
        "Device": {
          "name": "Device",
          "description": "",
          "json_tag": "device"
        },
        "Encapsulation": {
          "name": "Encapsulation",
          "description": "",
          "json_tag": "encapsulation"
        },
        "Href": {
          "name": "Href",
          "description": "Equinix assigned response attribute for an absolute URL that is the subject of the link's context.",
          "json_tag": "href"
        },
        "Id": {
          "name": "Id",
          "description": "Equinix assigned response attribute for Port Id",
          "json_tag": "id"
        },
        "Interface": {
          "name": "Interface",
          "description": "",
          "json_tag": "interface"
        },
        "LagEnabled": {
          "name": "LagEnabled",
          "description": "If LAG enabled",
          "json_tag": "lagEnabled"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Name": {
          "name": "Name",
          "description": "Equinix assigned response attribute for Port name",
          "json_tag": "name"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "PhysicalPortQuantity": {
          "name": "PhysicalPortQuantity",
          "description": "Number of physical ports",
          "json_tag": "physicalPortQuantity"
        },
        "PhysicalPorts": {
          "name": "PhysicalPorts",
          "description": "Physical ports that implement this port",
          "json_tag": "physicalPorts"
        },
        "PhysicalPortsSpeed": {
          "name": "PhysicalPortsSpeed",
          "description": "Physical Ports Speed in Mbps",
          "json_tag": "physicalPortsSpeed"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "ServiceType": {
          "name": "ServiceType",
          "description": "Deprecated",
          "json_tag": "serviceType"
        },
        "Settings": {
          "name": "Settings",
          "description": "",
          "json_tag": "settings"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Tether": {
          "name": "Tether",
          "description": "",
          "json_tag": "tether"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "UsedBandwidth": {
          "name": "UsedBandwidth",
          "description": "Equinix assigned response attribute for Port used bandwidth in Mbps",
          "json_tag": "usedBandwidth"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix assigned response attribute for  port identifier",
          "json_tag": "uuid"
        }
      }
    },
    "SimplifiedServiceProfile": {
      "type_name": "SimplifiedServiceProfile",
      "description": "SimplifiedServiceProfile Service Profile is a software definition for a named provider service and it's network connectivity requirements. This includes the basic marketing information and one or more sets of access points (a set per each access point type) fulfilling the provider service.",
      "fields": {
        "AccessPointTypeConfigs": {
          "name": "AccessPointTypeConfigs",
          "description": "",
          "json_tag": "accessPointTypeConfigs"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AllowedEmails": {
          "name": "AllowedEmails",
          "description": "",
          "json_tag": "allowedEmails"
        },
        "CustomFields": {
          "name": "CustomFields",
          "description": "",
          "json_tag": "customFields"
        },
        "Description": {
          "name": "Description",
          "description": "User-provided service description should be of maximum length 375",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Service Profile URI response attribute",
          "json_tag": "href"
        },
        "MarketingInfo": {
          "name": "MarketingInfo",
          "description": "",
          "json_tag": "marketingInfo"
        },
        "Metros": {
          "name": "Metros",
          "description": "Derived response attribute.",
          "json_tag": "metros"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-assigned service profile name",
          "json_tag": "name"
        },
        "Notifications": {
          "name": "Notifications",
          "description": "Recipients of notifications on service profile change",
          "json_tag": "notifications"
        },
        "Ports": {
          "name": "Ports",
          "description": "",
          "json_tag": "ports"
        },
        "ProjectId": {
          "name": "ProjectId",
          "description": "",
          "json_tag": "projectId"
        },
        "SelfProfile": {
          "name": "SelfProfile",
          "description": "response attribute indicates whether the profile belongs to the same organization as the api-invoker.",
          "json_tag": "selfProfile"
        },
        "Tags": {
          "name": "Tags",
          "description": "",
          "json_tag": "tags"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned service profile identifier",
          "json_tag": "uuid"
        },
        "VirtualDevices": {
          "name": "VirtualDevices",
          "description": "",
          "json_tag": "virtualDevices"
        },
        "Visibility": {
          "name": "Visibility",
          "description": "",
          "json_tag": "visibility"
        }
      }
    },
    "SimplifiedTokenNetwork": {
      "type_name": "SimplifiedTokenNetwork",
      "description": "SimplifiedTokenNetwork struct for SimplifiedTokenNetwork",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "url to entity",
          "json_tag": "href"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Name": {
          "name": "Name",
          "description": "Network Name",
          "json_tag": "name"
        },
        "Scope": {
          "name": "Scope",
          "description": "",
          "json_tag": "scope"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Network Identifier",
          "json_tag": "uuid"
        }
      }
    },
    "SimplifiedVirtualDevice": {
      "type_name": "SimplifiedVirtualDevice",
      "description": "SimplifiedVirtualDevice struct for SimplifiedVirtualDevice",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Cluster": {
          "name": "Cluster",
          "description": "Virtual Device Cluster Information",
          "json_tag": "cluster"
        },
        "Href": {
          "name": "Href",
          "description": "url to entity",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-assigned Virtual Device name",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Network Edge assigned Virtual Device Identifier",
          "json_tag": "uuid"
        }
      }
    },
    "SortCriteria": {
      "type_name": "SortCriteria",
      "description": "SortCriteria struct for SortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "SortCriteriaResponse": {
      "type_name": "SortCriteriaResponse",
      "description": "SortCriteriaResponse struct for SortCriteriaResponse",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "SortItem": {
      "type_name": "SortItem",
      "description": "SortItem struct for SortItem",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "Statistics": {
      "type_name": "Statistics",
      "description": "Statistics This API provides service-level traffic metrics so that you can view access and gather key information required to manage service subscription sizing and capacity.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "BandwidthUtilization": {
          "name": "BandwidthUtilization",
          "description": "",
          "json_tag": "bandwidthUtilization"
        },
        "EndDateTime": {
          "name": "EndDateTime",
          "description": "End and duration of the statistical analysis interval.",
          "json_tag": "endDateTime"
        },
        "StartDateTime": {
          "name": "StartDateTime",
          "description": "Start and duration of the statistical analysis interval.",
          "json_tag": "startDateTime"
        },
        "ViewPoint": {
          "name": "ViewPoint",
          "description": "",
          "json_tag": "viewPoint"
        }
      }
    },
    "Stream": {
      "type_name": "Stream",
      "description": "Stream Stream object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AssetsCount": {
          "name": "AssetsCount",
          "description": "Stream assets count",
          "json_tag": "assetsCount"
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided stream description",
          "json_tag": "description"
        },
        "Href": {
          "name": "Href",
          "description": "Stream URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided stream name",
          "json_tag": "name"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "State": {
          "name": "State",
          "description": "Stream provision state",
          "json_tag": "state"
        },
        "StreamSubscriptionsCount": {
          "name": "StreamSubscriptionsCount",
          "description": "Stream subscriptions count",
          "json_tag": "streamSubscriptionsCount"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned access point identifier",
          "json_tag": "uuid"
        }
      }
    },
    "StreamAlertRule": {
      "type_name": "StreamAlertRule",
      "description": "StreamAlertRule Stream object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "CriticalThreshold": {
          "name": "CriticalThreshold",
          "description": "Stream alert rule metric critical threshold",
          "json_tag": "criticalThreshold"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided stream alert rule description",
          "json_tag": "description"
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Stream alert rule enabled status",
          "json_tag": "enabled"
        },
        "Href": {
          "name": "Href",
          "description": "Stream Alert Rule URI",
          "json_tag": "href"
        },
        "MetricName": {
          "name": "MetricName",
          "description": "Stream alert rule metric name",
          "json_tag": "metricName"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided stream alert rule name",
          "json_tag": "name"
        },
        "Operand": {
          "name": "Operand",
          "description": "",
          "json_tag": "operand"
        },
        "ResourceSelector": {
          "name": "ResourceSelector",
          "description": "",
          "json_tag": "resourceSelector"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned access point identifier",
          "json_tag": "uuid"
        },
        "WarningThreshold": {
          "name": "WarningThreshold",
          "description": "Stream alert rule metric warning threshold",
          "json_tag": "warningThreshold"
        },
        "WindowSize": {
          "name": "WindowSize",
          "description": "Stream alert rule metric window size",
          "json_tag": "windowSize"
        }
      }
    },
    "StreamAsset": {
      "type_name": "StreamAsset",
      "description": "StreamAsset Stream object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AttachmentStatus": {
          "name": "AttachmentStatus",
          "description": "",
          "json_tag": "attachmentStatus"
        },
        "Href": {
          "name": "Href",
          "description": "Stream Asset URI",
          "json_tag": "href"
        },
        "MetricsEnabled": {
          "name": "MetricsEnabled",
          "description": "enable metric",
          "json_tag": "metricsEnabled"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned access point identifier",
          "json_tag": "uuid"
        }
      }
    },
    "StreamAssetFilter": {
      "type_name": "StreamAssetFilter",
      "description": "StreamAssetFilter struct for StreamAssetFilter",
      "fields": {
        "StreamAssetOrFilter": {
          "name": "StreamAssetOrFilter",
          "description": ""
        },
        "StreamAssetSimpleExpression": {
          "name": "StreamAssetSimpleExpression",
          "description": ""
        }
      }
    },
    "StreamAssetFilters": {
      "type_name": "StreamAssetFilters",
      "description": "StreamAssetFilters struct for StreamAssetFilters",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "StreamAssetOrFilter": {
      "type_name": "StreamAssetOrFilter",
      "description": "StreamAssetOrFilter struct for StreamAssetOrFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "StreamAssetPutRequest": {
      "type_name": "StreamAssetPutRequest",
      "description": "StreamAssetPutRequest Update Stream Asset",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "MetricsEnabled": {
          "name": "MetricsEnabled",
          "description": "enable metric",
          "json_tag": "metricsEnabled"
        }
      }
    },
    "StreamAssetSearchRequest": {
      "type_name": "StreamAssetSearchRequest",
      "description": "StreamAssetSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "StreamAssetSimpleExpression": {
      "type_name": "StreamAssetSimpleExpression",
      "description": "StreamAssetSimpleExpression struct for StreamAssetSimpleExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal  * `!=` - not equal  * `\u003e` - greater than  * `\u003e=` - greater than or equal to  * `\u003c` - less than  * `\u003c=` - less than or equal to  * `[NOT] BETWEEN` - (not) between  * `[NOT] LIKE` - (not) like  * `[NOT] IN` - (not) in  * `ILIKE` - case-insensitive like",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/uuid` - Asset uuid  * `/streamUuid` - Stream uuid  * `/projectId` - Asset projectId  * `/_*` - all-category search",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "StreamAssetSortCriteria": {
      "type_name": "StreamAssetSortCriteria",
      "description": "StreamAssetSortCriteria struct for StreamAssetSortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "StreamFilter": {
      "type_name": "StreamFilter",
      "description": "StreamFilter struct for StreamFilter",
      "fields": {
        "StreamFilterOrFilter": {
          "name": "StreamFilterOrFilter",
          "description": ""
        },
        "StreamFilterSimpleExpression": {
          "name": "StreamFilterSimpleExpression",
          "description": ""
        }
      }
    },
    "StreamFilterOrFilter": {
      "type_name": "StreamFilterOrFilter",
      "description": "StreamFilterOrFilter struct for StreamFilterOrFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "StreamFilterSimpleExpression": {
      "type_name": "StreamFilterSimpleExpression",
      "description": "StreamFilterSimpleExpression struct for StreamFilterSimpleExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal  * `in` - in  * `LIKE` - case-sensitive like  * `ILIKE` - case-insensitive like",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/subject` - subject  * `/type` - type",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "### Supported event or metric names to use on filters with property /type:   * `*` - all events or metrics   * `equinix.fabric.port.*` - port events or metrics   * `equinix.fabric.connection.*` - connection events or metrics   * `equinix.fabric.router.*` - cloud router events   * `equinix.fabric.metro.*` - metro metrics   * `equinix.fabric.network.*` - network events   * `equinix.fabric.service_token.*` - service token events   * `equinix.network_edge.*` - network edge events   * `equinix.network_edge.acl.*` - network edge acl events   * `equinix.network_edge.device.*` - network edge device events   * `equinix.access_manager.*` - identity access manager events   * `equinix.access_manager.user.role.*` - identity access manager user role events ### Supported event or metric names to use on filters with property /subject:   * `*` - all events or metrics   * `/fabric/v4/ports/\u003cuuid\u003e` - port events or metrics   * `/fabric/v4/connections/\u003cuuid\u003e` - connection events or metrics   * `/fabric/v4/routers/\u003cuuid\u003e` - cloud router events   * `/fabric/v4/metros/\u003cmetroCode\u003e` - metro metrics   * `/fabric/v4/networks/\u003cuuid\u003e` - network events   * `/fabric/v4/tokens/\u003cuuid\u003e` - service token events   * `/ne/v1/acl/\u003cuuid\u003e` - network edge acl events   * `/ne/v1/devices/\u003cuuid\u003e` - network edge device events   * `/am/v2/users/\u003cuuid\u003e/roleAssignments/\u003cuuid\u003e` - identity access manager events",
          "json_tag": "values"
        }
      }
    },
    "StreamPostRequest": {
      "type_name": "StreamPostRequest",
      "description": "StreamPostRequest Create Stream",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided stream description",
          "json_tag": "description"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided stream name",
          "json_tag": "name"
        },
        "Project": {
          "name": "Project",
          "description": "",
          "json_tag": "project"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "StreamPutRequest": {
      "type_name": "StreamPutRequest",
      "description": "StreamPutRequest Update Stream",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided stream description",
          "json_tag": "description"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided stream name",
          "json_tag": "name"
        }
      }
    },
    "StreamSubscription": {
      "type_name": "StreamSubscription",
      "description": "StreamSubscription Stream Subscription object",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ChangeLog": {
          "name": "ChangeLog",
          "description": "",
          "json_tag": "changeLog"
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided subscription description",
          "json_tag": "description"
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Stream subscription enabled status",
          "json_tag": "enabled"
        },
        "EventSelector": {
          "name": "EventSelector",
          "description": "",
          "json_tag": "eventSelector"
        },
        "Href": {
          "name": "Href",
          "description": "Stream Subscription URI",
          "json_tag": "href"
        },
        "MetricSelector": {
          "name": "MetricSelector",
          "description": "",
          "json_tag": "metricSelector"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided subscription name",
          "json_tag": "name"
        },
        "Operation": {
          "name": "Operation",
          "description": "",
          "json_tag": "operation"
        },
        "Sink": {
          "name": "Sink",
          "description": "",
          "json_tag": "sink"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned access point identifier",
          "json_tag": "uuid"
        }
      }
    },
    "StreamSubscriptionFilter": {
      "type_name": "StreamSubscriptionFilter",
      "description": "StreamSubscriptionFilter struct for StreamSubscriptionFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "StreamSubscriptionOperation": {
      "type_name": "StreamSubscriptionOperation",
      "description": "StreamSubscriptionOperation Stream subscription operational information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "AlertsDeliveredCount": {
          "name": "AlertsDeliveredCount",
          "description": "count of delivered alerts",
          "json_tag": "alertsDeliveredCount"
        },
        "Errors": {
          "name": "Errors",
          "description": "List of error information for stream subscription delivery",
          "json_tag": "errors"
        },
        "EventsDeliveredCount": {
          "name": "EventsDeliveredCount",
          "description": "count of delivered events",
          "json_tag": "eventsDeliveredCount"
        },
        "LastSuccessfulDeliveryDateTime": {
          "name": "LastSuccessfulDeliveryDateTime",
          "description": "last successful date time of delivered event, metric, or alert",
          "json_tag": "lastSuccessfulDeliveryDateTime"
        },
        "MetricsDeliveredCount": {
          "name": "MetricsDeliveredCount",
          "description": "count of delivered metrics",
          "json_tag": "metricsDeliveredCount"
        },
        "SuspendedDateTime": {
          "name": "SuspendedDateTime",
          "description": "suspended date time of stream subscription delivery for event, metric, or alert",
          "json_tag": "suspendedDateTime"
        }
      }
    },
    "StreamSubscriptionOperationAdditionalInfo": {
      "type_name": "StreamSubscriptionOperationAdditionalInfo",
      "description": "StreamSubscriptionOperationAdditionalInfo External error information from subscription sink",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Property": {
          "name": "Property",
          "description": "Additional attribute for error information",
          "json_tag": "property"
        },
        "Reason": {
          "name": "Reason",
          "description": "HTTP error message response from sink type if error occurred",
          "json_tag": "reason"
        },
        "StatusCode": {
          "name": "StatusCode",
          "description": "HTTP error status code response from sink type if error occurred",
          "json_tag": "statusCode"
        }
      }
    },
    "StreamSubscriptionOperationErrors": {
      "type_name": "StreamSubscriptionOperationErrors",
      "description": "StreamSubscriptionOperationErrors Error information for stream subscription delivery",
      "fields": {
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DateTime": {
          "name": "DateTime",
          "description": "Equinix Observability error date time",
          "json_tag": "dateTime"
        },
        "ErrorCode": {
          "name": "ErrorCode",
          "description": "Equinix Observability error code",
          "json_tag": "errorCode"
        },
        "ErrorMessage": {
          "name": "ErrorMessage",
          "description": "Equinix Observability error message",
          "json_tag": "errorMessage"
        }
      }
    },
    "StreamSubscriptionPostRequest": {
      "type_name": "StreamSubscriptionPostRequest",
      "description": "StreamSubscriptionPostRequest Create Stream Subscription",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided stream subscription description",
          "json_tag": "description"
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Stream subscription enabled status",
          "json_tag": "enabled"
        },
        "EventSelector": {
          "name": "EventSelector",
          "description": "",
          "json_tag": "eventSelector"
        },
        "MetricSelector": {
          "name": "MetricSelector",
          "description": "",
          "json_tag": "metricSelector"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided stream subscription name",
          "json_tag": "name"
        },
        "Sink": {
          "name": "Sink",
          "description": "",
          "json_tag": "sink"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "StreamSubscriptionPutRequest": {
      "type_name": "StreamSubscriptionPutRequest",
      "description": "StreamSubscriptionPutRequest Update Stream Subscription",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Description": {
          "name": "Description",
          "description": "Customer-provided stream subscription description",
          "json_tag": "description"
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Stream subscription enabled status",
          "json_tag": "enabled"
        },
        "EventSelector": {
          "name": "EventSelector",
          "description": "",
          "json_tag": "eventSelector"
        },
        "Filters": {
          "name": "Filters",
          "description": "",
          "json_tag": "filters"
        },
        "MetricSelector": {
          "name": "MetricSelector",
          "description": "",
          "json_tag": "metricSelector"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-provided stream subscription name",
          "json_tag": "name"
        },
        "Sink": {
          "name": "Sink",
          "description": "",
          "json_tag": "sink"
        }
      }
    },
    "StreamSubscriptionSelector": {
      "type_name": "StreamSubscriptionSelector",
      "description": "StreamSubscriptionSelector struct for StreamSubscriptionSelector",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Except": {
          "name": "Except",
          "description": "",
          "json_tag": "except"
        },
        "Include": {
          "name": "Include",
          "description": "",
          "json_tag": "include"
        }
      }
    },
    "StreamSubscriptionSink": {
      "type_name": "StreamSubscriptionSink",
      "description": "StreamSubscriptionSink Create Stream destination",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "BatchEnabled": {
          "name": "BatchEnabled",
          "description": "batch mode on/off",
          "json_tag": "batchEnabled"
        },
        "BatchSizeMax": {
          "name": "BatchSizeMax",
          "description": "maximum batch size",
          "json_tag": "batchSizeMax"
        },
        "BatchWaitTimeMax": {
          "name": "BatchWaitTimeMax",
          "description": "maximum batch waiting time",
          "json_tag": "batchWaitTimeMax"
        },
        "Credential": {
          "name": "Credential",
          "description": "",
          "json_tag": "credential"
        },
        "Host": {
          "name": "Host",
          "description": "sink host",
          "json_tag": "host"
        },
        "Settings": {
          "name": "Settings",
          "description": "",
          "json_tag": "settings"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uri": {
          "name": "Uri",
          "description": "any publicly reachable http endpoint",
          "json_tag": "uri"
        }
      }
    },
    "StreamSubscriptionSinkCredential": {
      "type_name": "StreamSubscriptionSinkCredential",
      "description": "StreamSubscriptionSinkCredential Stream subscription sink credentials",
      "fields": {
        "AccessToken": {
          "name": "AccessToken",
          "description": "passed as Authorization header value",
          "json_tag": "accessToken"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ApiKey": {
          "name": "ApiKey",
          "description": "passed as Authorization header value",
          "json_tag": "apiKey"
        },
        "IntegrationKey": {
          "name": "IntegrationKey",
          "description": "passed as Authorization header value",
          "json_tag": "integrationKey"
        },
        "Password": {
          "name": "Password",
          "description": "passed as Authorization header value",
          "json_tag": "password"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Username": {
          "name": "Username",
          "description": "passed as Authorization header value",
          "json_tag": "username"
        }
      }
    },
    "StreamSubscriptionSinkSetting": {
      "type_name": "StreamSubscriptionSinkSetting",
      "description": "StreamSubscriptionSinkSetting Stream subscription sink settings",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "ApplicationKey": {
          "name": "ApplicationKey",
          "description": "Application key",
          "json_tag": "applicationKey"
        },
        "EventIndex": {
          "name": "EventIndex",
          "description": "event index",
          "json_tag": "eventIndex"
        },
        "EventUri": {
          "name": "EventUri",
          "description": "event uri",
          "json_tag": "eventUri"
        },
        "Format": {
          "name": "Format",
          "description": "",
          "json_tag": "format"
        },
        "MetricIndex": {
          "name": "MetricIndex",
          "description": "metric index",
          "json_tag": "metricIndex"
        },
        "MetricUri": {
          "name": "MetricUri",
          "description": "metric uri",
          "json_tag": "metricUri"
        },
        "Source": {
          "name": "Source",
          "description": "source",
          "json_tag": "source"
        }
      }
    },
    "SubInterface": {
      "type_name": "SubInterface",
      "description": "SubInterface Sub Interface information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Name": {
          "name": "Name",
          "description": "name of subinterafce of a port",
          "json_tag": "name"
        },
        "Unit": {
          "name": "Unit",
          "description": "",
          "json_tag": "unit"
        }
      }
    },
    "Subnet": {
      "type_name": "Subnet",
      "description": "Subnet struct for Subnet",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Id": {
          "name": "Id",
          "description": "",
          "json_tag": "id"
        },
        "Ipv4": {
          "name": "Ipv4",
          "description": "",
          "json_tag": "ipv4"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "VpcId": {
          "name": "VpcId",
          "description": "",
          "json_tag": "vpcId"
        }
      }
    },
    "SubscriptionAsset": {
      "type_name": "SubscriptionAsset",
      "description": "SubscriptionAsset Asset information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Bandwidth of the asset in Mbps",
          "json_tag": "bandwidth"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "Type": {
          "name": "Type",
          "description": "Type of the subscription asset ( XF_ROUTER ,IP_VC, IPWAN_VC )",
          "json_tag": "type"
        }
      }
    },
    "SubscriptionEntitlementResponse": {
      "type_name": "SubscriptionEntitlementResponse",
      "description": "SubscriptionEntitlementResponse Subscription entitlement",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Asset": {
          "name": "Asset",
          "description": "",
          "json_tag": "asset"
        },
        "QuantityAvailable": {
          "name": "QuantityAvailable",
          "description": "Quantity available from the entitlement",
          "json_tag": "quantityAvailable"
        },
        "QuantityConsumed": {
          "name": "QuantityConsumed",
          "description": "Quantity consumed from the entitlement",
          "json_tag": "quantityConsumed"
        },
        "QuantityEntitled": {
          "name": "QuantityEntitled",
          "description": "Quantity entitled for the subscription",
          "json_tag": "quantityEntitled"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Subscription Entitlement Id",
          "json_tag": "uuid"
        }
      }
    },
    "SubscriptionResponse": {
      "type_name": "SubscriptionResponse",
      "description": "SubscriptionResponse Subscription Response",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Changelog": {
          "name": "Changelog",
          "description": "",
          "json_tag": "changelog"
        },
        "Entitlements": {
          "name": "Entitlements",
          "description": "List of entitlements associated with the subscription",
          "json_tag": "entitlements"
        },
        "Href": {
          "name": "Href",
          "description": "Subscription URL",
          "json_tag": "href"
        },
        "IsAutoRenew": {
          "name": "IsAutoRenew",
          "description": "Is Auto Renewal Enabled",
          "json_tag": "isAutoRenew"
        },
        "Marketplace": {
          "name": "Marketplace",
          "description": "",
          "json_tag": "marketplace"
        },
        "MetroCodes": {
          "name": "MetroCodes",
          "description": "List of available metro",
          "json_tag": "metroCodes"
        },
        "OfferId": {
          "name": "OfferId",
          "description": "Marketplace Offer Id",
          "json_tag": "offerId"
        },
        "OfferType": {
          "name": "OfferType",
          "description": "",
          "json_tag": "offerType"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Trial": {
          "name": "Trial",
          "description": "",
          "json_tag": "trial"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Unique identifier of the Subscription",
          "json_tag": "uuid"
        }
      }
    },
    "SubscriptionRouterPackageType": {
      "type_name": "SubscriptionRouterPackageType",
      "description": "SubscriptionRouterPackageType Cloud Router Package Type",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Code": {
          "name": "Code",
          "description": "",
          "json_tag": "code"
        }
      }
    },
    "SubscriptionTrial": {
      "type_name": "SubscriptionTrial",
      "description": "SubscriptionTrial Free Trial Subscription",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Free Trial Enabled",
          "json_tag": "enabled"
        },
        "ExpiryDateTime": {
          "name": "ExpiryDateTime",
          "description": "Free Trial Expiry Date",
          "json_tag": "expiryDateTime"
        }
      }
    },
    "TimeServiceFilter": {
      "type_name": "TimeServiceFilter",
      "description": "TimeServiceFilter struct for TimeServiceFilter",
      "fields": {
        "TimeServiceOrFilter": {
          "name": "TimeServiceOrFilter",
          "description": ""
        },
        "TimeServiceSimpleExpression": {
          "name": "TimeServiceSimpleExpression",
          "description": ""
        }
      }
    },
    "TimeServiceFilters": {
      "type_name": "TimeServiceFilters",
      "description": "TimeServiceFilters struct for TimeServiceFilters",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "TimeServiceOrFilter": {
      "type_name": "TimeServiceOrFilter",
      "description": "TimeServiceOrFilter struct for TimeServiceOrFilter",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Or": {
          "name": "Or",
          "description": "",
          "json_tag": "or"
        }
      }
    },
    "TimeServicePrice": {
      "type_name": "TimeServicePrice",
      "description": "TimeServicePrice Time Service Product configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Connection": {
          "name": "Connection",
          "description": "",
          "json_tag": "connection"
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "TimeServicePriceConnection": {
      "type_name": "TimeServicePriceConnection",
      "description": "TimeServicePriceConnection Time Service Price Connection configuration",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        }
      }
    },
    "TimeServicePriceConnectionASide": {
      "type_name": "TimeServicePriceConnectionASide",
      "description": "TimeServicePriceConnectionASide Time Service Price Connection ASide configuration",
      "fields": {
        "AccessPoint": {
          "name": "AccessPoint",
          "description": "",
          "json_tag": "accessPoint"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        }
      }
    },
    "TimeServicePriceConnectionAccessPoint": {
      "type_name": "TimeServicePriceConnectionAccessPoint",
      "description": "TimeServicePriceConnectionAccessPoint Time Service Price Connection Access Point configuration",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        }
      }
    },
    "TimeServiceSimpleExpression": {
      "type_name": "TimeServiceSimpleExpression",
      "description": "TimeServiceSimpleExpression struct for TimeServiceSimpleExpression",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Possible operators to use on filters:  * `=` - equal  * `!=` - not equal  * `[NOT] BETWEEN` - (not) between  * `[NOT] LIKE` - (not) like  * `[NOT] IN` - (not) in  * `ILIKE` - case-insensitive like",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Possible field names to use on filters:  * `/project/projectId` - project id (mandatory)  * `/name` - Precision Time Service name  * `/uuid` - Precision Time Service uuid  * `/type` - Precision Time Service protocol  * `/state` - Precision Time Service status  * `/account/accountNumber` - Precision Time Service account number  * `/package/code` - Precision Time Service package  * `/_*` - all-category search",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "",
          "json_tag": "values"
        }
      }
    },
    "TimeServiceSortCriteria": {
      "type_name": "TimeServiceSortCriteria",
      "description": "TimeServiceSortCriteria struct for TimeServiceSortCriteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Direction": {
          "name": "Direction",
          "description": "",
          "json_tag": "direction"
        },
        "Property": {
          "name": "Property",
          "description": "",
          "json_tag": "property"
        }
      }
    },
    "TimeServicesSearchRequest": {
      "type_name": "TimeServicesSearchRequest",
      "description": "TimeServicesSearchRequest Search requests containing criteria",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        },
        "Pagination": {
          "name": "Pagination",
          "description": "",
          "json_tag": "pagination"
        },
        "Sort": {
          "name": "Sort",
          "description": "",
          "json_tag": "sort"
        }
      }
    },
    "TopologyProperties": {
      "type_name": "TopologyProperties",
      "description": "TopologyProperties TopologyProperties is a schema that defines the properties of a topology in the orchestrator. It includes the element ID and any dependencies that the topology may have.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "DependsOn": {
          "name": "DependsOn",
          "description": "",
          "json_tag": "dependsOn"
        },
        "ElementId": {
          "name": "ElementId",
          "description": "",
          "json_tag": "elementId"
        }
      }
    },
    "VPC": {
      "type_name": "VPC",
      "description": "VPC struct for VPC",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Id": {
          "name": "Id",
          "description": "",
          "json_tag": "id"
        },
        "Name": {
          "name": "Name",
          "description": "",
          "json_tag": "name"
        },
        "State": {
          "name": "State",
          "description": "",
          "json_tag": "state"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        }
      }
    },
    "ValidateConnectionResponse": {
      "type_name": "ValidateConnectionResponse",
      "description": "ValidateConnectionResponse Validate Connection specification",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Connection bandwidth in Mbps",
          "json_tag": "bandwidth"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned connection identifier",
          "json_tag": "uuid"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "ValidateRequest": {
      "type_name": "ValidateRequest",
      "description": "ValidateRequest Validate connection auth api key or vlan",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Filter": {
          "name": "Filter",
          "description": "",
          "json_tag": "filter"
        }
      }
    },
    "ValidateRequestFilter": {
      "type_name": "ValidateRequestFilter",
      "description": "ValidateRequestFilter Filters",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "And": {
          "name": "And",
          "description": "",
          "json_tag": "and"
        }
      }
    },
    "ValidateRequestFilterAnd": {
      "type_name": "ValidateRequestFilterAnd",
      "description": "ValidateRequestFilterAnd struct for ValidateRequestFilterAnd",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Operator": {
          "name": "Operator",
          "description": "Type of operation",
          "json_tag": "operator"
        },
        "Property": {
          "name": "Property",
          "description": "Path to property",
          "json_tag": "property"
        },
        "Values": {
          "name": "Values",
          "description": "Values for the given property",
          "json_tag": "values"
        }
      }
    },
    "ValidateSubnetResponse": {
      "type_name": "ValidateSubnetResponse",
      "description": "ValidateSubnetResponse ValidateResponse",
      "fields": {
        "AdditionalInfo": {
          "name": "AdditionalInfo",
          "description": "Additional information",
          "json_tag": "additionalInfo"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        }
      }
    },
    "VirtualConnectionPrice": {
      "type_name": "VirtualConnectionPrice",
      "description": "VirtualConnectionPrice Virtual Connection Product configuration",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "",
          "json_tag": "bandwidth"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Either uuid or rest of attributes are required",
          "json_tag": "uuid"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "VirtualConnectionPriceASide": {
      "type_name": "VirtualConnectionPriceASide",
      "description": "VirtualConnectionPriceASide struct for VirtualConnectionPriceASide",
      "fields": {
        "AccessPoint": {
          "name": "AccessPoint",
          "description": "",
          "json_tag": "accessPoint"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        }
      }
    },
    "VirtualConnectionPriceASideAccessPoint": {
      "type_name": "VirtualConnectionPriceASideAccessPoint",
      "description": "VirtualConnectionPriceASideAccessPoint struct for VirtualConnectionPriceASideAccessPoint",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Port": {
          "name": "Port",
          "description": "",
          "json_tag": "port"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "VirtualConnectionPriceASideAccessPointPort": {
      "type_name": "VirtualConnectionPriceASideAccessPointPort",
      "description": "VirtualConnectionPriceASideAccessPointPort struct for VirtualConnectionPriceASideAccessPointPort",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Settings": {
          "name": "Settings",
          "description": "",
          "json_tag": "settings"
        }
      }
    },
    "VirtualConnectionPriceASideAccessPointPortSettings": {
      "type_name": "VirtualConnectionPriceASideAccessPointPortSettings",
      "description": "VirtualConnectionPriceASideAccessPointPortSettings struct for VirtualConnectionPriceASideAccessPointPortSettings",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Buyout": {
          "name": "Buyout",
          "description": "",
          "json_tag": "buyout"
        }
      }
    },
    "VirtualConnectionPriceZSide": {
      "type_name": "VirtualConnectionPriceZSide",
      "description": "VirtualConnectionPriceZSide struct for VirtualConnectionPriceZSide",
      "fields": {
        "AccessPoint": {
          "name": "AccessPoint",
          "description": "",
          "json_tag": "accessPoint"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        }
      }
    },
    "VirtualConnectionPriceZSideAccessPoint": {
      "type_name": "VirtualConnectionPriceZSideAccessPoint",
      "description": "VirtualConnectionPriceZSideAccessPoint struct for VirtualConnectionPriceZSideAccessPoint",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bridge": {
          "name": "Bridge",
          "description": "",
          "json_tag": "bridge"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "Port": {
          "name": "Port",
          "description": "",
          "json_tag": "port"
        },
        "Profile": {
          "name": "Profile",
          "description": "",
          "json_tag": "profile"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "VirtualConnectionPriceZSideAccessPointBridge": {
      "type_name": "VirtualConnectionPriceZSideAccessPointBridge",
      "description": "VirtualConnectionPriceZSideAccessPointBridge struct for VirtualConnectionPriceZSideAccessPointBridge",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Package": {
          "name": "Package",
          "description": "",
          "json_tag": "package"
        }
      }
    },
    "VirtualConnectionPriceZSideAccessPointBridgePackage": {
      "type_name": "VirtualConnectionPriceZSideAccessPointBridgePackage",
      "description": "VirtualConnectionPriceZSideAccessPointBridgePackage struct for VirtualConnectionPriceZSideAccessPointBridgePackage",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Code": {
          "name": "Code",
          "description": "",
          "json_tag": "code"
        }
      }
    },
    "VirtualConnectionPriceZSideAccessPointProfile": {
      "type_name": "VirtualConnectionPriceZSideAccessPointProfile",
      "description": "VirtualConnectionPriceZSideAccessPointProfile struct for VirtualConnectionPriceZSideAccessPointProfile",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Uuid": {
          "name": "Uuid",
          "description": "",
          "json_tag": "uuid"
        }
      }
    },
    "VirtualConnectionSide": {
      "type_name": "VirtualConnectionSide",
      "description": "VirtualConnectionSide Fabric Connection access point object.",
      "fields": {
        "AccessPoint": {
          "name": "AccessPoint",
          "description": "",
          "json_tag": "accessPoint"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        }
      }
    },
    "VirtualConnectionTimeServiceResponse": {
      "type_name": "VirtualConnectionTimeServiceResponse",
      "description": "VirtualConnectionTimeServiceResponse Fabric Connection Precision Time Service Response Object",
      "fields": {
        "ASide": {
          "name": "ASide",
          "description": "",
          "json_tag": "aSide"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Connection URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "Connection Type.",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Connection UUID.",
          "json_tag": "uuid"
        },
        "ZSide": {
          "name": "ZSide",
          "description": "",
          "json_tag": "zSide"
        }
      }
    },
    "VirtualConnectionUuid": {
      "type_name": "VirtualConnectionUuid",
      "description": "VirtualConnectionUuid UUID of the Fabric Connection Instance",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "Connection URI",
          "json_tag": "href"
        },
        "Type": {
          "name": "Type",
          "description": "Connection Type",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Connection UUID.",
          "json_tag": "uuid"
        }
      }
    },
    "VirtualDevice": {
      "type_name": "VirtualDevice",
      "description": "VirtualDevice Virtual Device AccessPoint Information",
      "fields": {
        "Account": {
          "name": "Account",
          "description": "",
          "json_tag": "account"
        },
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Cluster": {
          "name": "Cluster",
          "description": "Virtual Device Cluster Information",
          "json_tag": "cluster"
        },
        "Href": {
          "name": "Href",
          "description": "Virtual Device URI",
          "json_tag": "href"
        },
        "Name": {
          "name": "Name",
          "description": "Customer-assigned Virtual Device name",
          "json_tag": "name"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned Virtual Device identifier",
          "json_tag": "uuid"
        }
      }
    },
    "VirtualDeviceInterface": {
      "type_name": "VirtualDeviceInterface",
      "description": "VirtualDeviceInterface Virtual Device Interface Information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Id": {
          "name": "Id",
          "description": "Network Edge assigned identifier",
          "json_tag": "id"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Interface identifier",
          "json_tag": "uuid"
        }
      }
    },
    "VirtualNetwork": {
      "type_name": "VirtualNetwork",
      "description": "VirtualNetwork Virtual Network Information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "The Canonical URL at which the resource resides.",
          "json_tag": "href"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Equinix-assigned Virtual Network identifier",
          "json_tag": "uuid"
        }
      }
    },
    "VirtualPortConfiguration": {
      "type_name": "VirtualPortConfiguration",
      "description": "VirtualPortConfiguration Port configuration.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Buyout": {
          "name": "Buyout",
          "description": "Buyout (true) or standard (false) configuration of the port at this access point. \u003cbr\u003e Buyout ports offer free, unlimited connections. Standard ports do not. The default is false.",
          "json_tag": "buyout"
        }
      }
    },
    "VirtualPortLocation": {
      "type_name": "VirtualPortLocation",
      "description": "VirtualPortLocation Geographic data for the port.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Ibx": {
          "name": "Ibx",
          "description": "Code assigned to the Equinix International Business Exchange (IBX) data center from which the port is ordered. \u003cbr\u003e The port might be in a different location.",
          "json_tag": "ibx"
        }
      }
    },
    "VirtualPortPrice": {
      "type_name": "VirtualPortPrice",
      "description": "VirtualPortPrice Preferences and settings for a virtual port connected to an internet service provider (ISP) or other Equinix platform entity.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Bandwidth": {
          "name": "Bandwidth",
          "description": "Aggregated data transfer capacity,  expressed as follows \u003cbr\u003e -\u003e Mbps, megabits (1 million bits) per second \u003cbr\u003e -\u003e Gbps, gigabits (1 billion bits) per second \u003cbr\u003e Bandwidth must be divisible by physicalPortsQuantity.",
          "json_tag": "bandwidth"
        },
        "ConnectivitySource": {
          "name": "ConnectivitySource",
          "description": "",
          "json_tag": "connectivitySource"
        },
        "Lag": {
          "name": "Lag",
          "description": "",
          "json_tag": "lag"
        },
        "Location": {
          "name": "Location",
          "description": "",
          "json_tag": "location"
        },
        "PhysicalPortsQuantity": {
          "name": "PhysicalPortsQuantity",
          "description": "Number of physical ports requested. The defaults is 1.",
          "json_tag": "physicalPortsQuantity"
        },
        "Redundancy": {
          "name": "Redundancy",
          "description": "",
          "json_tag": "redundancy"
        },
        "ServiceType": {
          "name": "ServiceType",
          "description": "",
          "json_tag": "serviceType"
        },
        "Settings": {
          "name": "Settings",
          "description": "",
          "json_tag": "settings"
        },
        "Type": {
          "name": "Type",
          "description": "",
          "json_tag": "type"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "Unique identifier assigned to the virtual port. Either the uuid or the remaining attributes must be supplied.",
          "json_tag": "uuid"
        }
      }
    },
    "VirtualPortRedundancy": {
      "type_name": "VirtualPortRedundancy",
      "description": "VirtualPortRedundancy Specifications for redundant connections, which improve service continuity by routing traffic to secondary ports when primary ports are unavailable. \u003cbr\u003e Redundancy increases resilience and boosts site reliability scores.",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Enabled": {
          "name": "Enabled",
          "description": "Parameter showing whether redundancy is mandatory. The default is false.",
          "json_tag": "enabled"
        }
      }
    },
    "VpicInterface": {
      "type_name": "VpicInterface",
      "description": "VpicInterface MCN VPIC Interface Information",
      "fields": {
        "AdditionalProperties": {
          "name": "AdditionalProperties",
          "description": ""
        },
        "Href": {
          "name": "Href",
          "description": "The Canonical URL at which the resource resides.",
          "json_tag": "href"
        },
        "Uuid": {
          "name": "Uuid",
          "description": "MCN assigned VPIC Interface Identifier",
          "json_tag": "uuid"
        }
      }
    },
    "formFile": {
      "type_name": "formFile",
      "fields": {
        "fileBytes": {
          "name": "fileBytes",
          "description": ""
        },
        "fileName": {
          "name": "fileName",
          "description": ""
        },
        "formFileName": {
          "name": "formFileName",
          "description": ""
        }
      }
    },
    "service": {
      "type_name": "service",
      "fields": {
        "client": {
          "name": "client",
          "description": ""
        }
      }
    }
  }
}